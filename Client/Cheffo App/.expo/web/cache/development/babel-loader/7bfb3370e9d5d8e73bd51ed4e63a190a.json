{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\asafs\\\\Documents\\\\GitHub\\\\reactHomeals\\\\helpers\\\\ImagePicker.js\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport { Avatar, Card, Title, Paragraph, IconButton, Menu, Divider, Provider, Button } from 'react-native-paper';\nimport * as ImagePicker from 'expo-image-picker';\nimport { AntDesign, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Camera } from 'expo-camera';\nimport React, { useState, useEffect } from 'react';\nimport { useUserContext } from \"../src/UserContext\";\nvar apiURLputUser = \"http://192.168.5.111:50247/api/User/putUser/\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedImage = _useState2[0],\n      setSelectedImage = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hasPermission = _useState4[0],\n      setHasPermission = _useState4[1];\n\n  var _useState5 = useState(Camera.Constants.Type.back),\n      _useState6 = _slicedToArray(_useState5, 2),\n      type = _useState6[0],\n      setType = _useState6[1];\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      openCamera = _React$useState2[0],\n      setopenCamera = _React$useState2[1];\n\n  var _useUserContext = useUserContext(),\n      updateImage = _useUserContext.updateImage,\n      currentUser = _useUserContext.currentUser,\n      fireStoreImg = _useUserContext.fireStoreImg,\n      getFireStoreImg = _useUserContext.getFireStoreImg;\n\n  var openImagePickerAsync = function openImagePickerAsync() {\n    var permissionResult, pickerResult;\n    return _regeneratorRuntime.async(function openImagePickerAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 2:\n            permissionResult = _context.sent;\n\n            if (!(permissionResult.granted === false)) {\n              _context.next = 6;\n              break;\n            }\n\n            alert(\"Permission to access camera roll is required!\");\n            return _context.abrupt(\"return\");\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              base64: false,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 0\n            }));\n\n          case 8:\n            pickerResult = _context.sent;\n\n            if (!(pickerResult.cancelled === true)) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 11:\n            updateImage(pickerResult.uri);\n            setSelectedImage({\n              localUri: pickerResult.uri\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context2.sent;\n              status = _await$Camera$request.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var startCamera = function startCamera() {\n    setopenCamera({\n      uri: \"1\"\n    });\n  };\n\n  var takePicture = function takePicture() {\n    var photo;\n    return _regeneratorRuntime.async(function takePicture$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            Vibration.vibrate();\n\n            if (!_this.camera) {\n              _context3.next = 9;\n              break;\n            }\n\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(_this.camera.takePictureAsync({\n              quality: 0.3\n            }));\n\n          case 4:\n            photo = _context3.sent;\n            updateImage(photo.uri);\n            setSelectedImage({\n              localUri: photo.uri\n            });\n            _context3.next = 10;\n            break;\n\n          case 9:\n            alert(\"Camera isn't ready\");\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (selectedImage !== null) {\n    fireStoreImg();\n    getFireStoreImg();\n  }\n\n  if (openCamera !== null) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, React.createElement(Camera, {\n      ref: function ref(_ref) {\n        _this.camera = _ref;\n      },\n      style: styles.cameraImage,\n      type: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, \" Flip \")), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        takePicture();\n      },\n      style: {\n        width: 70,\n        height: 70,\n        top: 330,\n        left: 144,\n        borderRadius: 50,\n        backgroundColor: '#1086f9a1'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, React.createElement(AntDesign, {\n    style: styles.camera,\n    name: \"camerao\",\n    size: 40,\n    color: \"black\",\n    title: \"Take picture\",\n    onPress: function onPress() {\n      startCamera();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    style: styles.gallery,\n    name: \"image-plus\",\n    size: 40,\n    color: \"black\",\n    title: \"Add Picture\",\n    onPress: function onPress() {\n      openImagePickerAsync();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  camera: {\n    position: 'absolute',\n    left: 66,\n    bottom: 34\n  },\n  gallery: {\n    position: 'absolute',\n    right: 66,\n    bottom: 34\n  },\n  smallImage: {\n    width: 350,\n    height: 450,\n    left: \"5%\",\n    resizeMode: \"contain\"\n  },\n  cameraImage: {\n    width: 350,\n    height: 450,\n    left: \"5%\",\n    resizeMode: \"contain\"\n  }\n});","map":{"version":3,"sources":["C:/Users/asafs/Documents/GitHub/reactHomeals/helpers/ImagePicker.js"],"names":["Avatar","Card","Title","Paragraph","IconButton","Menu","Divider","Provider","Button","ImagePicker","AntDesign","MaterialCommunityIcons","Camera","React","useState","useEffect","useUserContext","apiURLputUser","App","selectedImage","setSelectedImage","hasPermission","setHasPermission","Constants","Type","back","type","setType","openCamera","setopenCamera","updateImage","currentUser","fireStoreImg","getFireStoreImg","openImagePickerAsync","requestMediaLibraryPermissionsAsync","permissionResult","granted","alert","launchImageLibraryAsync","base64","allowsEditing","aspect","quality","pickerResult","cancelled","uri","localUri","requestPermissionsAsync","status","startCamera","takePicture","Vibration","vibrate","camera","takePictureAsync","photo","styles","container","ref","cameraImage","button","front","text","width","height","top","left","borderRadius","backgroundColor","gallery","StyleSheet","create","position","bottom","right","smallImage","resizeMode"],"mappings":"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","sourcesContent":["import { Image, StyleSheet, Text, TouchableOpacity, View, Vibration } from 'react-native'\r\nimport { Avatar, Card, Title, Paragraph, IconButton, Menu, Divider, Provider, Button } from 'react-native-paper';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { AntDesign, MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport { Camera } from 'expo-camera';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useUserContext } from \"../src/UserContext\"\r\n\r\nlet apiURLputUser = \"http://192.168.5.111:50247/api/User/putUser/\";\r\n\r\nexport default function App() {\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [hasPermission, setHasPermission] = useState(null);\r\n    const [type, setType] = useState(Camera.Constants.Type.back);\r\n    const [openCamera, setopenCamera] = React.useState(null);\r\n    const { updateImage, currentUser, fireStoreImg, getFireStoreImg } = useUserContext();\r\n\r\n\r\n\r\n\r\n    let openImagePickerAsync = async () => {\r\n        let permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n\r\n        if (permissionResult.granted === false) {\r\n            alert(\"Permission to access camera roll is required!\");\r\n            return;\r\n        }\r\n\r\n        let pickerResult = await ImagePicker.launchImageLibraryAsync({ base64: false, allowsEditing: true, aspect: [4, 3], quality: 0 });\r\n\r\n        if (pickerResult.cancelled === true) {\r\n            return;\r\n        }\r\n        updateImage(pickerResult.uri);\r\n        setSelectedImage({ localUri: pickerResult.uri });\r\n        /* fetch(apiURLputUser + pickerResult.uri + '/' + currentUser.uid + '/', {\r\n            method: 'PUT',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response=', response);\r\n                console.log('response.status', response.status);\r\n                console.log('response.ok', response.ok);\r\n                return response.json();\r\n            }) */\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const { status } = await Camera.requestPermissionsAsync();\r\n            setHasPermission(status === 'granted');\r\n        })();\r\n    }, []);\r\n\r\n    let startCamera = () => {\r\n        setopenCamera({ uri: \"1\" });\r\n    }\r\n\r\n    const takePicture = async () => {\r\n        Vibration.vibrate();\r\n        if (this.camera) {\r\n            let photo = await this.camera.takePictureAsync({ quality: 0.3 });\r\n            updateImage(photo.uri);\r\n            setSelectedImage({ localUri: photo.uri });\r\n        }\r\n        else { alert(\"Camera isn't ready\") }\r\n\r\n    }\r\n\r\n    if (selectedImage !== null) {\r\n        fireStoreImg();\r\n        getFireStoreImg();\r\n    }\r\n\r\n    if (openCamera !== null) {\r\n        return (\r\n            <View style={styles.container}>\r\n                <Camera ref={ref => { this.camera = ref; }} style={styles.cameraImage} type={type}>\r\n                    <View >\r\n                        <TouchableOpacity\r\n                            style={styles.button}\r\n                            onPress={() => {\r\n                                setType(\r\n                                    type === Camera.Constants.Type.back\r\n                                        ? Camera.Constants.Type.front\r\n                                        : Camera.Constants.Type.back\r\n                                );\r\n                            }}>\r\n                            <Text style={styles.text}> Flip </Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity\r\n                            onPress={() => { takePicture() }}\r\n                            style={{\r\n                                width: 70,\r\n                                height: 70,\r\n                                top: 330,\r\n                                left: 144,\r\n                                borderRadius: 50,\r\n                                backgroundColor: '#1086f9a1'\r\n                            }}\r\n                        />\r\n                    </View>\r\n                </Camera>\r\n            </View>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <View>\r\n            <View >\r\n                <AntDesign\r\n                    style={styles.camera}\r\n                    name=\"camerao\"\r\n                    size={40}\r\n                    color=\"black\"\r\n                    title=\"Take picture\"\r\n                    onPress={() => { startCamera() }}\r\n                />\r\n            </View>\r\n            <View >\r\n                <MaterialCommunityIcons\r\n                    style={styles.gallery}\r\n                    name=\"image-plus\"\r\n                    size={40}\r\n                    color=\"black\"\r\n                    title=\"Add Picture\"\r\n                    onPress={() => { openImagePickerAsync() }}\r\n                />\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    camera: {\r\n        position: 'absolute',\r\n        left: 66,\r\n        bottom: 34\r\n    },\r\n    gallery: {\r\n        position: 'absolute',\r\n        right: 66,\r\n        bottom: 34\r\n    },\r\n    smallImage: {\r\n        width: 350,\r\n        height: 450,\r\n        left: \"5%\",\r\n        resizeMode: \"contain\"\r\n    },\r\n\r\n    cameraImage: {\r\n        width: 350,\r\n        height: 450,\r\n        left: \"5%\",\r\n        resizeMode: \"contain\"\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}