{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\asafs\\\\Desktop\\\\homeals\\\\screens\\\\RegisterScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport fire from \"../fire\";\n\nvar handleSignup = function handleSignup() {\n  fire.auth().createUserWithEmailAndPassword(email, password).catch(function (err) {\n    switch (err.code) {\n      case \"autu/email-alredy-use\":\n      case \"autu/invalid-email\":\n        setEmailError(err.massege);\n        break;\n\n      case \"autu/weak-password\":\n        setPasswordError(err.massege);\n        break;\n    }\n  });\n};\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var onSignUpPressed = function onSignUpPressed() {\n    var nameError = nameValidator(name.value);\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError || nameError) {\n      setName(_objectSpread(_objectSpread({}, name), {}, {\n        error: nameError\n      }));\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    }\n\n    navigation.reset({\n      index: 0,\n      routes: [{\n        name: 'Dashboard'\n      }]\n    });\n  };\n\n  return React.createElement(Background, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    goBack: navigation.goBack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), React.createElement(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Create Account\"), React.createElement(TextInput, {\n    label: \"Name\",\n    returnKeyType: \"next\",\n    value: name.value,\n    onChangeText: function onChangeText(text) {\n      return setName({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!name.error,\n    errorText: name.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: onSignUpPressed,\n    style: {\n      marginTop: 24\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \"Sign Up\"), React.createElement(View, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Already have an account? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.replace('LoginScreen');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Login\"))));\n};\n\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"sources":["C:/Users/asafs/Desktop/homeals/screens/RegisterScreen.js"],"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","nameValidator","fire","handleSignup","auth","createUserWithEmailAndPassword","email","password","catch","err","code","setEmailError","massege","setPasswordError","RegisterScreen","navigation","value","error","name","setName","setEmail","setPassword","onSignUpPressed","nameError","emailError","passwordError","reset","index","routes","goBack","text","marginTop","styles","row","replace","link","StyleSheet","create","flexDirection","fontWeight","color","colors","primary"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { View, StyleSheet, TouchableOpacity } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport Background from '../components/Background'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport BackButton from '../components/BackButton'\nimport { theme } from '../core/theme'\nimport { emailValidator } from '../helpers/emailValidator'\nimport { passwordValidator } from '../helpers/passwordValidator'\nimport { nameValidator } from '../helpers/nameValidator'\nimport fire from '../fire'\n\nconst handleSignup = () => {\n  fire\n    .auth()\n    .createUserWithEmailAndPassword(email, password)\n    .catch(err => {\n      switch (err.code) {\n        case \"autu/email-alredy-use\":\n        case \"autu/invalid-email\":\n          setEmailError(err.massege)\n          break;\n        case \"autu/weak-password\":\n          setPasswordError(err.massege)\n          break;\n      }\n\n    });\n};\n\n\nconst RegisterScreen = ({ navigation } ) => {\n  const [name, setName] = useState({ value: '', error: '' })\n  const [email, setEmail] = useState({ value: '', error: '' })\n  const [password, setPassword] = useState({ value: '', error: '' })\n\n  const onSignUpPressed = () => {\n    const nameError = nameValidator(name.value)\n    const emailError = emailValidator(email.value)\n    const passwordError = passwordValidator(password.value)\n    if (emailError || passwordError || nameError) {\n      setName({ ...name, error: nameError })\n      setEmail({ ...email, error: emailError })\n      setPassword({ ...password, error: passwordError })\n      return\n    }\n    navigation.reset({\n      index: 0,\n      routes: [{ name: 'Dashboard' }],\n    })\n  }\n\n  return (\n    <Background>\n      <BackButton goBack={navigation.goBack} />\n      <Logo />\n      <Header>Create Account</Header>\n      <TextInput\n        label=\"Name\"\n        returnKeyType=\"next\"\n        value={name.value}\n        onChangeText={(text) => setName({ value: text, error: '' })}\n        error={!!name.error}\n        errorText={name.error}\n      />\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={(text) => setPassword({ value: text, error: '' })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n      />\n      <Button\n        mode=\"contained\"\n        onPress={onSignUpPressed}\n        style={{ marginTop: 24 }}\n      >\n        Sign Up\n      </Button>\n      <View style={styles.row}>\n        <Text>Already have an account? </Text>\n        <TouchableOpacity onPress={() => navigation.replace('LoginScreen')}>\n          <Text style={styles.link}>Login</Text>\n        </TouchableOpacity>\n      </View>\n    </Background>\n  )\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n})\n\nexport default RegisterScreen\n"]},"metadata":{},"sourceType":"module"}