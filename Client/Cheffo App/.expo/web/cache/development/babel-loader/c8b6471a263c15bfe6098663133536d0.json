{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shachar\\\\Desktop\\\\P\\\\reactHomeals\\\\src\\\\UserContext.js\";\nimport fire from \"../fire\";\nimport { auth } from 'firebase';\nimport React, { useContext, useState, useEffect } from 'react';\nimport dbFirestore from \"../fire\";\nimport { getDistanceFromLatLonInKm } from \"../helpers/calcDis\";\nimport { set } from 'ol/transform';\nimport { ScrollView } from 'react-native-gesture-handler';\nvar apiURLgetUser = \"http://192.168.31.156:50247/api/User/getUser/\";\nvar apiURLpostUser = \"http://192.168.31.156:50247/api/User/postUser/\";\nvar apiURLgetChefs = \"http://192.168.31.156:50247/api/Chef/getChefs/\";\nvar apiURLgetDishes = \"http://192.168.31.156:50247/api/Dish/getDishes/\";\nvar apiURLpostOrder = \"http://192.168.31.156:50247/api/Order/postOrder/\";\nvar apiURLgetOrder = \"http://192.168.31.156:50247/api/Order/getOrder/\";\nvar apiURLgetConnections = \"http://192.168.31.156:50247/api/Connection/getConnections/\";\nvar apiURLgetReviews = \"http://192.168.31.156:50247/api/Review/getReviews/\";\nvar UserContext = React.createContext();\nvar UserUpdateContext = React.createContext();\nexport function useUserContext() {\n  return useContext(UserContext);\n}\nexport function useUserUpdateContext() {\n  return useContext(UserUpdateContext);\n}\nexport function UserProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUser = _useState2[0],\n      setCurrentUser = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentChef = _useState4[0],\n      setCurrentChef = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentChefDishes = _useState6[0],\n      setCurrentChefDishes = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      chefsArr = _useState8[0],\n      setChefsArr = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      friendsArr = _useState10[0],\n      setFriendsArr = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      friendsArrDetails = _useState12[0],\n      setFriendsArrDetails = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      reviewsArr = _useState14[0],\n      setReviewsArr = _useState14[1];\n\n  var _useState15 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      name = _useState16[0],\n      setName = _useState16[1];\n\n  var _useState17 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState18 = _slicedToArray(_useState17, 2),\n      email = _useState18[0],\n      setEmail = _useState18[1];\n\n  var _useState19 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState20 = _slicedToArray(_useState19, 2),\n      password = _useState20[0],\n      setPassword = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      userID = _useState22[0],\n      setUserID = _useState22[1];\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      selectedImage = _useState24[0],\n      setSelectedImage = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      cart = _useState26[0],\n      setCart = _useState26[1];\n\n  var _useState27 = useState(26),\n      _useState28 = _slicedToArray(_useState27, 2),\n      sliderValue = _useState28[0],\n      setSliderValue = _useState28[1];\n\n  var _useState29 = useState([]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      orders = _useState30[0],\n      setOrders = _useState30[1];\n\n  var _useState31 = useState(''),\n      _useState32 = _slicedToArray(_useState31, 2),\n      friendsInDepth = _useState32[0],\n      setFriendsInDepth = _useState32[1];\n\n  var _useState33 = useState(''),\n      _useState34 = _slicedToArray(_useState33, 2),\n      friendsReviews = _useState34[0],\n      setFriendsReviews = _useState34[1];\n\n  var _useState35 = useState(''),\n      _useState36 = _slicedToArray(_useState35, 2),\n      tempUsers = _useState36[0],\n      setTempUsers = _useState36[1];\n\n  var delay = function delay(ms) {\n    return new Promise(function (res) {\n      return setTimeout(res, ms);\n    });\n  };\n\n  function fireStoreImg() {\n    dbFirestore.firestore().collection('userData').doc(currentUser.uid).set({\n      imgUrl: currentUser.img\n    }).then(function () {\n      console.log('User added!');\n    });\n  }\n\n  function getFireStoreImg() {\n    var temp, userImg;\n    return _regeneratorRuntime.async(function getFireStoreImg$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            temp = currentUser;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(dbFirestore.firestore().collection('userData').get());\n\n          case 3:\n            userImg = _context.sent;\n            console.log(userImg);\n            userImg.wP.docChanges.forEach(function (element) {\n              if (currentUser.uid == element.doc.key.path.segments[6]) temp.img = element.doc.proto.fields.imgUrl.stringValue;\n            });\n            console.log(temp);\n            setCurrentUser(temp);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function cartTotal(name, price, quantity) {\n    var tempCart;\n    var tempDish = {\n      Name: name,\n      Price: price,\n      Quantity: quantity\n    };\n    var flag = false;\n\n    if (cart) {\n      cart.map(function (item, key) {\n        if (item.Name == name) {\n          item.Quantity = quantity;\n          flag = true;\n          tempCart = cart;\n        }\n      });\n    } else {\n      setCart([tempDish]);\n      return;\n    }\n\n    if (!flag) {\n      tempCart = cart;\n      tempCart.push(tempDish);\n    }\n\n    setCart(tempCart);\n    console.log(cart);\n    console.log(tempDish);\n  }\n\n  function getOrders() {\n    fetch(apiURLgetOrder + currentUser.uid, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json; charset=UTF-8'\n      })\n    }).then(function (response) {\n      console.log('response.status', response.status);\n      return response.json();\n    }).then(function (data) {\n      setOrders(data);\n    }, function (error) {\n      console.log(\"err get=\", error);\n    });\n  }\n\n  function setOrder() {\n    var sum = 0;\n    var orderStr = '';\n    cart.forEach(function (element) {\n      if (element.Quantity != 0) {\n        sum += element.Quantity * element.Price;\n        orderStr += element.Quantity + 'x ' + element.Name + ' - ' + element.Quantity * element.Price + '; ';\n      }\n    });\n    var currentdate = new Date();\n    var datetime = currentdate.getDate() + \"/\" + (currentdate.getMonth() + 1) + \"/\" + currentdate.getFullYear() + \" - \" + currentdate.getHours() + \":\" + currentdate.getMinutes();\n    var newOrder = {\n      uid: currentUser.uid,\n      chefEmail: currentChef.Email,\n      orderTime: datetime,\n      orderDescription: orderStr,\n      totalPrice: sum,\n      chef: currentChef.DisplayName\n    };\n    fetch(apiURLpostOrder, {\n      method: 'POST',\n      body: JSON.stringify(newOrder),\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json; charset=UTF-8'\n      })\n    }).then(function (response) {\n      console.log('response=', response);\n      console.log('response.status', response.status);\n      console.log('response.ok', response.ok);\n      return response.json();\n    });\n    setCart([]);\n  }\n\n  function onLogin(email, userID) {\n    setEmail(email);\n    setUserID(userID);\n  }\n\n  function updateImage(img) {\n    currentUser.img = img;\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  function signup(firstName, lastName, city, phone, email, password, lon, lat) {\n    var flag;\n    return _regeneratorRuntime.async(function signup$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            flag = true;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fire.auth().createUserWithEmailAndPassword(email, password).then(function (user) {\n              console.log(user.user.uid + \" / \" + email + \" / \" + firstName + \" / \" + lastName + \" / \" + city + \" / \" + phone);\n              var newUser = {\n                uid: user.user.uid,\n                email: email,\n                firstName: firstName,\n                lastName: lastName,\n                city: city,\n                pNumber: phone,\n                lon: lon,\n                lat: lat\n              };\n              console.log(newUser);\n              fetch(apiURLpostUser, {\n                method: 'POST',\n                body: JSON.stringify(newUser),\n                headers: new Headers({\n                  'Content-Type': 'application/json; charset=UTF-8',\n                  'Accept': 'application/json; charset=UTF-8'\n                })\n              }).then(function (response) {\n                console.log('response=', response);\n                console.log('response.status', response.status);\n                console.log('response.ok', response.ok);\n                return response.json();\n              });\n            }).catch(function (err) {\n              switch (err.code) {\n                case \"auth/email-already-in-use\":\n                case \"auth/invalid-email\":\n                case \"auth/weak-password\":\n                  alert(err.message);\n                  flag = false;\n                  break;\n              }\n            }));\n\n          case 3:\n            return _context2.abrupt(\"return\", flag);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    getChefs();\n  }, [currentUser]);\n\n  function selectedChef(email) {\n    return _regeneratorRuntime.async(function selectedChef$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(getDishes(email));\n\n          case 2:\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(chefsArr.forEach(function (element) {\n              if (element.Email == email) {\n                setCurrentChef(element);\n              }\n            }));\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getDishes(email) {\n    fetch(apiURLgetDishes + email + '/', {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json; charset=UTF-8'\n      })\n    }).then(function (response) {\n      console.log('response.status', response.status);\n      return response.json();\n    }).then(function (data) {\n      setCurrentChefDishes(data);\n    }, function (error) {\n      console.log(\"err get=\", error);\n    });\n  }\n\n  function getChefs() {\n    fetch(apiURLgetChefs, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json; charset=UTF-8'\n      })\n    }).then(function (response) {\n      console.log('response.status', response.status);\n      return response.json();\n    }).then(function (data) {\n      var tempChefs = [];\n      data.forEach(function (element) {\n        var chef = {\n          Address: element.Address,\n          DisplayName: element.DisplayName,\n          Email: element.Email,\n          FirstName: element.FirstName,\n          LastName: element.LastName,\n          PNumber: element.PNumber,\n          Lon: element.Lon,\n          Lat: element.Lat,\n          Rating: element.Rating,\n          FoodType: element.FoodType,\n          Img: element.Img,\n          DisFromUser: getDistanceFromLatLonInKm(currentUser.lat, currentUser.lon, element.Lat, element.Lon)\n        };\n        tempChefs.push(chef);\n      });\n      setChefsArr(tempChefs);\n    }, function (error) {\n      console.log(\"err get=\", error);\n    });\n    getFireStoreImg();\n  }\n\n  var peopleYouMayKnow = [];\n  var depth = 3;\n\n  function getConnections() {\n    var tempConnections, tempFF, _loop, i;\n\n    return _regeneratorRuntime.async(function getConnections$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            tempConnections = [];\n            tempFF = [];\n\n            _loop = function _loop(i) {\n              return _regeneratorRuntime.async(function _loop$(_context8) {\n                while (1) {\n                  switch (_context8.prev = _context8.next) {\n                    case 0:\n                      if (!(i == 0)) {\n                        _context8.next = 6;\n                        break;\n                      }\n\n                      _context8.next = 3;\n                      return _regeneratorRuntime.awrap(fetch(apiURLgetConnections + currentUser.uid, {\n                        method: 'GET',\n                        headers: new Headers({\n                          'Content-Type': 'application/json; charset=UTF-8',\n                          'Accept': 'application/json; charset=UTF-8'\n                        })\n                      }).then(function (response) {\n                        console.log('response.status', response.status);\n                        return response.json();\n                      }).then(function (data) {\n                        data.forEach(function (element) {\n                          var Connection = {\n                            userUid: element.TargetUid,\n                            depth: i\n                          };\n                          tempConnections.push(Connection);\n                        });\n                      }, function (error) {\n                        console.log(\"err get=\", error);\n                      }));\n\n                    case 3:\n                      setFriendsArr(tempConnections);\n                      _context8.next = 8;\n                      break;\n\n                    case 6:\n                      _context8.next = 8;\n                      return _regeneratorRuntime.awrap(function _callee3() {\n                        var tempConnections2, _loop2, j;\n\n                        return _regeneratorRuntime.async(function _callee3$(_context7) {\n                          while (1) {\n                            switch (_context7.prev = _context7.next) {\n                              case 0:\n                                tempConnections2 = [];\n\n                                _loop2 = function _loop2(j) {\n                                  return _regeneratorRuntime.async(function _loop2$(_context6) {\n                                    while (1) {\n                                      switch (_context6.prev = _context6.next) {\n                                        case 0:\n                                          _context6.next = 2;\n                                          return _regeneratorRuntime.awrap(fetch(apiURLgetConnections + tempConnections[j].userUid, {\n                                            method: 'GET',\n                                            headers: new Headers({\n                                              'Content-Type': 'application/json; charset=UTF-8',\n                                              'Accept': 'application/json; charset=UTF-8'\n                                            })\n                                          }).then(function (response) {\n                                            console.log('response.status', response.status);\n                                            return response.json();\n                                          }).then(function (data) {\n                                            data.forEach(function (element) {\n                                              var Connection = {\n                                                userUid: element.TargetUid,\n                                                fatherUid: tempConnections[j].userUid,\n                                                depth: i\n                                              };\n                                              tempConnections2.push(Connection);\n                                            });\n                                          }, function (error) {\n                                            console.log(\"err get=\", error);\n                                          }).then(function () {\n                                            tempConnections2.forEach(function _callee2(element) {\n                                              var currUser;\n                                              return _regeneratorRuntime.async(function _callee2$(_context5) {\n                                                while (1) {\n                                                  switch (_context5.prev = _context5.next) {\n                                                    case 0:\n                                                      currUser = {\n                                                        userUid: element.userUid,\n                                                        fatherUid: tempConnections[j].userUid,\n                                                        depth: i,\n                                                        email: '',\n                                                        firstName: '',\n                                                        lastName: '',\n                                                        city: '',\n                                                        distance: '',\n                                                        img: ''\n                                                      };\n                                                      peopleYouMayKnow.push(currUser);\n                                                      tempFF.push(currUser);\n\n                                                    case 3:\n                                                    case \"end\":\n                                                      return _context5.stop();\n                                                  }\n                                                }\n                                              }, null, null, null, Promise);\n                                            });\n                                            tempConnections2 = [];\n                                          }));\n\n                                        case 2:\n                                        case \"end\":\n                                          return _context6.stop();\n                                      }\n                                    }\n                                  }, null, null, null, Promise);\n                                };\n\n                                j = 0;\n\n                              case 3:\n                                if (!(j < tempConnections.length)) {\n                                  _context7.next = 9;\n                                  break;\n                                }\n\n                                _context7.next = 6;\n                                return _regeneratorRuntime.awrap(_loop2(j));\n\n                              case 6:\n                                j++;\n                                _context7.next = 3;\n                                break;\n\n                              case 9:\n                                tempConnections = tempFF;\n                                tempFF = [];\n\n                              case 11:\n                              case \"end\":\n                                return _context7.stop();\n                            }\n                          }\n                        }, null, null, null, Promise);\n                      }());\n\n                    case 8:\n                    case \"end\":\n                      return _context8.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            };\n\n            i = 0;\n\n          case 4:\n            if (!(i < depth)) {\n              _context9.next = 10;\n              break;\n            }\n\n            _context9.next = 7;\n            return _regeneratorRuntime.awrap(_loop(i));\n\n          case 7:\n            i++;\n            _context9.next = 4;\n            break;\n\n          case 10:\n            setTempUsers(peopleYouMayKnow);\n            peopleYouMayKnow.forEach(function _callee(element) {\n              var user;\n              return _regeneratorRuntime.async(function _callee$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _context4.next = 2;\n                      return _regeneratorRuntime.awrap(getDetails(element.userUid));\n\n                    case 2:\n                      user = _context4.sent;\n                      element.email = user.email;\n                      element.firstName = user.firstName;\n                      element.lastName = user.lastName;\n                      element.city = user.city;\n                      element.distance = user.distance;\n                      element.img = user.img;\n\n                    case 9:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            });\n            console.log(\"people You May Know end\");\n            console.log(peopleYouMayKnow);\n            calcScore(peopleYouMayKnow);\n            console.log(friendsArrDetails);\n\n          case 16:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function calcScore(peopleYouMayKnow) {\n    return _regeneratorRuntime.async(function calcScore$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            peopleYouMayKnow.forEach(function (element) {\n              var score = 0;\n              element.depth == 1 ? score += 1 : element.depth == 2 ? score += 0.45 : element.depth == 3 ? score += 0.15 : console.log(\"fail depth\");\n              var currUser = {\n                userUid: element.userUid,\n                fatherUid: element.fatherUid,\n                email: element.email,\n                firstName: element.firstName,\n                lastName: element.lastName,\n                img: element.img,\n                score: score\n              };\n            });\n\n          case 1:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getDetails(TargetUid) {\n    var user;\n    return _regeneratorRuntime.async(function getDetails$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            user = '';\n            _context12.next = 3;\n            return _regeneratorRuntime.awrap(fetch(apiURLgetUser + TargetUid, {\n              method: 'GET',\n              headers: new Headers({\n                'Content-Type': 'application/json; charset=UTF-8',\n                'Accept': 'application/json; charset=UTF-8'\n              })\n            }).then(function (response) {\n              console.log('response.status', response.status);\n              return response.json();\n            }).then(function _callee4(data) {\n              return _regeneratorRuntime.async(function _callee4$(_context11) {\n                while (1) {\n                  switch (_context11.prev = _context11.next) {\n                    case 0:\n                      user = {\n                        email: data.Email,\n                        firstName: data.FirstName,\n                        lastName: data.LastName,\n                        city: data.City,\n                        distance: Math.floor(getDistanceFromLatLonInKm(currentUser.lat, currentUser.lon, data.Lat, data.Lon)),\n                        img: data.Img\n                      };\n\n                    case 1:\n                    case \"end\":\n                      return _context11.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }, function (error) {\n              console.log(\"err get=\", error);\n            }));\n\n          case 3:\n            return _context12.abrupt(\"return\", user);\n\n          case 4:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    if (friendsArr) {\n      var tempArr = [];\n      friendsArr.forEach(function _callee5(currFriend) {\n        var tempFriend;\n        return _regeneratorRuntime.async(function _callee5$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                getReviews(currFriend);\n                _context13.next = 3;\n                return _regeneratorRuntime.awrap(getDetails(currFriend.userUid));\n\n              case 3:\n                tempFriend = _context13.sent;\n                tempArr.push(tempFriend);\n\n              case 5:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n      setFriendsArrDetails(tempArr);\n      console.log(tempArr);\n    }\n  }, [friendsArr]);\n  var tempReviews = [];\n\n  function getReviews(friendsUid) {\n    return _regeneratorRuntime.async(function getReviews$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.next = 2;\n            return _regeneratorRuntime.awrap(fetch(apiURLgetReviews + friendsUid.userUid, {\n              method: 'GET',\n              headers: new Headers({\n                'Content-Type': 'application/json; charset=UTF-8',\n                'Accept': 'application/json; charset=UTF-8'\n              })\n            }).then(function (response) {\n              console.log('response.status', response.status);\n              return response.json();\n            }).then(function (data) {\n              data.forEach(function (element) {\n                tempReviews.push(element);\n              });\n            }, function (error) {\n              console.log(\"err get=\", error);\n            }));\n\n          case 2:\n            setFriendsReviews(tempReviews);\n\n          case 3:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function signin(email, password, callbackfunc) {\n    var flag;\n    return _regeneratorRuntime.async(function signin$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            _context18.next = 2;\n            return _regeneratorRuntime.awrap(fire.auth().signInWithEmailAndPassword(email, password).then(function _callee8() {\n              return _regeneratorRuntime.async(function _callee8$(_context17) {\n                while (1) {\n                  switch (_context17.prev = _context17.next) {\n                    case 0:\n                      _context17.next = 2;\n                      return _regeneratorRuntime.awrap(fire.auth().onAuthStateChanged(function _callee7(authUser) {\n                        return _regeneratorRuntime.async(function _callee7$(_context16) {\n                          while (1) {\n                            switch (_context16.prev = _context16.next) {\n                              case 0:\n                                if (!(authUser !== null)) {\n                                  _context16.next = 5;\n                                  break;\n                                }\n\n                                _context16.next = 3;\n                                return _regeneratorRuntime.awrap(fetch(apiURLgetUser + authUser.uid, {\n                                  method: 'GET',\n                                  headers: new Headers({\n                                    'Content-Type': 'application/json; charset=UTF-8',\n                                    'Accept': 'application/json; charset=UTF-8'\n                                  })\n                                }).then(function (response) {\n                                  console.log('response.status', response.status);\n                                  return response.json();\n                                }).then(function _callee6(data) {\n                                  var user;\n                                  return _regeneratorRuntime.async(function _callee6$(_context15) {\n                                    while (1) {\n                                      switch (_context15.prev = _context15.next) {\n                                        case 0:\n                                          user = {\n                                            uid: data.Uid,\n                                            email: data.Email,\n                                            firstName: data.FirstName,\n                                            lastName: data.LastName,\n                                            city: data.City,\n                                            pNumber: data.PNumber,\n                                            lon: data.Lon,\n                                            lat: data.Lat,\n                                            img: data.Img\n                                          };\n                                          setCurrentUser(user);\n                                          console.log(\"Current User Details:\");\n                                          console.log(user);\n                                          flag = true;\n                                          callbackfunc(flag);\n\n                                        case 6:\n                                        case \"end\":\n                                          return _context15.stop();\n                                      }\n                                    }\n                                  }, null, null, null, Promise);\n                                }, function (error) {\n                                  console.log(\"err get=\", error);\n                                }));\n\n                              case 3:\n                                _context16.next = 6;\n                                break;\n\n                              case 5:\n                                setCurrentUser('');\n\n                              case 6:\n                              case \"end\":\n                                return _context16.stop();\n                            }\n                          }\n                        }, null, null, null, Promise);\n                      }));\n\n                    case 2:\n                    case \"end\":\n                      return _context17.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (err) {\n              switch (err.code) {\n                case \"auth/invalid-email\":\n                case \"auth/user-disabled\":\n                case \"auth/user-not-found\":\n                  alert(\"wrong Email\");\n                  console.log(err.message);\n                  break;\n\n                case \"auth/wrong-password\":\n                  alert(\"wrong Password\");\n                  console.log(err.message);\n                  break;\n              }\n\n              flag = false;\n              callbackfunc(flag);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function Logout() {\n    fire.auth().signOut();\n    clearUserContext();\n  }\n\n  function clearUserContext() {\n    setCurrentUser('');\n    setCurrentChef('');\n    setCurrentChefDishes(null);\n    setChefsArr('');\n    setFriendsArr(null);\n    setReviewsArr('');\n    setName('');\n    setEmail('');\n    setPassword('');\n    setUserID('');\n    setSelectedImage('');\n    setCart([]);\n    setOrders([]);\n    setFriendsArrDetails(null);\n    setFriendsReviews(null);\n  }\n\n  var value = {\n    currentUser: currentUser,\n    setCurrentUser: setCurrentUser,\n    name: name,\n    email: email,\n    password: password,\n    userID: userID,\n    signup: signup,\n    signin: signin,\n    updateEmail: updateEmail,\n    updatePassword: updatePassword,\n    onLogin: onLogin,\n    Logout: Logout,\n    chefsArr: chefsArr,\n    selectedChef: selectedChef,\n    currentChefDishes: currentChefDishes,\n    setCurrentChefDishes: setCurrentChefDishes,\n    currentChef: currentChef,\n    updateImage: updateImage,\n    cartTotal: cartTotal,\n    cart: cart,\n    setCart: setCart,\n    sliderValue: sliderValue,\n    setSliderValue: setSliderValue,\n    setOrder: setOrder,\n    getOrders: getOrders,\n    orders: orders,\n    fireStoreImg: fireStoreImg,\n    getFireStoreImg: getFireStoreImg,\n    getConnections: getConnections,\n    friendsArr: friendsArr,\n    setFriendsArr: setFriendsArr,\n    friendsInDepth: friendsInDepth,\n    setFriendsInDepth: setFriendsInDepth,\n    tempUsers: tempUsers,\n    setTempUsers: setTempUsers,\n    friendsReviews: friendsReviews,\n    getDetails: getDetails,\n    friendsArrDetails: friendsArrDetails\n  };\n  return React.createElement(UserContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 9\n    }\n  }, children);\n}","map":{"version":3,"sources":["C:/Users/Shachar/Desktop/P/reactHomeals/src/UserContext.js"],"names":["fire","auth","React","useContext","useState","useEffect","dbFirestore","getDistanceFromLatLonInKm","set","ScrollView","apiURLgetUser","apiURLpostUser","apiURLgetChefs","apiURLgetDishes","apiURLpostOrder","apiURLgetOrder","apiURLgetConnections","apiURLgetReviews","UserContext","createContext","UserUpdateContext","useUserContext","useUserUpdateContext","UserProvider","children","currentUser","setCurrentUser","currentChef","setCurrentChef","currentChefDishes","setCurrentChefDishes","chefsArr","setChefsArr","friendsArr","setFriendsArr","friendsArrDetails","setFriendsArrDetails","reviewsArr","setReviewsArr","value","error","name","setName","email","setEmail","password","setPassword","userID","setUserID","selectedImage","setSelectedImage","cart","setCart","sliderValue","setSliderValue","orders","setOrders","friendsInDepth","setFriendsInDepth","friendsReviews","setFriendsReviews","tempUsers","setTempUsers","delay","ms","Promise","res","setTimeout","fireStoreImg","firestore","collection","doc","uid","imgUrl","img","then","console","log","getFireStoreImg","temp","get","userImg","wP","docChanges","forEach","element","key","path","segments","proto","fields","stringValue","cartTotal","price","quantity","tempCart","tempDish","Name","Price","Quantity","flag","map","item","push","getOrders","fetch","method","headers","Headers","response","status","json","data","setOrder","sum","orderStr","currentdate","Date","datetime","getDate","getMonth","getFullYear","getHours","getMinutes","newOrder","chefEmail","Email","orderTime","orderDescription","totalPrice","chef","DisplayName","body","JSON","stringify","ok","onLogin","updateImage","updateEmail","updatePassword","signup","firstName","lastName","city","phone","lon","lat","createUserWithEmailAndPassword","user","newUser","pNumber","catch","err","code","alert","message","getChefs","selectedChef","getDishes","tempChefs","Address","FirstName","LastName","PNumber","Lon","Lat","Rating","FoodType","Img","DisFromUser","peopleYouMayKnow","depth","getConnections","tempConnections","tempFF","i","Connection","userUid","TargetUid","tempConnections2","j","fatherUid","currUser","distance","length","getDetails","calcScore","score","City","Math","floor","tempArr","currFriend","getReviews","tempFriend","tempReviews","friendsUid","signin","callbackfunc","signInWithEmailAndPassword","onAuthStateChanged","authUser","Uid","Logout","signOut","clearUserContext"],"mappings":"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","sourcesContent":["import fire from '../fire'\r\nimport { auth } from 'firebase'\r\nimport React, { useContext, useState, useEffect } from 'react'\r\nimport dbFirestore from '../fire'\r\nimport { getDistanceFromLatLonInKm } from '../helpers/calcDis'\r\nimport { set } from 'ol/transform'\r\nimport { ScrollView } from 'react-native-gesture-handler'\r\n\r\n// Asaf\r\n/* let apiURLgetUser = \"http://192.168.1.35:50247/api/User/getUser/\"; \r\nlet apiURLpostUser = \"http://192.168.1.35:50247/api/User/postUser/\";\r\nlet apiURLgetChefs = \"http://192.168.1.35:50247/api/Chef/getChefs/\";\r\nlet apiURLgetDishes = \"http://192.168.1.35:50247/api/Dish/getDishes/\";\r\nlet apiURLpostOrder = \"http://192.168.1.35:50247/api/Order/postOrder/\";\r\nlet apiURLgetOrder = \"http://192.168.1.35:50247/api/Order/getOrder/\";\r\nlet apiURLgetConnections = \"http://192.168.1.35:50247/api/Connection/getConnections/\";\r\nlet apiURLgetReviews = \"http://192.168.1.35:50247/api/Review/getReviews/\"; */\r\n\r\n// Shachar\r\nlet apiURLgetUser = \"http://192.168.31.156:50247/api/User/getUser/\";\r\nlet apiURLpostUser = \"http://192.168.31.156:50247/api/User/postUser/\";\r\nlet apiURLgetChefs = \"http://192.168.31.156:50247/api/Chef/getChefs/\";\r\nlet apiURLgetDishes = \"http://192.168.31.156:50247/api/Dish/getDishes/\";\r\nlet apiURLpostOrder = \"http://192.168.31.156:50247/api/Order/postOrder/\";\r\nlet apiURLgetOrder = \"http://192.168.31.156:50247/api/Order/getOrder/\";\r\nlet apiURLgetConnections = \"http://192.168.31.156:50247/api/Connection/getConnections/\";\r\nlet apiURLgetReviews = \"http://192.168.31.156:50247/api/Review/getReviews/\";\r\n\r\n// Sasson\r\n/* let apiURLgetUser = \"http://192.168.1.22:50247/api/User/getUser/\";\r\nlet apiURLpostUser = \"http://192.168.1.22:50247/api/User/postUser/\";\r\nlet apiURLgetChefs = \"http://192.168.1.22:50247/api/Chef/getChefs/\";\r\nlet apiURLgetDishes = \"http://192.168.1.22:50247/api/Dish/getDishes/\";\r\nlet apiURLpostOrder = \"http://192.168.1.22:50247/api/Order/postOrder/\";\r\nlet apiURLgetOrder = \"http://192.168.1.22:50247/api/Order/getOrder/\";\r\nlet apiURLgetConnections = \"http://192.168.1.22:50247/api/Connection/getConnections/\";\r\nlet apiURLgetReviews = \"http://192.168.1.22:50247/api/Review/getReviews/\"; */\r\n\r\n\r\n\r\nconst UserContext = React.createContext()\r\nconst UserUpdateContext = React.createContext()\r\n\r\n\r\n\r\nexport function useUserContext() {\r\n    return useContext(UserContext)\r\n}\r\n\r\nexport function useUserUpdateContext() {\r\n    return useContext(UserUpdateContext)\r\n}\r\n\r\nexport function UserProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState('')\r\n    const [currentChef, setCurrentChef] = useState('')\r\n    const [currentChefDishes, setCurrentChefDishes] = useState('')\r\n    const [chefsArr, setChefsArr] = useState('')\r\n    const [friendsArr, setFriendsArr] = useState('')\r\n    const [friendsArrDetails, setFriendsArrDetails] = useState('')\r\n    const [reviewsArr, setReviewsArr] = useState('')\r\n    const [name, setName] = useState({ value: '', error: '' })\r\n    const [email, setEmail] = useState({ value: '', error: '' })\r\n    const [password, setPassword] = useState({ value: '', error: '' })\r\n    const [userID, setUserID] = useState('')\r\n    const [selectedImage, setSelectedImage] = useState('');\r\n    const [cart, setCart] = useState([]);\r\n    const [sliderValue, setSliderValue] = useState(26);\r\n    const [orders, setOrders] = useState([]);\r\n    const [friendsInDepth, setFriendsInDepth] = useState('')\r\n    const [friendsReviews, setFriendsReviews] = useState('')\r\n    const [tempUsers, setTempUsers] = useState('')\r\n\r\n\r\n    const delay = (ms) => new Promise((res) => setTimeout(res, ms));\r\n\r\n\r\n    function fireStoreImg() {\r\n        dbFirestore.firestore()\r\n            .collection('userData')\r\n            .doc(currentUser.uid)\r\n            .set({\r\n                imgUrl: currentUser.img\r\n            })\r\n            .then(() => {\r\n                console.log('User added!');\r\n            });\r\n\r\n    }\r\n\r\n    async function getFireStoreImg() {\r\n        let temp = currentUser;\r\n\r\n        const userImg = await dbFirestore.firestore()\r\n            .collection('userData')\r\n            .get();\r\n        console.log(userImg)\r\n        userImg.wP.docChanges.forEach(element => {\r\n            if (currentUser.uid == element.doc.key.path.segments[6])\r\n                temp.img = element.doc.proto.fields.imgUrl.stringValue;\r\n        });\r\n        console.log(temp)\r\n        setCurrentUser(temp)\r\n\r\n\r\n        /*   console.log(userImg) */\r\n\r\n        /* console.log(userImg.cP.qe.Zt.root.value.Zt); */\r\n        /* temp.img = userImg.cP.qe.Zt.root.value.Zt; */\r\n        /*  setCurrentUser(temp);\r\n         console.log(currentUser) */\r\n    }\r\n\r\n    function cartTotal(name, price, quantity) {\r\n        let tempCart;\r\n        let tempDish = {\r\n            Name: name,\r\n            Price: price,\r\n            Quantity: quantity\r\n        }\r\n        let flag = false;\r\n        if (cart) {\r\n            cart.map((item, key) => {\r\n                if (item.Name == name) {\r\n                    item.Quantity = quantity;\r\n                    flag = true;\r\n                    tempCart = cart;\r\n                }\r\n            }\r\n            )\r\n        }\r\n        else {\r\n            setCart([tempDish]);\r\n            return;\r\n        }\r\n        if (!flag) {\r\n            tempCart = cart;\r\n            tempCart.push(tempDish);\r\n        }\r\n        setCart(tempCart);\r\n        console.log(cart);\r\n        console.log(tempDish);\r\n    }\r\n\r\n    function getOrders() {\r\n        /* Get Orders from SQL */\r\n        fetch(apiURLgetOrder + currentUser.uid, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response.status', response.status);\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                setOrders(data);\r\n            },\r\n                (error) => {\r\n                    console.log(\"err get=\", error);\r\n                });\r\n\r\n    }\r\n\r\n    function setOrder() {\r\n        let sum = 0;\r\n        let orderStr = '';\r\n        cart.forEach(element => {\r\n            if (element.Quantity != 0) {\r\n                sum += (element.Quantity * element.Price)\r\n                orderStr += element.Quantity + 'x ' + element.Name + ' - ' + (element.Quantity * element.Price) + '; ';\r\n            }\r\n        });\r\n        var currentdate = new Date();\r\n        var datetime = currentdate.getDate() + \"/\"\r\n            + (currentdate.getMonth() + 1) + \"/\"\r\n            + currentdate.getFullYear() + \" - \"\r\n            + currentdate.getHours() + \":\"\r\n            + currentdate.getMinutes();\r\n        let newOrder = {\r\n            uid: currentUser.uid,\r\n            chefEmail: currentChef.Email,\r\n            orderTime: datetime,\r\n            orderDescription: orderStr,\r\n            totalPrice: sum,\r\n            chef: currentChef.DisplayName\r\n        }\r\n        fetch(apiURLpostOrder, {\r\n            method: 'POST',\r\n            body: JSON.stringify(newOrder),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response=', response);\r\n                console.log('response.status', response.status);\r\n                console.log('response.ok', response.ok);\r\n                return response.json();\r\n            })\r\n        setCart([]);\r\n    }\r\n\r\n    function onLogin(email, userID) {\r\n        setEmail(email);\r\n        setUserID(userID);\r\n\r\n    }\r\n\r\n    function updateImage(img) {\r\n        currentUser.img = img;\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    async function signup(firstName, lastName, city, phone, email, password, lon, lat) {\r\n        var flag = true;\r\n        await fire\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then(function (user) {\r\n                console.log(user.user.uid + \" / \" + email + \" / \" + firstName + \" / \" + lastName + \" / \" + city + \" / \" + phone)\r\n                const newUser = {\r\n                    uid: user.user.uid,\r\n                    email: email,\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    city: city,\r\n                    pNumber: phone,\r\n                    lon: lon,\r\n                    lat: lat\r\n                }\r\n                console.log(newUser);\r\n                fetch(apiURLpostUser, {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(newUser),\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json; charset=UTF-8',\r\n                        'Accept': 'application/json; charset=UTF-8'\r\n                    })\r\n                })\r\n                    .then(response => {\r\n                        console.log('response=', response);\r\n                        console.log('response.status', response.status);\r\n                        console.log('response.ok', response.ok);\r\n                        return response.json();\r\n                    })\r\n            })\r\n            .catch(err => {\r\n                switch (err.code) {\r\n                    case \"auth/email-already-in-use\":\r\n                    case \"auth/invalid-email\":\r\n                    case \"auth/weak-password\":\r\n                        alert(err.message);\r\n                        flag = false;\r\n                        break;\r\n                }\r\n            });\r\n\r\n\r\n        return flag;\r\n    }\r\n\r\n    useEffect(() => {\r\n        getChefs();\r\n    }, [currentUser])\r\n\r\n\r\n\r\n    async function selectedChef(email) {\r\n        await getDishes(email);\r\n        await chefsArr.forEach(element => {\r\n            if (element.Email == email) {\r\n                setCurrentChef(element);\r\n            }\r\n        });\r\n    }\r\n\r\n    function getDishes(email) {\r\n        /* Get Dishes from SQL */\r\n        fetch(apiURLgetDishes + email + '/', {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response.status', response.status);\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                setCurrentChefDishes(data);\r\n            },\r\n                (error) => {\r\n                    console.log(\"err get=\", error);\r\n                });\r\n    }\r\n\r\n    function getChefs() {\r\n\r\n        /* Get Chefs from SQL */\r\n        fetch(apiURLgetChefs, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response.status', response.status);\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                let tempChefs = [];\r\n                data.forEach(element => {\r\n                    const chef = {\r\n                        Address: element.Address,\r\n                        DisplayName: element.DisplayName,\r\n                        Email: element.Email,\r\n                        FirstName: element.FirstName,\r\n                        LastName: element.LastName,\r\n                        PNumber: element.PNumber,\r\n                        Lon: element.Lon,\r\n                        Lat: element.Lat,\r\n                        Rating: element.Rating,\r\n                        FoodType: element.FoodType,\r\n                        Img: element.Img,\r\n                        DisFromUser: getDistanceFromLatLonInKm(currentUser.lat, currentUser.lon, element.Lat, element.Lon)\r\n                    }\r\n                    tempChefs.push(chef);\r\n                });\r\n                setChefsArr(tempChefs);\r\n\r\n            },\r\n                (error) => {\r\n                    console.log(\"err get=\", error);\r\n                });\r\n        getFireStoreImg()\r\n    }\r\n    var peopleYouMayKnow = []\r\n    var depth = 3;\r\n\r\n    async function getConnections() {\r\n        let tempConnections = [];\r\n        let tempFF = [];\r\n        for (let i = 0; i < depth; i++) {\r\n            if (i == 0) {\r\n                await fetch(apiURLgetConnections + currentUser.uid, {\r\n                    method: 'GET',\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json; charset=UTF-8',\r\n                        'Accept': 'application/json; charset=UTF-8'\r\n                    })\r\n                })\r\n                    .then(response => {\r\n                        console.log('response.status', response.status);\r\n                        return response.json();\r\n                    })\r\n                    .then((data) => {\r\n                        data.forEach(element => {\r\n                            const Connection = {\r\n                                userUid: element.TargetUid,\r\n                                depth: i,\r\n\r\n                            }\r\n                            tempConnections.push(Connection);\r\n                        });\r\n                    },\r\n                        (error) => {\r\n                            console.log(\"err get=\", error);\r\n                        })\r\n                setFriendsArr(tempConnections);\r\n                /* getReviews(currentUser.uid); קריאה מיותרת וגם שולח משהו לא נכון ? */\r\n\r\n            }\r\n            else {\r\n                let tempConnections2 = [];\r\n                for (let j = 0; j < tempConnections.length; j++) {\r\n                    await fetch(apiURLgetConnections + tempConnections[j].userUid, {\r\n                        method: 'GET',\r\n                        headers: new Headers({\r\n                            'Content-Type': 'application/json; charset=UTF-8',\r\n                            'Accept': 'application/json; charset=UTF-8'\r\n                        })\r\n                    })\r\n                        .then(response => {\r\n                            console.log('response.status', response.status);\r\n                            return response.json();\r\n                        })\r\n                        .then((data) => {\r\n                            data.forEach(element => {\r\n                                const Connection = {\r\n                                    userUid: element.TargetUid,\r\n                                    fatherUid: tempConnections[j].userUid,\r\n                                    depth: i\r\n                                }\r\n                                tempConnections2.push(Connection);\r\n                            });\r\n                        },\r\n                            (error) => {\r\n                                console.log(\"err get=\", error);\r\n                            }).then(() => {\r\n                                tempConnections2.forEach(async (element) => {\r\n                                    /*  debugger */\r\n                                    let currUser = {\r\n                                        userUid: element.userUid,\r\n                                        fatherUid: tempConnections[j].userUid,\r\n                                        depth: i,\r\n                                        email: '',\r\n                                        firstName: '',\r\n                                        lastName: '',\r\n                                        city: '',\r\n                                        distance: '',\r\n                                        img: ''\r\n                                    }\r\n                                    peopleYouMayKnow.push(currUser);\r\n                                    tempFF.push(currUser);\r\n                                })\r\n                                tempConnections2 = [];\r\n                            })\r\n                }\r\n                tempConnections = tempFF;\r\n                tempFF = [];\r\n            }\r\n        }\r\n        setTempUsers(peopleYouMayKnow)\r\n\r\n        peopleYouMayKnow.forEach(async (element) => {\r\n            let user = await getDetails(element.userUid);\r\n            element.email = user.email;\r\n            element.firstName = user.firstName;\r\n            element.lastName = user.lastName;\r\n            element.city = user.city;\r\n            element.distance = user.distance;\r\n            element.img = user.img;\r\n        })\r\n        console.log(\"people You May Know end\")\r\n        console.log(peopleYouMayKnow);\r\n        calcScore(peopleYouMayKnow)\r\n        console.log(friendsArrDetails)\r\n    }\r\n\r\n\r\n\r\n    async function calcScore(peopleYouMayKnow) {\r\n        peopleYouMayKnow.forEach(element => {\r\n            let score = 0;\r\n            element.depth == 1 ? score += 1 : element.depth == 2 ? score += 0.45 : element.depth == 3 ? score += 0.15 : console.log(\"fail depth\");\r\n            /*  locationScore= ()/() */\r\n            let currUser = {\r\n                userUid: element.userUid,\r\n                fatherUid: element.fatherUid,\r\n                email: element.email,\r\n                firstName: element.firstName,\r\n                lastName: element.lastName,\r\n                img: element.img,\r\n                score: score\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    async function getDetails(TargetUid) {\r\n        let user = ''\r\n        await fetch(apiURLgetUser + TargetUid, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response.status', response.status);\r\n                return response.json();\r\n            })\r\n            .then(async (data) => {\r\n                user = {\r\n                    email: data.Email,\r\n                    firstName: data.FirstName,\r\n                    lastName: data.LastName,\r\n                    city: data.City,\r\n                    distance: Math.floor(getDistanceFromLatLonInKm(currentUser.lat, currentUser.lon, data.Lat, data.Lon)),\r\n                    img: data.Img\r\n                }\r\n\r\n                /* console.log(user) */\r\n            },\r\n                (error) => {\r\n                    console.log(\"err get=\", error);\r\n                })\r\n        return user;\r\n    }\r\n\r\n    /*  async function getConnections(sourceUid, depth) {\r\n        \r\n         let tempConnections = [];\r\n         await fetch(apiURLgetConnections + sourceUid, {\r\n             method: 'GET',\r\n             headers: new Headers({\r\n                 'Content-Type': 'application/json; charset=UTF-8',\r\n                 'Accept': 'application/json; charset=UTF-8'\r\n             })\r\n         })\r\n             .then(response => {\r\n                 console.log('response.status', response.status);\r\n                 return response.json();\r\n             })\r\n             .then((data) => {\r\n                 data.forEach(element => {\r\n                     const Connection = {\r\n                         userUid: element.TargetUid,\r\n                         depth: depth,\r\n                         distance: ''\r\n                     }\r\n                     tempConnections.push(Connection);\r\n                 });\r\n             },\r\n                 (error) => {\r\n                     console.log(\"err get=\", error);\r\n                 }).then(() => {\r\n                     if (sourceUid == currentUser.uid) {\r\n                         setFriendsArr(tempConnections)\r\n                         getReviews(sourceUid)\r\n                         console.log(tempConnections)\r\n                     }\r\n                     else {\r\n                         tempConnections.forEach((element) => {\r\n                             let currUser = {\r\n                                 userUid: element.userUid,\r\n                                 depth: depth,\r\n                                 distance: ''\r\n                             }\r\n                             peopleYouMayKnow.push(currUser)\r\n                         })\r\n                         console.log(peopleYouMayKnow)\r\n                         setTempUsers(peopleYouMayKnow)\r\n                     }\r\n                 })\r\n     } */\r\n\r\n    useEffect(() => {\r\n        if (friendsArr) {\r\n            let tempArr = [];\r\n            friendsArr.forEach(async currFriend => {\r\n                getReviews(currFriend)\r\n                let tempFriend = await getDetails(currFriend.userUid);\r\n                tempArr.push(tempFriend)\r\n            })\r\n            setFriendsArrDetails(tempArr);\r\n            console.log(tempArr)\r\n        }\r\n    }, [friendsArr])\r\n\r\n    /*  function getFriendsInDepth(depth) {\r\n         let currentDepth = [];\r\n         friendsArr.forEach(currUser => {\r\n             currentDepth.push(currUser);\r\n         })\r\n         while (depth > 0) {\r\n \r\n \r\n             depth--;\r\n         }\r\n     } */\r\n\r\n    let tempReviews = [];\r\n\r\n    async function getReviews(friendsUid) {\r\n        await fetch(apiURLgetReviews + friendsUid.userUid, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response.status', response.status);\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n               /*  console.log(data) */\r\n                data.forEach(element => {\r\n                    tempReviews.push(element)\r\n                });\r\n            },\r\n                (error) => {\r\n                    console.log(\"err get=\", error);\r\n                });\r\n        setFriendsReviews(tempReviews);\r\n       /*  console.log(friendsArr)\r\n        console.log(tempReviews)\r\n */\r\n    }\r\n\r\n    async function signin(email, password, callbackfunc) {\r\n        let flag;\r\n        await fire.auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(async () => {\r\n                await fire.auth().onAuthStateChanged(async authUser => {\r\n                    if (authUser !== null) {\r\n                        /* Get User Details from SQL */\r\n                        await fetch(apiURLgetUser + authUser.uid, {\r\n                            method: 'GET',\r\n                            headers: new Headers({\r\n                                'Content-Type': 'application/json; charset=UTF-8',\r\n                                'Accept': 'application/json; charset=UTF-8'\r\n                            })\r\n                        })\r\n                            .then(response => {\r\n                                console.log('response.status', response.status);\r\n                                return response.json();\r\n                            })\r\n                            .then(async (data) => {\r\n                                const user = {\r\n                                    uid: data.Uid,\r\n                                    email: data.Email,\r\n                                    firstName: data.FirstName,\r\n                                    lastName: data.LastName,\r\n                                    city: data.City,\r\n                                    pNumber: data.PNumber,\r\n                                    lon: data.Lon,\r\n                                    lat: data.Lat,\r\n                                    img: data.Img\r\n                                }\r\n                                setCurrentUser(user);\r\n                                console.log(\"Current User Details:\")\r\n                                console.log(user)\r\n                                flag = true;\r\n                                callbackfunc(flag);\r\n                            },\r\n                                (error) => {\r\n                                    console.log(\"err get=\", error);\r\n\r\n                                })\r\n\r\n                    }\r\n                    else {\r\n                        setCurrentUser('');\r\n                    }\r\n                })\r\n            }\r\n            )\r\n            .catch(err => {\r\n                switch (err.code) {\r\n                    case \"auth/invalid-email\":\r\n                    case \"auth/user-disabled\":\r\n                    case \"auth/user-not-found\":\r\n                        alert(\"wrong Email\");\r\n                        console.log(err.message)\r\n                        break;\r\n                    case \"auth/wrong-password\":\r\n                        alert(\"wrong Password\");\r\n                        console.log(err.message)\r\n                        break;\r\n                }\r\n                flag = false;\r\n                callbackfunc(flag);\r\n            });\r\n    }\r\n\r\n    function Logout() {\r\n        fire.auth().signOut();\r\n        clearUserContext();\r\n    }\r\n\r\n    function clearUserContext() {\r\n        setCurrentUser('');\r\n        setCurrentChef('');\r\n        setCurrentChefDishes(null);\r\n        setChefsArr('');\r\n        setFriendsArr(null);\r\n        setReviewsArr('');\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setUserID('');\r\n        setSelectedImage('');\r\n        setCart([]);\r\n        setOrders([]);\r\n        setFriendsArrDetails(null);\r\n        setFriendsReviews(null);\r\n \r\n\r\n    }\r\n\r\n    const value = {\r\n        currentUser,\r\n        setCurrentUser,\r\n        name,\r\n        email,\r\n        password,\r\n        userID,\r\n        signup,\r\n        signin,\r\n        updateEmail,\r\n        updatePassword,\r\n        onLogin,\r\n        Logout,\r\n        chefsArr,\r\n        selectedChef,\r\n        currentChefDishes,\r\n        setCurrentChefDishes,\r\n        currentChef,\r\n        updateImage,\r\n        cartTotal,\r\n        cart,\r\n        setCart,\r\n        sliderValue,\r\n        setSliderValue,\r\n        setOrder,\r\n        getOrders,\r\n        orders,\r\n        fireStoreImg,\r\n        getFireStoreImg,\r\n        getConnections,\r\n        friendsArr,\r\n        setFriendsArr,\r\n        friendsInDepth,\r\n        setFriendsInDepth,\r\n        tempUsers,\r\n        setTempUsers,\r\n        friendsReviews,\r\n        getDetails,\r\n        friendsArrDetails\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={value}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}