{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Shachar\\\\Desktop\\\\P\\\\reactHomeals\\\\components\\\\DishCard.js\";\n\nimport * as React from 'react';\nimport { Avatar, Button, Card, Title, Paragraph, Text } from 'react-native-paper';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { AntDesign } from '@expo/vector-icons';\nimport NumericInput from 'react-native-numeric-input';\n\nvar DishCard = function DishCard(props) {\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(NumericInput, {\n    onLimitReached: function onLimitReached(isMin, msg) {\n      return console.log(isMin, msg);\n    },\n    totalWidth: 80,\n    totalHeight: 30,\n    iconSize: 10,\n    step: 1,\n    minValue: 0,\n    valueType: \"real\",\n    rounded: true,\n    editable: false,\n    textColor: \"#B0228C\",\n    iconStyle: {\n      color: \"white\"\n    },\n    rightButtonBackgroundColor: \"#18c2ef\",\n    leftButtonBackgroundColor: \"#ff8080\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), React.createElement(NumericInput, {\n    totalWidth: 150,\n    totalHeight: 35,\n    minValue: 0,\n    maxValue: 9999,\n    onLimitReached: function onLimitReached(isMAx, msg) {\n      return console.log(msg);\n    },\n    step: 5,\n    iconStyle: {\n      fontSize: 15,\n      color: '#434A5E'\n    },\n    inputStyle: {\n      fontSize: 18,\n      color: '#434A5E'\n    },\n    valueType: \"real\",\n    borderColor: \"#C7CBD6\",\n    rightButtonBackgroundColor: \"#C7CBD6\",\n    leftButtonBackgroundColor: \"#C7CBD6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.instructions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Basic Numeric Input - no limits\"), React.createElement(NumericInput, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.seprator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.instructions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Rounded Numeric Input - with minValue of 0\"), React.createElement(NumericInput, {\n    rounded: true,\n    minValue: 0,\n    onLimitReached: function onLimitReached(isMax, msg) {\n      return console.log(isMax, msg);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.seprator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.instructions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Basic Numeric Input - with step of 0.5 and valueType real\"), React.createElement(NumericInput, {\n    type: \"up-down\",\n    valueType: \"real\",\n    step: 0.5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.seprator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.instructions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Rounded Numeric Input - with minValue of 0 and maxValue of 5\"), React.createElement(NumericInput, {\n    rounded: true,\n    type: \"up-down\",\n    minValue: 0,\n    validateOnBlur: true,\n    maxValue: 5,\n    onLimitReached: function onLimitReached(isMax, msg) {\n      return console.log(isMax, msg);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.seprator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.instructions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Rounded Numeric Input - with styling and initial value of 6\"), React.createElement(NumericInput, {\n    rounded: true,\n    type: \"up-down\",\n    textColor: \"#26547C\",\n    iconStyle: {\n      color: 'green'\n    },\n    upDownButtonsBackgroundColor: \"#06D6A0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.seprator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.instructions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Rounded Numeric Input with styling\"), React.createElement(NumericInput, {\n    rounded: true,\n    textColor: \"#59656F\",\n    iconStyle: {\n      color: 'white'\n    },\n    rightButtonBackgroundColor: \"#AC9FBB\",\n    leftButtonBackgroundColor: \"#DDBDD5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.seprator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  shadow: {\n    paddingLeft: 20,\n    flexWrap: 'wrap',\n    flexDirection: 'row',\n    height: 280,\n    width: 370,\n    marginTop: 8,\n    marginBottom: 8,\n    elevation: 5,\n    paddingTop: 15,\n    alignItems: 'center',\n    borderRadius: 15\n  },\n  numeric: {\n    height: 32,\n    width: 100,\n    paddingBottom: 50,\n    marginBottom: 50\n  }\n});\nexport default DishCard;","map":{"version":3,"sources":["C:/Users/Shachar/Desktop/P/reactHomeals/components/DishCard.js"],"names":["React","Avatar","Button","Card","Title","Paragraph","Text","AntDesign","NumericInput","DishCard","props","isMin","msg","console","log","color","isMAx","fontSize","styles","instructions","seprator","isMax","StyleSheet","create","shadow","paddingLeft","flexWrap","flexDirection","height","width","marginTop","marginBottom","elevation","paddingTop","alignItems","borderRadius","numeric","paddingBottom"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Avatar, Button, Card, Title, Paragraph, Text } from 'react-native-paper';\r\nimport { View, StyleSheet, Image, ScrollView, SafeAreaView } from 'react-native';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport NumericInput from 'react-native-numeric-input'\r\n\r\n\r\nconst DishCard = (props) => (\r\n    /*  <Card style={styles.shadow} onPress={props.onPress}>\r\n         <Card.Cover source={{ uri: props.img }} style={{ borderRadius: 15, borderTopRightRadius: 15, borderTopLeftRadius: 15, height: 150, width: 330, }} />\r\n         <Card.Title title={props.name} subtitle={props.description} subtitleNumberOfLines={3} style={{ flex: 1, flexWrap: 'wrap', width: '80%' }} />\r\n         <Card.Content>\r\n             <AntDesign name=\"star\" size={20} color=\"#ffcc00\" >\r\n                 <Text style={{ fontSize: 15, color: '#8c8c8c' }}> {props.rating}</Text>\r\n                 <Text style={{ color: '#dedede' }}> |</Text>\r\n                 <Text style={{ fontSize: 15, color: '#8c8c8c' }}> {props.dishType}</Text>\r\n                 <Text style={{ color: '#dedede' }}> |</Text>\r\n                 <Text style={{ fontSize: 15, color: '#8c8c8c' }}> {props.price}₪</Text>\r\n                 <Text style={{ color: '#dedede' }}> |</Text>\r\n                 <NumericInput totalHeight={30} iconSize={50} value={0} type='up-down' onChange={value => console.log(value)} />\r\n             </AntDesign>\r\n         </Card.Content>\r\n     </Card> */\r\n    <View>\r\n        <NumericInput\r\n\r\n            onLimitReached={(isMin, msg) => console.log(isMin, msg)}\r\n            totalWidth={80}\r\n            totalHeight={30}\r\n            iconSize={10}\r\n            step={1}\r\n            minValue={0}\r\n            valueType=\"real\"\r\n            rounded editable={false}\r\n            textColor=\"#B0228C\"\r\n            iconStyle={{ color: \"white\" }}\r\n            rightButtonBackgroundColor=\"#18c2ef\"\r\n            leftButtonBackgroundColor=\"#ff8080\"\r\n        />\r\n        <NumericInput\r\n            // initValue={this.state.v1}\r\n\r\n            totalWidth={150}\r\n            totalHeight={35}\r\n            minValue={0}\r\n            maxValue={9999}\r\n            onLimitReached={(isMAx, msg) => console.log(msg)}\r\n            step={5}\r\n            iconStyle={{ fontSize: 15, color: '#434A5E' }}\r\n            inputStyle={{ fontSize: 18, color: '#434A5E' }}\r\n            valueType='real'\r\n            borderColor='#C7CBD6'\r\n            rightButtonBackgroundColor='#C7CBD6'\r\n            leftButtonBackgroundColor='#C7CBD6'\r\n        />\r\n        <Text style={styles.instructions}>\r\n            Basic Numeric Input - no limits\r\n  </Text>\r\n        <NumericInput\r\n        />\r\n        <View style={styles.seprator} />\r\n        <Text style={styles.instructions}>\r\n            Rounded Numeric Input - with minValue of 0\r\n  </Text>\r\n        <NumericInput\r\n            rounded minValue={0} onLimitReached={(isMax, msg) => console.log(isMax, msg)} />\r\n        <View style={styles.seprator} />\r\n\r\n        <Text style={styles.instructions}>\r\n            Basic Numeric Input - with step of 0.5 and valueType real\r\n  </Text>\r\n        <NumericInput\r\n            type='up-down' valueType='real' step={0.5} />\r\n        <View style={styles.seprator} />\r\n\r\n        <Text style={styles.instructions}>\r\n            Rounded Numeric Input - with minValue of 0 and maxValue of 5\r\n  </Text>\r\n        <NumericInput rounded type='up-down' minValue={0} validateOnBlur maxValue={5} onLimitReached={(isMax, msg) => console.log(isMax, msg)} />\r\n        <View style={styles.seprator} />\r\n\r\n        <Text style={styles.instructions}>\r\n            Rounded Numeric Input - with styling and initial value of 6\r\n  </Text>\r\n        <NumericInput\r\n\r\n            rounded type='up-down' textColor='#26547C' iconStyle={{ color: 'green' }} upDownButtonsBackgroundColor='#06D6A0' />\r\n        <View style={styles.seprator} />\r\n\r\n        <Text style={styles.instructions}>\r\n            Rounded Numeric Input with styling\r\n  </Text>\r\n        <NumericInput\r\n\r\n            rounded textColor='#59656F' iconStyle={{ color: 'white' }} rightButtonBackgroundColor='#AC9FBB' leftButtonBackgroundColor='#DDBDD5' />\r\n        <View style={styles.seprator} />\r\n    </View>\r\n\r\n\r\n\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    shadow: {\r\n        paddingLeft: 20,\r\n        flexWrap: 'wrap',\r\n        flexDirection: 'row',\r\n        height: 280,\r\n        width: 370,\r\n        marginTop: 8,\r\n        marginBottom: 8,\r\n        elevation: 5,\r\n        paddingTop: 15,\r\n        alignItems: 'center',\r\n        borderRadius: 15,\r\n    },\r\n    numeric: {\r\n        height: 32,\r\n        width: 100,\r\n        paddingBottom: 50,\r\n        marginBottom: 50\r\n    }\r\n})\r\n\r\nexport default DishCard;\r\n\r\n"]},"metadata":{},"sourceType":"module"}