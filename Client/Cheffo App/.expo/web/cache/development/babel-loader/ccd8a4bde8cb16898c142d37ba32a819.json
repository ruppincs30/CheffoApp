{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\asafs\\\\Documents\\\\github\\\\reactHomeals\\\\src\\\\UserContext.js\";\nimport fire from \"../fire\";\nimport { auth } from 'firebase';\nimport React, { useContext, useState, useEffect } from 'react';\nimport dbFirestore from \"../fire\";\nimport { getDistanceFromLatLonInKm } from \"../helpers/calcDis\";\nvar apiURLgetUser = \"http://192.168.5.111:50247/api/User/getUser/\";\nvar apiURLpostUser = \"http://192.168.5.111:50247/api/User/postUser/\";\nvar apiURLgetChefs = \"http://192.168.5.111:50247/api/Chef/getChefs/\";\nvar apiURLgetDishes = \"http://192.168.5.111:50247/api/Dish/getDishes/\";\nvar apiURLpostOrder = \"http://192.168.5.111:50247/api/Order/postOrder/\";\nvar apiURLgetOrder = \"http://192.168.5.111:50247/api/Order/getOrder/\";\nvar apiURLgetConnections = \"http://192.168.5.111:50247/api/Connection/getConnections/\";\nvar UserContext = React.createContext();\nvar UserUpdateContext = React.createContext();\nexport function useUserContext() {\n  return useContext(UserContext);\n}\nexport function useUserUpdateContext() {\n  return useContext(UserUpdateContext);\n}\nexport function UserProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUser = _useState2[0],\n      setCurrentUser = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentChef = _useState4[0],\n      setCurrentChef = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentChefDishes = _useState6[0],\n      setCurrentChefDishes = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      chefsArr = _useState8[0],\n      setChefsArr = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      connectionsArr = _useState10[0],\n      setConnectionsArr = _useState10[1];\n\n  var _useState11 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      name = _useState12[0],\n      setName = _useState12[1];\n\n  var _useState13 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      email = _useState14[0],\n      setEmail = _useState14[1];\n\n  var _useState15 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      password = _useState16[0],\n      setPassword = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      userID = _useState18[0],\n      setUserID = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      selectedImage = _useState20[0],\n      setSelectedImage = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      cart = _useState22[0],\n      setCart = _useState22[1];\n\n  var _useState23 = useState(26),\n      _useState24 = _slicedToArray(_useState23, 2),\n      sliderValue = _useState24[0],\n      setSliderValue = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      orders = _useState26[0],\n      setOrders = _useState26[1];\n\n  function fireStoreImg() {\n    dbFirestore.firestore().collection('userData').doc(currentUser.uid).set({\n      imgUrl: currentUser.img\n    }).then(function () {\n      console.log('User added!');\n    });\n  }\n\n  function getFireStoreImg() {\n    var temp, userImg;\n    return _regeneratorRuntime.async(function getFireStoreImg$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            temp = currentUser;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(dbFirestore.firestore().collection('userData').get());\n\n          case 3:\n            userImg = _context.sent;\n            console.log(userImg);\n            userImg.wP.docChanges.forEach(function (element) {\n              if (currentUser.uid == element.doc.key.path.segments[6]) temp.img = element.doc.proto.fields.imgUrl.stringValue;\n            });\n            console.log(temp);\n            setCurrentUser(temp);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function cartTotal(name, price, quantity) {\n    var tempCart;\n    var tempDish = {\n      Name: name,\n      Price: price,\n      Quantity: quantity\n    };\n    var flag = false;\n\n    if (cart) {\n      cart.map(function (item, key) {\n        if (item.Name == name) {\n          item.Quantity = quantity;\n          flag = true;\n          tempCart = cart;\n        }\n      });\n    } else {\n      setCart([tempDish]);\n      return;\n    }\n\n    if (!flag) {\n      tempCart = cart;\n      tempCart.push(tempDish);\n    }\n\n    setCart(tempCart);\n    console.log(cart);\n    console.log(tempDish);\n  }\n\n  function getOrders() {\n    fetch(apiURLgetOrder + currentUser.uid, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json; charset=UTF-8'\n      })\n    }).then(function (response) {\n      console.log('response.status', response.status);\n      return response.json();\n    }).then(function (data) {\n      setOrders(data);\n    }, function (error) {\n      console.log(\"err get=\", error);\n    });\n  }\n\n  function setOrder() {\n    var sum = 0;\n    var orderStr = '';\n    cart.forEach(function (element) {\n      if (element.Quantity != 0) {\n        sum += element.Quantity * element.Price;\n        orderStr += element.Quantity + 'x ' + element.Name + ' - ' + element.Quantity * element.Price + '; ';\n      }\n    });\n    var currentdate = new Date();\n    var datetime = currentdate.getDate() + \"/\" + (currentdate.getMonth() + 1) + \"/\" + currentdate.getFullYear() + \" - \" + currentdate.getHours() + \":\" + currentdate.getMinutes();\n    var newOrder = {\n      uid: currentUser.uid,\n      chefEmail: currentChef.Email,\n      orderTime: datetime,\n      orderDescription: orderStr,\n      totalPrice: sum,\n      chef: currentChef.DisplayName\n    };\n    fetch(apiURLpostOrder, {\n      method: 'POST',\n      body: JSON.stringify(newOrder),\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json; charset=UTF-8'\n      })\n    }).then(function (response) {\n      console.log('response=', response);\n      console.log('response.status', response.status);\n      console.log('response.ok', response.ok);\n      return response.json();\n    });\n    setCart([]);\n  }\n\n  function onLogin(email, userID) {\n    setEmail(email);\n    setUserID(userID);\n  }\n\n  function updateImage(img) {\n    currentUser.img = img;\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  function signup(firstName, lastName, city, phone, email, password, lon, lat) {\n    var flag;\n    return _regeneratorRuntime.async(function signup$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            flag = true;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fire.auth().createUserWithEmailAndPassword(email, password).then(function (user) {\n              console.log(user.user.uid + \" / \" + email + \" / \" + firstName + \" / \" + lastName + \" / \" + city + \" / \" + phone);\n              var newUser = {\n                uid: user.user.uid,\n                email: email,\n                firstName: firstName,\n                lastName: lastName,\n                city: city,\n                pNumber: phone,\n                lon: lon,\n                lat: lat\n              };\n              console.log(newUser);\n              fetch(apiURLpostUser, {\n                method: 'POST',\n                body: JSON.stringify(newUser),\n                headers: new Headers({\n                  'Content-Type': 'application/json; charset=UTF-8',\n                  'Accept': 'application/json; charset=UTF-8'\n                })\n              }).then(function (response) {\n                console.log('response=', response);\n                console.log('response.status', response.status);\n                console.log('response.ok', response.ok);\n                return response.json();\n              });\n            }).catch(function (err) {\n              switch (err.code) {\n                case \"auth/email-already-in-use\":\n                case \"auth/invalid-email\":\n                case \"auth/weak-password\":\n                  alert(err.message);\n                  flag = false;\n                  break;\n              }\n            }));\n\n          case 3:\n            return _context2.abrupt(\"return\", flag);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    getChefs();\n  }, [currentUser]);\n\n  function selectedChef(email) {\n    return _regeneratorRuntime.async(function selectedChef$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(getDishes(email));\n\n          case 2:\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(chefsArr.forEach(function (element) {\n              if (element.Email == email) {\n                setCurrentChef(element);\n              }\n            }));\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getDishes(email) {\n    fetch(apiURLgetDishes + email + '/', {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json; charset=UTF-8'\n      })\n    }).then(function (response) {\n      console.log('response.status', response.status);\n      return response.json();\n    }).then(function (data) {\n      setCurrentChefDishes(data);\n    }, function (error) {\n      console.log(\"err get=\", error);\n    });\n  }\n\n  function getChefs() {\n    fetch(apiURLgetChefs, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json; charset=UTF-8'\n      })\n    }).then(function (response) {\n      console.log('response.status', response.status);\n      return response.json();\n    }).then(function (data) {\n      var tempChefs = [];\n      data.forEach(function (element) {\n        var chef = {\n          Address: element.Address,\n          DisplayName: element.DisplayName,\n          Email: element.Email,\n          FirstName: element.FirstName,\n          LastName: element.LastName,\n          PNumber: element.PNumber,\n          Lon: element.Lon,\n          Lat: element.Lat,\n          Rating: element.Rating,\n          FoodType: element.FoodType,\n          Img: element.Img,\n          DisFromUser: getDistanceFromLatLonInKm(currentUser.lat, currentUser.lon, element.Lat, element.Lon)\n        };\n        tempChefs.push(chef);\n      });\n      setChefsArr(tempChefs);\n    }, function (error) {\n      console.log(\"err get=\", error);\n    });\n    getFireStoreImg();\n  }\n\n  function getConnections() {\n    var tempConnections;\n    return _regeneratorRuntime.async(function getConnections$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            tempConnections = [];\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(fetch(apiURLgetConnections + currentUser.uid, {\n              method: 'GET',\n              headers: new Headers({\n                'Content-Type': 'application/json; charset=UTF-8',\n                'Accept': 'application/json; charset=UTF-8'\n              })\n            }).then(function (response) {\n              console.log('response.status', response.status);\n              return response.json();\n            }).then(function (data) {\n              data.forEach(function (element) {\n                var Connection = {\n                  TargetUid: element.TargetUid\n                };\n                tempConnections.push(Connection);\n              });\n              setConnectionsArr(tempConnections);\n              console.log(tempConnections);\n            }, function (error) {\n              console.log(\"err get=\", error);\n            }));\n\n          case 3:\n            tempConnections.forEach(function (element) {\n              getReviews(element);\n            });\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getReviews(friendsUid) {\n    return _regeneratorRuntime.async(function getReviews$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            console.log(friendsUid);\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function signin(email, password, callbackfunc) {\n    var flag;\n    return _regeneratorRuntime.async(function signin$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return _regeneratorRuntime.awrap(fire.auth().signInWithEmailAndPassword(email, password).then(function _callee3() {\n              return _regeneratorRuntime.async(function _callee3$(_context8) {\n                while (1) {\n                  switch (_context8.prev = _context8.next) {\n                    case 0:\n                      _context8.next = 2;\n                      return _regeneratorRuntime.awrap(fire.auth().onAuthStateChanged(function _callee2(authUser) {\n                        return _regeneratorRuntime.async(function _callee2$(_context7) {\n                          while (1) {\n                            switch (_context7.prev = _context7.next) {\n                              case 0:\n                                if (!(authUser !== null)) {\n                                  _context7.next = 5;\n                                  break;\n                                }\n\n                                _context7.next = 3;\n                                return _regeneratorRuntime.awrap(fetch(apiURLgetUser + authUser.uid, {\n                                  method: 'GET',\n                                  headers: new Headers({\n                                    'Content-Type': 'application/json; charset=UTF-8',\n                                    'Accept': 'application/json; charset=UTF-8'\n                                  })\n                                }).then(function (response) {\n                                  console.log('response.status', response.status);\n                                  return response.json();\n                                }).then(function _callee(data) {\n                                  var user;\n                                  return _regeneratorRuntime.async(function _callee$(_context6) {\n                                    while (1) {\n                                      switch (_context6.prev = _context6.next) {\n                                        case 0:\n                                          user = {\n                                            uid: data.Uid,\n                                            email: data.Email,\n                                            firstName: data.FirstName,\n                                            lastName: data.LastName,\n                                            city: data.City,\n                                            pNumber: data.PNumber,\n                                            lon: data.Lon,\n                                            lat: data.Lat,\n                                            img: data.Img\n                                          };\n                                          setCurrentUser(user);\n                                          console.log(user);\n                                          flag = true;\n                                          callbackfunc(flag);\n\n                                        case 5:\n                                        case \"end\":\n                                          return _context6.stop();\n                                      }\n                                    }\n                                  }, null, null, null, Promise);\n                                }, function (error) {\n                                  console.log(\"err get=\", error);\n                                }));\n\n                              case 3:\n                                _context7.next = 6;\n                                break;\n\n                              case 5:\n                                setCurrentUser('');\n\n                              case 6:\n                              case \"end\":\n                                return _context7.stop();\n                            }\n                          }\n                        }, null, null, null, Promise);\n                      }));\n\n                    case 2:\n                    case \"end\":\n                      return _context8.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (err) {\n              switch (err.code) {\n                case \"auth/invalid-email\":\n                case \"auth/user-disabled\":\n                case \"auth/user-not-found\":\n                  alert(\"wrong Email\");\n                  console.log(err.message);\n                  break;\n\n                case \"auth/wrong-password\":\n                  alert(\"wrong Password\");\n                  console.log(err.message);\n                  break;\n              }\n\n              flag = false;\n              callbackfunc(flag);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function Logout() {\n    fire.auth().signOut();\n  }\n\n  var value = {\n    currentUser: currentUser,\n    setCurrentUser: setCurrentUser,\n    name: name,\n    email: email,\n    password: password,\n    userID: userID,\n    signup: signup,\n    signin: signin,\n    updateEmail: updateEmail,\n    updatePassword: updatePassword,\n    onLogin: onLogin,\n    Logout: Logout,\n    chefsArr: chefsArr,\n    selectedChef: selectedChef,\n    currentChefDishes: currentChefDishes,\n    currentChef: currentChef,\n    updateImage: updateImage,\n    cartTotal: cartTotal,\n    cart: cart,\n    setCart: setCart,\n    sliderValue: sliderValue,\n    setSliderValue: setSliderValue,\n    setOrder: setOrder,\n    getOrders: getOrders,\n    orders: orders,\n    fireStoreImg: fireStoreImg,\n    getFireStoreImg: getFireStoreImg,\n    getConnections: getConnections,\n    connectionsArr: connectionsArr\n  };\n  return React.createElement(UserContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 9\n    }\n  }, children);\n}","map":{"version":3,"sources":["C:/Users/asafs/Documents/github/reactHomeals/src/UserContext.js"],"names":["fire","auth","React","useContext","useState","useEffect","dbFirestore","getDistanceFromLatLonInKm","apiURLgetUser","apiURLpostUser","apiURLgetChefs","apiURLgetDishes","apiURLpostOrder","apiURLgetOrder","apiURLgetConnections","UserContext","createContext","UserUpdateContext","useUserContext","useUserUpdateContext","UserProvider","children","currentUser","setCurrentUser","currentChef","setCurrentChef","currentChefDishes","setCurrentChefDishes","chefsArr","setChefsArr","connectionsArr","setConnectionsArr","value","error","name","setName","email","setEmail","password","setPassword","userID","setUserID","selectedImage","setSelectedImage","cart","setCart","sliderValue","setSliderValue","orders","setOrders","fireStoreImg","firestore","collection","doc","uid","set","imgUrl","img","then","console","log","getFireStoreImg","temp","get","userImg","wP","docChanges","forEach","element","key","path","segments","proto","fields","stringValue","cartTotal","price","quantity","tempCart","tempDish","Name","Price","Quantity","flag","map","item","push","getOrders","fetch","method","headers","Headers","response","status","json","data","setOrder","sum","orderStr","currentdate","Date","datetime","getDate","getMonth","getFullYear","getHours","getMinutes","newOrder","chefEmail","Email","orderTime","orderDescription","totalPrice","chef","DisplayName","body","JSON","stringify","ok","onLogin","updateImage","updateEmail","updatePassword","signup","firstName","lastName","city","phone","lon","lat","createUserWithEmailAndPassword","user","newUser","pNumber","catch","err","code","alert","message","getChefs","selectedChef","getDishes","tempChefs","Address","FirstName","LastName","PNumber","Lon","Lat","Rating","FoodType","Img","DisFromUser","getConnections","tempConnections","Connection","TargetUid","getReviews","friendsUid","signin","callbackfunc","signInWithEmailAndPassword","onAuthStateChanged","authUser","Uid","City","Logout","signOut"],"mappings":"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","sourcesContent":["import fire from '../fire'\r\nimport { auth } from 'firebase'\r\nimport React, { useContext, useState, useEffect } from 'react'\r\nimport dbFirestore from '../fire'\r\nimport { getDistanceFromLatLonInKm } from '../helpers/calcDis'\r\n\r\nlet apiURLgetUser = \"http://192.168.5.111:50247/api/User/getUser/\";\r\nlet apiURLpostUser = \"http://192.168.5.111:50247/api/User/postUser/\";\r\nlet apiURLgetChefs = \"http://192.168.5.111:50247/api/Chef/getChefs/\";\r\nlet apiURLgetDishes = \"http://192.168.5.111:50247/api/Dish/getDishes/\";\r\nlet apiURLpostOrder = \"http://192.168.5.111:50247/api/Order/postOrder/\";\r\nlet apiURLgetOrder = \"http://192.168.5.111:50247/api/Order/getOrder/\";\r\nlet apiURLgetConnections = \"http://192.168.5.111:50247/api/Connection/getConnections/\";\r\n\r\n\r\nconst UserContext = React.createContext()\r\nconst UserUpdateContext = React.createContext()\r\n\r\n\r\n\r\nexport function useUserContext() {\r\n    return useContext(UserContext)\r\n}\r\n\r\nexport function useUserUpdateContext() {\r\n    return useContext(UserUpdateContext)\r\n}\r\n\r\nexport function UserProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState('')\r\n    const [currentChef, setCurrentChef] = useState('')\r\n    const [currentChefDishes, setCurrentChefDishes] = useState('')\r\n    const [chefsArr, setChefsArr] = useState('')\r\n    const [connectionsArr, setConnectionsArr] = useState('')\r\n    const [name, setName] = useState({ value: '', error: '' })\r\n    const [email, setEmail] = useState({ value: '', error: '' })\r\n    const [password, setPassword] = useState({ value: '', error: '' })\r\n    const [userID, setUserID] = useState('')\r\n    const [selectedImage, setSelectedImage] = useState('');\r\n    const [cart, setCart] = useState([]);\r\n    const [sliderValue, setSliderValue] = useState(26);\r\n    const [orders, setOrders] = useState([]);\r\n\r\n\r\n    function fireStoreImg() {\r\n        dbFirestore.firestore()\r\n            .collection('userData')\r\n            .doc(currentUser.uid)\r\n            .set({\r\n                imgUrl: currentUser.img\r\n            })\r\n            .then(() => {\r\n                console.log('User added!');\r\n            });\r\n\r\n    }\r\n\r\n    async function getFireStoreImg() {\r\n        let temp = currentUser;\r\n\r\n        const userImg = await dbFirestore.firestore()\r\n            .collection('userData')\r\n            .get();\r\n        console.log(userImg)\r\n        userImg.wP.docChanges.forEach(element => {\r\n            if (currentUser.uid == element.doc.key.path.segments[6])\r\n                temp.img = element.doc.proto.fields.imgUrl.stringValue;\r\n        });\r\n        console.log(temp)\r\n        setCurrentUser(temp)\r\n\r\n\r\n        /*   console.log(userImg) */\r\n\r\n        /* console.log(userImg.cP.qe.Zt.root.value.Zt); */\r\n        /* temp.img = userImg.cP.qe.Zt.root.value.Zt; */\r\n        /*  setCurrentUser(temp);\r\n         console.log(currentUser) */\r\n    }\r\n\r\n    function cartTotal(name, price, quantity) {\r\n        let tempCart;\r\n        let tempDish = {\r\n            Name: name,\r\n            Price: price,\r\n            Quantity: quantity\r\n        }\r\n        let flag = false;\r\n        if (cart) {\r\n            cart.map((item, key) => {\r\n                if (item.Name == name) {\r\n                    item.Quantity = quantity;\r\n                    flag = true;\r\n                    tempCart = cart;\r\n                }\r\n            }\r\n            )\r\n        }\r\n        else {\r\n            setCart([tempDish]);\r\n            return;\r\n        }\r\n        if (!flag) {\r\n            tempCart = cart;\r\n            tempCart.push(tempDish);\r\n        }\r\n        setCart(tempCart);\r\n        console.log(cart);\r\n        console.log(tempDish);\r\n    }\r\n\r\n    function getOrders() {\r\n        /* Get Orders from SQL */\r\n        fetch(apiURLgetOrder + currentUser.uid, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response.status', response.status);\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                setOrders(data);\r\n            },\r\n                (error) => {\r\n                    console.log(\"err get=\", error);\r\n                });\r\n\r\n    }\r\n\r\n    function setOrder() {\r\n        let sum = 0;\r\n        let orderStr = '';\r\n        cart.forEach(element => {\r\n            if (element.Quantity != 0) {\r\n                sum += (element.Quantity * element.Price)\r\n                orderStr += element.Quantity + 'x ' + element.Name + ' - ' + (element.Quantity * element.Price) + '; ';\r\n            }\r\n        });\r\n        var currentdate = new Date();\r\n        var datetime = currentdate.getDate() + \"/\"\r\n            + (currentdate.getMonth() + 1) + \"/\"\r\n            + currentdate.getFullYear() + \" - \"\r\n            + currentdate.getHours() + \":\"\r\n            + currentdate.getMinutes();\r\n        let newOrder = {\r\n            uid: currentUser.uid,\r\n            chefEmail: currentChef.Email,\r\n            orderTime: datetime,\r\n            orderDescription: orderStr,\r\n            totalPrice: sum,\r\n            chef: currentChef.DisplayName\r\n        }\r\n        fetch(apiURLpostOrder, {\r\n            method: 'POST',\r\n            body: JSON.stringify(newOrder),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response=', response);\r\n                console.log('response.status', response.status);\r\n                console.log('response.ok', response.ok);\r\n                return response.json();\r\n            })\r\n        setCart([]);\r\n    }\r\n\r\n    function onLogin(email, userID) {\r\n        setEmail(email);\r\n        setUserID(userID);\r\n\r\n    }\r\n\r\n    function updateImage(img) {\r\n        currentUser.img = img;\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    async function signup(firstName, lastName, city, phone, email, password, lon, lat) {\r\n        var flag = true;\r\n        await fire\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then(function (user) {\r\n                console.log(user.user.uid + \" / \" + email + \" / \" + firstName + \" / \" + lastName + \" / \" + city + \" / \" + phone)\r\n                const newUser = {\r\n                    uid: user.user.uid,\r\n                    email: email,\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    city: city,\r\n                    pNumber: phone,\r\n                    lon: lon,\r\n                    lat: lat\r\n                }\r\n                console.log(newUser);\r\n                fetch(apiURLpostUser, {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(newUser),\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json; charset=UTF-8',\r\n                        'Accept': 'application/json; charset=UTF-8'\r\n                    })\r\n                })\r\n                    .then(response => {\r\n                        console.log('response=', response);\r\n                        console.log('response.status', response.status);\r\n                        console.log('response.ok', response.ok);\r\n                        return response.json();\r\n                    })\r\n            })\r\n            .catch(err => {\r\n                switch (err.code) {\r\n                    case \"auth/email-already-in-use\":\r\n                    case \"auth/invalid-email\":\r\n                    case \"auth/weak-password\":\r\n                        alert(err.message);\r\n                        flag = false;\r\n                        break;\r\n                }\r\n            });\r\n\r\n\r\n        return flag;\r\n    }\r\n\r\n    useEffect(() => {\r\n        getChefs();\r\n    }, [currentUser])\r\n\r\n\r\n\r\n    async function selectedChef(email) {\r\n        await getDishes(email);\r\n        await chefsArr.forEach(element => {\r\n            if (element.Email == email) {\r\n                setCurrentChef(element);\r\n            }\r\n        });\r\n    }\r\n\r\n    function getDishes(email) {\r\n        /* Get Dishes from SQL */\r\n        fetch(apiURLgetDishes + email + '/', {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response.status', response.status);\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                setCurrentChefDishes(data);\r\n            },\r\n                (error) => {\r\n                    console.log(\"err get=\", error);\r\n                });\r\n    }\r\n\r\n    function getChefs() {\r\n\r\n        /* Get Chefs from SQL */\r\n        fetch(apiURLgetChefs, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response.status', response.status);\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                let tempChefs = [];\r\n                data.forEach(element => {\r\n                    const chef = {\r\n                        Address: element.Address,\r\n                        DisplayName: element.DisplayName,\r\n                        Email: element.Email,\r\n                        FirstName: element.FirstName,\r\n                        LastName: element.LastName,\r\n                        PNumber: element.PNumber,\r\n                        Lon: element.Lon,\r\n                        Lat: element.Lat,\r\n                        Rating: element.Rating,\r\n                        FoodType: element.FoodType,\r\n                        Img: element.Img,\r\n                        DisFromUser: getDistanceFromLatLonInKm(currentUser.lat, currentUser.lon, element.Lat, element.Lon)\r\n                    }\r\n                    tempChefs.push(chef);\r\n                });\r\n                setChefsArr(tempChefs);\r\n\r\n            },\r\n                (error) => {\r\n                    console.log(\"err get=\", error);\r\n                });\r\n        getFireStoreImg()\r\n    }\r\n\r\n    async function getConnections() {\r\n        /* Get Connections from SQL */\r\n        let tempConnections = [];\r\n        await fetch(apiURLgetConnections + currentUser.uid, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response.status', response.status);\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n              \r\n                data.forEach(element => {\r\n                    const Connection = {\r\n                        TargetUid: element.TargetUid,\r\n                    }\r\n                    tempConnections.push(Connection);\r\n                });\r\n                setConnectionsArr(tempConnections);\r\n                console.log(tempConnections)\r\n\r\n            },\r\n                (error) => {\r\n                    console.log(\"err get=\", error);\r\n                });\r\n\r\n        tempConnections.forEach(element => {\r\n            getReviews(element)\r\n        });\r\n    }\r\n\r\n    async function getReviews(friendsUid) {\r\n        console.log(friendsUid)\r\n        /* await fetch(apiURLgetConnections + currentUser.uid, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response.status', response.status);\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                let tempConnections = [];\r\n                data.forEach(element => {\r\n                    const Connection = {\r\n                        TargetUid: element.TargetUid,\r\n                    }\r\n                    tempConnections.push(Connection);\r\n                });\r\n                setConnectionsArr(tempConnections);\r\n                console.log(tempConnections)\r\n\r\n            },\r\n                (error) => {\r\n                    console.log(\"err get=\", error);\r\n                });\r\n */\r\n\r\n    }\r\n\r\n    async function signin(email, password, callbackfunc) {\r\n        let flag;\r\n        await fire.auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(async () => {\r\n                await fire.auth().onAuthStateChanged(async authUser => {\r\n                    if (authUser !== null) {\r\n                        /* Get User Details from SQL */\r\n                        await fetch(apiURLgetUser + authUser.uid, {\r\n                            method: 'GET',\r\n                            headers: new Headers({\r\n                                'Content-Type': 'application/json; charset=UTF-8',\r\n                                'Accept': 'application/json; charset=UTF-8'\r\n                            })\r\n                        })\r\n                            .then(response => {\r\n                                console.log('response.status', response.status);\r\n                                return response.json();\r\n                            })\r\n                            .then(async (data) => {\r\n                                const user = {\r\n                                    uid: data.Uid,\r\n                                    email: data.Email,\r\n                                    firstName: data.FirstName,\r\n                                    lastName: data.LastName,\r\n                                    city: data.City,\r\n                                    pNumber: data.PNumber,\r\n                                    lon: data.Lon,\r\n                                    lat: data.Lat,\r\n                                    img: data.Img\r\n                                }\r\n                                setCurrentUser(user);\r\n                                console.log(user)\r\n                                flag = true;\r\n                                callbackfunc(flag);\r\n                            },\r\n                                (error) => {\r\n                                    console.log(\"err get=\", error);\r\n\r\n                                })\r\n\r\n                    }\r\n                    else {\r\n                        setCurrentUser('');\r\n                    }\r\n                })\r\n            }\r\n            )\r\n            .catch(err => {\r\n                switch (err.code) {\r\n                    case \"auth/invalid-email\":\r\n                    case \"auth/user-disabled\":\r\n                    case \"auth/user-not-found\":\r\n                        alert(\"wrong Email\");\r\n                        console.log(err.message)\r\n                        break;\r\n                    case \"auth/wrong-password\":\r\n                        alert(\"wrong Password\");\r\n                        console.log(err.message)\r\n                        break;\r\n                }\r\n                flag = false;\r\n                callbackfunc(flag);\r\n            });\r\n    }\r\n\r\n    function Logout() {\r\n        fire.auth().signOut();\r\n    }\r\n\r\n    const value = {\r\n        currentUser,\r\n        setCurrentUser,\r\n        name,\r\n        email,\r\n        password,\r\n        userID,\r\n        signup,\r\n        signin,\r\n        updateEmail,\r\n        updatePassword,\r\n        onLogin,\r\n        Logout,\r\n        chefsArr,\r\n        selectedChef,\r\n        currentChefDishes,\r\n        currentChef,\r\n        updateImage,\r\n        cartTotal,\r\n        cart,\r\n        setCart,\r\n        sliderValue,\r\n        setSliderValue,\r\n        setOrder,\r\n        getOrders,\r\n        orders,\r\n        fireStoreImg,\r\n        getFireStoreImg,\r\n        getConnections,\r\n        connectionsArr\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={value}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}