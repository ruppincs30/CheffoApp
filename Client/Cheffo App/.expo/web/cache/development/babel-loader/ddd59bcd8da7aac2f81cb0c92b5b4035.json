{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Shachar\\\\Desktop\\\\P\\\\reactHomeals\\\\components\\\\DishCard.js\";\n\nimport * as React from 'react';\nimport { Avatar, Button, Card, Title, Paragraph, Text } from 'react-native-paper';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { AntDesign } from '@expo/vector-icons';\nimport NumericInput from 'react-native-numeric-input';\n\nvar DishCard = function DishCard(props) {\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(NumericInput, {\n    value: _this.state.value1,\n    onChange: function onChange(value1) {\n      _this.setState({\n        value1: value1\n      });\n\n      console.log(_this.state.value1);\n    },\n    onLimitReached: function onLimitReached(isMin, msg) {\n      return console.log(isMin, msg);\n    },\n    totalWidth: 80,\n    totalHeight: 30,\n    iconSize: 10,\n    step: 1,\n    minValue: 0,\n    valueType: \"real\",\n    rounded: true,\n    editable: false,\n    textColor: \"#B0228C\",\n    iconStyle: {\n      color: \"white\"\n    },\n    rightButtonBackgroundColor: \"#18c2ef\",\n    leftButtonBackgroundColor: \"#ff8080\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), React.createElement(NumericInput, {\n    value: _this.state.v1,\n    onChange: function onChange(v1) {\n      _this.setState({\n        v1: v1\n      });\n\n      console.log(v1);\n    },\n    totalWidth: 150,\n    totalHeight: 35,\n    minValue: 0,\n    maxValue: 9999,\n    onLimitReached: function onLimitReached(isMAx, msg) {\n      return console.log(msg);\n    },\n    step: 5,\n    iconStyle: {\n      fontSize: 15,\n      color: '#434A5E'\n    },\n    inputStyle: {\n      fontSize: 18,\n      color: '#434A5E'\n    },\n    valueType: \"real\",\n    borderColor: \"#C7CBD6\",\n    rightButtonBackgroundColor: \"#C7CBD6\",\n    leftButtonBackgroundColor: \"#C7CBD6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.instructions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Basic Numeric Input - no limits\"), React.createElement(NumericInput, {\n    initValue: _this.state.v2,\n    value: _this.state.v2,\n    onChange: function onChange(v2) {\n      return _this.setState({\n        v2: v2\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.seprator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.instructions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Rounded Numeric Input - with minValue of 0\"), React.createElement(NumericInput, {\n    value: _this.state.v3,\n    onChange: function onChange(v3) {\n      return _this.setState({\n        v3: v3\n      });\n    },\n    rounded: true,\n    minValue: 0,\n    onLimitReached: function onLimitReached(isMax, msg) {\n      return console.log(isMax, msg);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.seprator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.instructions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Basic Numeric Input - with step of 0.5 and valueType real\"), React.createElement(NumericInput, {\n    initValue: _this.state.v4,\n    value: _this.state.v4,\n    onChange: function onChange(v4) {\n      return _this.setState({\n        v4: v4\n      });\n    },\n    type: \"up-down\",\n    valueType: \"real\",\n    step: 0.5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.seprator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.instructions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Rounded Numeric Input - with minValue of 0 and maxValue of 5\"), React.createElement(NumericInput, {\n    initValue: _this.state.value,\n    value: _this.state.value,\n    onChange: function onChange(value) {\n      return _this.setState({\n        value: value\n      });\n    },\n    rounded: true,\n    type: \"up-down\",\n    minValue: 0,\n    validateOnBlur: true,\n    maxValue: 5,\n    onLimitReached: function onLimitReached(isMax, msg) {\n      return console.log(isMax, msg);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.seprator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.instructions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Rounded Numeric Input - with styling and initial value of 6\"), React.createElement(NumericInput, {\n    value: _this.state.v5,\n    onChange: function onChange(v5) {\n      return _this.setState({\n        v5: v5\n      });\n    },\n    rounded: true,\n    type: \"up-down\",\n    textColor: \"#26547C\",\n    iconStyle: {\n      color: 'green'\n    },\n    upDownButtonsBackgroundColor: \"#06D6A0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.seprator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.instructions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Rounded Numeric Input with styling\"), React.createElement(NumericInput, {\n    initValue: _this.state.v6,\n    value: _this.state.v6,\n    onChange: function onChange(v6) {\n      return _this.setState({\n        v6: v6\n      });\n    },\n    rounded: true,\n    textColor: \"#59656F\",\n    iconStyle: {\n      color: 'white'\n    },\n    rightButtonBackgroundColor: \"#AC9FBB\",\n    leftButtonBackgroundColor: \"#DDBDD5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.seprator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.instructions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"Rounded Numeric Input with custom width\"), React.createElement(NumericInput, {\n    initValue: _this.state.v7,\n    value: _this.state.v7,\n    onChange: function onChange(v7) {\n      return _this.setState({\n        v7: v7\n      });\n    },\n    totalWidth: 200,\n    rounded: true,\n    textColor: \"#103900\",\n    iconStyle: {\n      color: 'white'\n    },\n    rightButtonBackgroundColor: \"#0FFF95\",\n    leftButtonBackgroundColor: \"#06BA63\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.seprator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.instructions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"Rounded Numeric Input with custom width and height\"), React.createElement(NumericInput, {\n    initValue: _this.state.v8,\n    value: _this.state.v8,\n    onChange: function onChange(v8) {\n      return _this.setState({\n        v8: v8\n      });\n    },\n    totalWidth: calcSize(500),\n    totalHeight: calcSize(100),\n    textColor: \"#B0228C\",\n    iconStyle: {\n      color: 'white'\n    },\n    rightButtonBackgroundColor: \"#EA3788\",\n    leftButtonBackgroundColor: \"#E56B70\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), \"/* \", React.createElement(NumericInput, {\n    value: 5,\n    onChange: function onChange(value) {\n      return console.log(value);\n    },\n    onLimitReached: function onLimitReached(isMax, msg) {\n      return console.log(isMax, msg);\n    },\n    totalWidth: 240,\n    totalHeight: 50,\n    iconSize: 25,\n    step: 1.5,\n    valueType: \"real\",\n    rounded: true,\n    textColor: \"#B0228C\",\n    iconStyle: {\n      color: 'white'\n    },\n    rightButtonBackgroundColor: \"#EA3788\",\n    leftButtonBackgroundColor: \"#E56B70\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 4\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  shadow: {\n    paddingLeft: 20,\n    flexWrap: 'wrap',\n    flexDirection: 'row',\n    height: 280,\n    width: 370,\n    marginTop: 8,\n    marginBottom: 8,\n    elevation: 5,\n    paddingTop: 15,\n    alignItems: 'center',\n    borderRadius: 15\n  },\n  numeric: {\n    height: 32,\n    width: 100,\n    paddingBottom: 50,\n    marginBottom: 50\n  }\n});\nexport default DishCard;","map":{"version":3,"sources":["C:/Users/Shachar/Desktop/P/reactHomeals/components/DishCard.js"],"names":["React","Avatar","Button","Card","Title","Paragraph","Text","AntDesign","NumericInput","DishCard","props","state","value1","setState","console","log","isMin","msg","color","v1","isMAx","fontSize","styles","instructions","v2","seprator","v3","isMax","v4","value","v5","v6","v7","v8","calcSize","StyleSheet","create","shadow","paddingLeft","flexWrap","flexDirection","height","width","marginTop","marginBottom","elevation","paddingTop","alignItems","borderRadius","numeric","paddingBottom"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Avatar, Button, Card, Title, Paragraph, Text } from 'react-native-paper';\r\nimport { View, StyleSheet, Image, ScrollView, SafeAreaView } from 'react-native';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport NumericInput from 'react-native-numeric-input'\r\n\r\n\r\nconst DishCard = (props) => (\r\n    /*  <Card style={styles.shadow} onPress={props.onPress}>\r\n         <Card.Cover source={{ uri: props.img }} style={{ borderRadius: 15, borderTopRightRadius: 15, borderTopLeftRadius: 15, height: 150, width: 330, }} />\r\n         <Card.Title title={props.name} subtitle={props.description} subtitleNumberOfLines={3} style={{ flex: 1, flexWrap: 'wrap', width: '80%' }} />\r\n         <Card.Content>\r\n             <AntDesign name=\"star\" size={20} color=\"#ffcc00\" >\r\n                 <Text style={{ fontSize: 15, color: '#8c8c8c' }}> {props.rating}</Text>\r\n                 <Text style={{ color: '#dedede' }}> |</Text>\r\n                 <Text style={{ fontSize: 15, color: '#8c8c8c' }}> {props.dishType}</Text>\r\n                 <Text style={{ color: '#dedede' }}> |</Text>\r\n                 <Text style={{ fontSize: 15, color: '#8c8c8c' }}> {props.price}₪</Text>\r\n                 <Text style={{ color: '#dedede' }}> |</Text>\r\n                 <NumericInput totalHeight={30} iconSize={50} value={0} type='up-down' onChange={value => console.log(value)} />\r\n             </AntDesign>\r\n         </Card.Content>\r\n     </Card> */\r\n    <View>\r\n        <NumericInput\r\n            value={this.state.value1}\r\n            onChange={value1 => { this.setState({ value1 }); console.log(this.state.value1); }}\r\n            onLimitReached={(isMin, msg) => console.log(isMin, msg)}\r\n            totalWidth={80}\r\n            totalHeight={30}\r\n            iconSize={10}\r\n            step={1}\r\n            minValue={0}\r\n            valueType=\"real\"\r\n            rounded editable={false}\r\n            textColor=\"#B0228C\"\r\n            iconStyle={{ color: \"white\" }}\r\n            rightButtonBackgroundColor=\"#18c2ef\"\r\n            leftButtonBackgroundColor=\"#ff8080\"\r\n        />\r\n        <NumericInput\r\n            // initValue={this.state.v1}\r\n            value={this.state.v1}\r\n            onChange={(v1) => { this.setState({ v1 }); console.log(v1) }}\r\n            totalWidth={150}\r\n            totalHeight={35}\r\n            minValue={0}\r\n            maxValue={9999}\r\n            onLimitReached={(isMAx, msg) => console.log(msg)}\r\n            step={5}\r\n            iconStyle={{ fontSize: 15, color: '#434A5E' }}\r\n            inputStyle={{ fontSize: 18, color: '#434A5E' }}\r\n            valueType='real'\r\n            borderColor='#C7CBD6'\r\n            rightButtonBackgroundColor='#C7CBD6'\r\n            leftButtonBackgroundColor='#C7CBD6'\r\n        />\r\n        <Text style={styles.instructions}>\r\n            Basic Numeric Input - no limits\r\n  </Text>\r\n        <NumericInput\r\n            initValue={this.state.v2}\r\n            value={this.state.v2}\r\n            onChange={(v2) => this.setState({ v2 })} />\r\n        <View style={styles.seprator} />\r\n        <Text style={styles.instructions}>\r\n            Rounded Numeric Input - with minValue of 0\r\n  </Text>\r\n        <NumericInput\r\n            value={this.state.v3}\r\n            onChange={(v3) => this.setState({ v3 })} rounded minValue={0} onLimitReached={(isMax, msg) => console.log(isMax, msg)} />\r\n        <View style={styles.seprator} />\r\n\r\n        <Text style={styles.instructions}>\r\n            Basic Numeric Input - with step of 0.5 and valueType real\r\n  </Text>\r\n        <NumericInput initValue={this.state.v4}\r\n            value={this.state.v4}\r\n            onChange={(v4) => this.setState({ v4 })} type='up-down' valueType='real' step={0.5} />\r\n        <View style={styles.seprator} />\r\n\r\n        <Text style={styles.instructions}>\r\n            Rounded Numeric Input - with minValue of 0 and maxValue of 5\r\n  </Text>\r\n        <NumericInput initValue={this.state.value} value={this.state.value} onChange={value => this.setState({ value })} rounded type='up-down' minValue={0} validateOnBlur maxValue={5} onLimitReached={(isMax, msg) => console.log(isMax, msg)} />\r\n        <View style={styles.seprator} />\r\n\r\n        <Text style={styles.instructions}>\r\n            Rounded Numeric Input - with styling and initial value of 6\r\n  </Text>\r\n        <NumericInput\r\n            value={this.state.v5}\r\n            onChange={(v5) => this.setState({ v5 })} rounded type='up-down' textColor='#26547C' iconStyle={{ color: 'green' }} upDownButtonsBackgroundColor='#06D6A0' />\r\n        <View style={styles.seprator} />\r\n\r\n        <Text style={styles.instructions}>\r\n            Rounded Numeric Input with styling\r\n  </Text>\r\n        <NumericInput initValue={this.state.v6}\r\n            value={this.state.v6}\r\n            onChange={(v6) => this.setState({ v6 })} rounded textColor='#59656F' iconStyle={{ color: 'white' }} rightButtonBackgroundColor='#AC9FBB' leftButtonBackgroundColor='#DDBDD5' />\r\n        <View style={styles.seprator} />\r\n\r\n\r\n        <Text style={styles.instructions}>\r\n            Rounded Numeric Input with custom width\r\n  </Text>\r\n        <NumericInput\r\n            initValue={this.state.v7}\r\n            value={this.state.v7}\r\n            onChange={(v7) => this.setState({ v7 })}\r\n            totalWidth={200}\r\n            rounded\r\n            textColor='#103900'\r\n            iconStyle={{ color: 'white' }}\r\n            rightButtonBackgroundColor='#0FFF95'\r\n            leftButtonBackgroundColor='#06BA63' />\r\n        <View style={styles.seprator} />\r\n\r\n\r\n        <Text style={styles.instructions}>\r\n            Rounded Numeric Input with custom width and height\r\n  </Text>\r\n        <NumericInput\r\n            initValue={this.state.v8}\r\n            value={this.state.v8}\r\n            onChange={(v8) => this.setState({ v8 })}\r\n            totalWidth={calcSize(500)}\r\n            totalHeight={calcSize(100)}\r\n            textColor='#B0228C'\r\n            iconStyle={{ color: 'white' }}\r\n            rightButtonBackgroundColor='#EA3788'\r\n            leftButtonBackgroundColor='#E56B70' />\r\n\r\n/* <NumericInput\r\n            value={5}\r\n            onChange={value => console.log(value)}\r\n            onLimitReached={(isMax,msg) => console.log(isMax,msg)}\r\n            totalWidth={240}\r\n            totalHeight={50}\r\n            iconSize={25}\r\n            step={1.5}\r\n            valueType='real'\r\n            rounded\r\n            textColor='#B0228C'\r\n            iconStyle={{ color: 'white' }}\r\n            rightButtonBackgroundColor='#EA3788'\r\n            leftButtonBackgroundColor='#E56B70'/>\r\n            </View>\r\n\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n\r\nshadow: {\r\n    paddingLeft: 20,\r\n    flexWrap: 'wrap',\r\n    flexDirection: 'row',\r\n    height: 280,\r\n    width: 370,\r\n    marginTop: 8,\r\n    marginBottom: 8,\r\n    elevation: 5,\r\n    paddingTop: 15,\r\n    alignItems: 'center',\r\n    borderRadius: 15,\r\n},\r\nnumeric: {\r\n    height: 32,\r\n    width: 100,\r\n    paddingBottom: 50,\r\n    marginBottom: 50\r\n}\r\n})\r\n\r\nexport default DishCard;\r\n\r\n"]},"metadata":{},"sourceType":"module"}