{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\asafs\\\\Documents\\\\github\\\\reactHomeals\\\\screens\\\\DishesScreen.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport Button from \"../components/Button\";\nimport { Text, Card } from 'react-native-paper';\nimport { SimpleLineIcons, AntDesign, Ionicons, Feather, MaterialCommunityIcons } from '@expo/vector-icons';\nimport BackButton from \"../components/BackButton\";\nimport DishCard from \"../components/DishCard\";\nimport CartCard from \"../components/CartCard\";\nimport { useUserContext } from \"../src/UserContext\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\n\nvar DishesScreen = function DishesScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useUserContext = useUserContext(),\n      currentChefDishes = _useUserContext.currentChefDishes,\n      currentChef = _useUserContext.currentChef,\n      cart = _useUserContext.cart,\n      setOrder = _useUserContext.setOrder,\n      setCart = _useUserContext.setCart;\n\n  var Tab = createMaterialBottomTabNavigator();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  function ShowDishes() {\n    var _this2 = this;\n\n    return React.createElement(View, {\n      style: {\n        height: \"100%\",\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, React.createElement(BackButton, {\n      goBack: navigation.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    })), React.createElement(Text, {\n      style: {\n        marginTop: \"15%\",\n        textAlign: 'center',\n        fontFamily: 'sans-serif-light',\n        color: \"#3ec92d\",\n        fontSize: 22\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, currentChef.DisplayName, \"'s Menu\"), React.createElement(ScrollView, {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        marginTop: \"5%\",\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, currentChefDishes.map(function (item, key) {\n      return React.createElement(DishCard, {\n        name: item.DisplayName,\n        img: item.Img,\n        dishType: item.DishType,\n        description: item.Description,\n        price: item.Price,\n        key: key,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }\n      });\n    }))));\n  }\n\n  var modalPop = function modalPop() {\n    setModalVisible(true);\n    setOrder();\n  };\n\n  function ShowCart() {\n    var _this3 = this;\n\n    return React.createElement(View, {\n      style: {\n        height: \"100%\",\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        marginTop: '10%',\n        fontSize: 35,\n        textAlign: 'center',\n        color: 'green'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"My Cart\"), console.log(cart), cart.length > 0 ? cart.map(function (item, key) {\n      return item.Quantity == 0 ? null : React.createElement(CartCard, {\n        currentChef: currentChef,\n        cartDish: item,\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 55\n        }\n      });\n    }) : React.createElement(Text, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, \"Your cart is empty\"), cart.length > 0 ? React.createElement(View, {\n      style: {\n        marginRight: \"2%\",\n        marginTop: 'auto',\n        marginLeft: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'sans-serif-medium',\n        fontSize: 17,\n        color: 'green'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }, \" Cart Total: \", cart.reduce(function (a, b) {\n      return a + b.Price * b.Quantity;\n    }, 0), \"\\u20AA\")), React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, React.createElement(Button, {\n      mode: \"outlined\",\n      style: {\n        borderRadius: 15,\n        backgroundColor: 'rgb(255,138,87)'\n      },\n      onPress: modalPop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'rgb(255 ,255, 255)',\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    }, \"Order Now\")))) : null, React.createElement(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        Alert.alert(\"Modal has been closed.\");\n        setModalVisible(!modalVisible);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.centeredView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: styles.modalView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.modalText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, \"Thank you !\"), console.log(cart), React.createElement(Pressable, {\n      style: [styles.button, styles.buttonClose],\n      onPress: function onPress() {\n        return setModalVisible(!modalVisible);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: styles.textStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    }, \"Ok\")), React.createElement(Text, {\n      style: styles.textStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, \"Ok\")))));\n  }\n\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"ShowDishes\",\n    activeColor: \"#fff\",\n    barStyle: {\n      backgroundColor: 'rgb(62,197,0)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"ShowDishes\",\n    component: ShowDishes,\n    options: {\n      tabBarLabel: 'Menu',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color;\n        return React.createElement(SimpleLineIcons, {\n          name: \"book-open\",\n          size: 20,\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"ShowCart\",\n    component: ShowCart,\n    options: {\n      tabBarLabel: 'Cart',\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color;\n        return React.createElement(AntDesign, {\n          style: styles.tabIcon,\n          name: \"shoppingcart\",\n          size: 20,\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default DishesScreen;\nvar styles = StyleSheet.create({\n  cartBar: {\n    height: 100,\n    marginTop: '10%',\n    width: '100%',\n    backgroundColor: 'green'\n  },\n  shadow: {\n    height: 60,\n    width: 370,\n    marginTop: 8,\n    marginBottom: 5,\n    elevation: 10,\n    borderRadius: 15\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 40,\n    padding: 15,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n    width: '75%',\n    height: '75%'\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/asafs/Documents/github/reactHomeals/screens/DishesScreen.js"],"names":["React","useEffect","useState","Button","Text","Card","SimpleLineIcons","AntDesign","Ionicons","Feather","MaterialCommunityIcons","BackButton","DishCard","CartCard","useUserContext","createMaterialBottomTabNavigator","DishesScreen","navigation","currentChefDishes","currentChef","cart","setOrder","setCart","Tab","modalVisible","setModalVisible","ShowDishes","height","width","flex","justifyContent","alignItems","goBack","marginTop","textAlign","fontFamily","color","fontSize","DisplayName","map","item","key","Img","DishType","Description","Price","modalPop","ShowCart","console","log","length","Quantity","marginRight","marginLeft","reduce","a","b","borderRadius","backgroundColor","fontWeight","Alert","alert","styles","centeredView","modalView","modalText","button","buttonClose","textStyle","tabBarLabel","tabBarIcon","tabIcon","StyleSheet","create","cartBar","shadow","marginBottom","elevation","margin","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","buttonOpen"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,oBAA3B;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,QAArC,EAA+CC,OAA/C,EAAwDC,sBAAxD,QAAsF,oBAAtF;AACA,OAAOC,UAAP;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP;AACA,SAASC,cAAT;;;;;;;;;AAEA,SAASC,gCAAT,QAAiD,wCAAjD;;AAMA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,wBAC8BH,cAAc,EAD5C;AAAA,MAC7BI,iBAD6B,mBAC7BA,iBAD6B;AAAA,MACVC,WADU,mBACVA,WADU;AAAA,MACGC,IADH,mBACGA,IADH;AAAA,MACSC,QADT,mBACSA,QADT;AAAA,MACkBC,OADlB,mBACkBA,OADlB;;AAErC,MAAMC,GAAG,GAAGR,gCAAgC,EAA5C;;AAFqC,kBAGGb,QAAQ,CAAC,KAAD,CAHX;AAAA;AAAA,MAG9BsB,YAH8B;AAAA,MAGhBC,eAHgB;;AAOrC,WAASC,UAAT,GAAsB;AAAA;;AAClB,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,cAAc,EAAE,QAA3B;AAAqCC,QAAAA,UAAU,EAAE;AAAjD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAEd,UAAU,CAACe,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE,KAAb;AAAoBC,QAAAA,SAAS,EAAE,QAA/B;AAAyCC,QAAAA,UAAU,EAAE,kBAArD;AAAyEC,QAAAA,KAAK,EAAE,SAAhF;AAA2FC,QAAAA,QAAQ,EAAE;AAArG,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyHlB,WAAW,CAACmB,WAArI,YAJJ,EAKI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAEV,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEK,QAAAA,SAAS,EAAE,IAAb;AAAmBJ,QAAAA,IAAI,EAAE,CAAzB;AAA4BC,QAAAA,cAAc,EAAE,QAA5C;AAAsDC,QAAAA,UAAU,EAAE;AAAlE,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKb,iBAAiB,CAACqB,GAAlB,CAAsB,UAACC,IAAD,EAAOC,GAAP;AAAA,aACnB,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAED,IAAI,CAACF,WAArB;AAAkC,QAAA,GAAG,EAAEE,IAAI,CAACE,GAA5C;AACI,QAAA,QAAQ,EAAEF,IAAI,CAACG,QADnB;AAC6B,QAAA,WAAW,EAAEH,IAAI,CAACI,WAD/C;AAC4D,QAAA,KAAK,EAAEJ,IAAI,CAACK,KADxE;AAC+E,QAAA,GAAG,EAAEJ,GADpF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADmB;AAAA,KAAtB,CADL,CADJ,CALJ,CADJ;AAiBH;;AAED,MAAMK,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnBrB,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAJ,IAAAA,QAAQ;AAGX,GALD;;AASA,WAAS0B,QAAT,GAAoB;AAAA;;AAChB,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEpB,QAAAA,MAAM,EAAE,MAAV;AAAkBI,QAAAA,UAAU,EAAE;AAA9B,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEE,QAAAA,SAAS,EAAE,KAAb;AAAoBI,QAAAA,QAAQ,EAAE,EAA9B;AAAkCH,QAAAA,SAAS,EAAE,QAA7C;AAAuDE,QAAAA,KAAK,EAAE;AAA9D,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEKY,OAAO,CAACC,GAAR,CAAY7B,IAAZ,CAFL,EAGMA,IAAI,CAAC8B,MAAL,GAAc,CAAf,GACG9B,IAAI,CAACmB,GAAL,CAAS,UAACC,IAAD,EAAOC,GAAP;AAAA,aACJD,IAAI,CAACW,QAAL,IAAiB,CAAlB,GAAuB,IAAvB,GAA8B,oBAAC,QAAD;AAAU,QAAA,WAAW,EAAEhC,WAAvB;AAAoC,QAAA,QAAQ,EAAEqB,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADzB;AAAA,KAAT,CADH,GAIG,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEN,QAAAA,SAAS,EAAE;AAAb,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAPR,EASMd,IAAI,CAAC8B,MAAL,GAAc,CAAf,GACG,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEE,QAAAA,WAAW,EAAE,IAAf;AAAqBnB,QAAAA,SAAS,EAAE,MAAhC;AAAwCoB,QAAAA,UAAU,EAAE;AAApD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAElB,QAAAA,UAAU,EAAE,mBAAd;AAAmCE,QAAAA,QAAQ,EAAE,EAA7C;AAAiDD,QAAAA,KAAK,EAAE;AAAxD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA8FhB,IAAI,CAACkC,MAAL,CAAY,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUD,CAAC,GAAIC,CAAC,CAACX,KAAF,GAAUW,CAAC,CAACL,QAA3B;AAAA,KAAZ,EAAkD,CAAlD,CAA9F,WADJ,CADJ,EAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,UAAb;AAAwB,MAAA,KAAK,EAAE;AAAEM,QAAAA,YAAY,EAAE,EAAhB;AAAoBC,QAAAA,eAAe,EAAE;AAArC,OAA/B;AAAyF,MAAA,OAAO,EAAEZ,QAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEV,QAAAA,KAAK,EAAE,oBAAT;AAA+BuB,QAAAA,UAAU,EAAE;AAA3C,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,CAJJ,CADH,GAWK,IApBV,EAwBI,oBAAC,KAAD;AACI,MAAA,aAAa,EAAC,OADlB;AAEI,MAAA,WAAW,EAAE,IAFjB;AAGI,MAAA,OAAO,EAAEnC,YAHb;AAII,MAAA,cAAc,EAAE,0BAAM;AAClBoC,QAAAA,KAAK,CAACC,KAAN,CAAY,wBAAZ;AACApC,QAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACH,OAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEsC,MAAM,CAACC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAIKjB,OAAO,CAACC,GAAR,CAAY7B,IAAZ,CAJL,EAMI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAE,CAAC0C,MAAM,CAACI,MAAR,EAAgBJ,MAAM,CAACK,WAAvB,CADX;AAEI,MAAA,OAAO,EAAE;AAAA,eAAM1C,eAAe,CAAC,CAACD,YAAF,CAArB;AAAA,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEsC,MAAM,CAACM,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,CANJ,EAaI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEN,MAAM,CAACM,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,CADJ,CAVJ,CAxBJ,CADJ;AA0DH;;AAID,SACI,oBAAC,GAAD,CAAK,SAAL;AACI,IAAA,gBAAgB,EAAC,YADrB;AAEI,IAAA,WAAW,EAAC,MAFhB;AAGI,IAAA,QAAQ,EAAE;AAAEV,MAAAA,eAAe,EAAE;AAAnB,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,YAAjB;AAA8B,IAAA,SAAS,EAAEhC,UAAzC;AACI,IAAA,OAAO,EAAE;AACL2C,MAAAA,WAAW,EAAE,MADR;AAELC,MAAAA,UAAU,EAAE;AAAA,YAAGlC,KAAH,SAAGA,KAAH;AAAA,eACR,oBAAC,eAAD;AAAiB,UAAA,IAAI,EAAC,WAAtB;AAAkC,UAAA,IAAI,EAAE,EAAxC;AAA4C,UAAA,KAAK,EAAEA,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADQ;AAAA;AAFP,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAaI,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,UAAjB;AAA4B,IAAA,SAAS,EAAEW,QAAvC;AACI,IAAA,OAAO,EAAE;AACLsB,MAAAA,WAAW,EAAE,MADR;AAELC,MAAAA,UAAU,EAAE;AAAA,YAAGlC,KAAH,SAAGA,KAAH;AAAA,eACR,oBAAC,SAAD;AACI,UAAA,KAAK,EAAE0B,MAAM,CAACS,OADlB;AAEI,UAAA,IAAI,EAAC,cAFT;AAGI,UAAA,IAAI,EAAE,EAHV;AAII,UAAA,KAAK,EAAEnC,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADQ;AAAA;AAFP,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADJ;AA6BH,CAhID;;AAmIA,eAAepB,YAAf;AAEA,IAAM8C,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAE7BC,EAAAA,OAAO,EAAE;AACL/C,IAAAA,MAAM,EAAE,GADH;AAELM,IAAAA,SAAS,EAAE,KAFN;AAGLL,IAAAA,KAAK,EAAE,MAHF;AAIL8B,IAAAA,eAAe,EAAE;AAJZ,GAFoB;AAQ7BiB,EAAAA,MAAM,EAAE;AACJhD,IAAAA,MAAM,EAAE,EADJ;AAEJC,IAAAA,KAAK,EAAE,GAFH;AAGJK,IAAAA,SAAS,EAAE,CAHP;AAIJ2C,IAAAA,YAAY,EAAE,CAJV;AAKJC,IAAAA,SAAS,EAAE,EALP;AAMJpB,IAAAA,YAAY,EAAE;AANV,GARqB;AAiB7BM,EAAAA,YAAY,EAAE;AACVlC,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,cAAc,EAAE,QAFN;AAGVC,IAAAA,UAAU,EAAE,QAHF;AAIVE,IAAAA,SAAS,EAAE;AAJD,GAjBe;AAuB7B+B,EAAAA,SAAS,EAAE;AACPc,IAAAA,MAAM,EAAE,EADD;AAEPpB,IAAAA,eAAe,EAAE,OAFV;AAGPD,IAAAA,YAAY,EAAE,EAHP;AAIPsB,IAAAA,OAAO,EAAE,EAJF;AAKPhD,IAAAA,UAAU,EAAE,QALL;AAMPiD,IAAAA,WAAW,EAAE,MANN;AAOPC,IAAAA,YAAY,EAAE;AACVrD,MAAAA,KAAK,EAAE,CADG;AAEVD,MAAAA,MAAM,EAAE;AAFE,KAPP;AAWPuD,IAAAA,aAAa,EAAE,IAXR;AAYPC,IAAAA,YAAY,EAAE,CAZP;AAaPN,IAAAA,SAAS,EAAE,CAbJ;AAcPjD,IAAAA,KAAK,EAAE,KAdA;AAePD,IAAAA,MAAM,EAAE;AAfD,GAvBkB;AAwC7BuC,EAAAA,MAAM,EAAE;AACJT,IAAAA,YAAY,EAAE,EADV;AAEJsB,IAAAA,OAAO,EAAE,EAFL;AAGJF,IAAAA,SAAS,EAAE;AAHP,GAxCqB;AA6C7BO,EAAAA,UAAU,EAAE;AACR1B,IAAAA,eAAe,EAAE;AADT,GA7CiB;AAgD7BS,EAAAA,WAAW,EAAE;AACTT,IAAAA,eAAe,EAAE;AADR,GAhDgB;AAmD7BU,EAAAA,SAAS,EAAE;AACPhC,IAAAA,KAAK,EAAE,OADA;AAEPuB,IAAAA,UAAU,EAAE,MAFL;AAGPzB,IAAAA,SAAS,EAAE;AAHJ,GAnDkB;AAwD7B+B,EAAAA,SAAS,EAAE;AACPW,IAAAA,YAAY,EAAE,EADP;AAEP1C,IAAAA,SAAS,EAAE;AAFJ;AAxDkB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Button from '../components/Button'\r\nimport { Text, Card } from 'react-native-paper'\r\nimport { SimpleLineIcons, AntDesign, Ionicons, Feather, MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport BackButton from '../components/BackButton'\r\nimport DishCard from '../components/DishCard'\r\nimport CartCard from '../components/CartCard'\r\nimport { useUserContext } from \"../src/UserContext\"\r\nimport { View, StyleSheet, Image, ScrollView, SafeAreaView, Modal, Pressable, Alert } from 'react-native';\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\n\r\n\r\n\r\n\r\n\r\nconst DishesScreen = ({ navigation }) => {\r\n    const { currentChefDishes, currentChef, cart, setOrder,setCart } = useUserContext();\r\n    const Tab = createMaterialBottomTabNavigator();\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n\r\n\r\n    function ShowDishes() {\r\n        return (\r\n            <View style={{ height: \"100%\", width: '100%' }}>\r\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                    <BackButton goBack={navigation.goBack} />\r\n                </View>\r\n                <Text style={{ marginTop: \"15%\", textAlign: 'center', fontFamily: 'sans-serif-light', color: \"#3ec92d\", fontSize: 22 }}>{currentChef.DisplayName}'s Menu</Text>\r\n                <ScrollView style={{ width: '100%' }}>\r\n                    <View style={{ marginTop: \"5%\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                        {currentChefDishes.map((item, key) =>\r\n                            <DishCard name={item.DisplayName} img={item.Img}\r\n                                dishType={item.DishType} description={item.Description} price={item.Price} key={key}>\r\n                            </DishCard>\r\n                        )}\r\n                    </View>\r\n                </ScrollView >\r\n            </View>\r\n        );\r\n    }\r\n\r\n    const modalPop = () => {\r\n        setModalVisible(true);\r\n        setOrder();\r\n        \r\n\r\n    }\r\n\r\n\r\n\r\n    function ShowCart() {\r\n        return (\r\n            <View style={{ height: \"100%\", alignItems: 'center' }}>\r\n                <Text style={{ marginTop: '10%', fontSize: 35, textAlign: 'center', color: 'green' }}>My Cart</Text>\r\n                {console.log(cart)}\r\n                {(cart.length > 0) ?\r\n                    cart.map((item, key) =>\r\n                        (item.Quantity == 0) ? null : <CartCard currentChef={currentChef} cartDish={item}></CartCard>)\r\n                    :\r\n                    <Text style={{ textAlign: 'center' }}>Your cart is empty</Text>\r\n                }\r\n                {(cart.length > 0) ?\r\n                    <View style={{ marginRight: \"2%\", marginTop: 'auto', marginLeft: 'auto' }}>\r\n                        <View >\r\n                            <Text style={{ fontFamily: 'sans-serif-medium', fontSize: 17, color: 'green' }}> Cart Total: {cart.reduce((a, b) => a + (b.Price * b.Quantity), 0)}₪</Text>\r\n                        </View>\r\n                        <View>\r\n                            <Button mode=\"outlined\" style={{ borderRadius: 15, backgroundColor: 'rgb(255,138,87)' }} onPress={modalPop}>\r\n                                <Text style={{ color: 'rgb(255 ,255, 255)', fontWeight: 'bold' }}>Order Now</Text>\r\n                            </Button>\r\n                        </View>\r\n                    </View>\r\n                    : null\r\n\r\n                }\r\n\r\n                <Modal\r\n                    animationType=\"slide\"\r\n                    transparent={true}\r\n                    visible={modalVisible}\r\n                    onRequestClose={() => {\r\n                        Alert.alert(\"Modal has been closed.\");\r\n                        setModalVisible(!modalVisible);\r\n                    }}\r\n\r\n                >\r\n                    <View style={styles.centeredView}>\r\n                        <View style={styles.modalView}>\r\n                            <Text style={styles.modalText}>Thank you !</Text>\r\n                            {/* <Text> {cart.map((dish, key) => {dish.Name}) }\r\n                            </Text> */}\r\n                            {console.log(cart)}\r\n\r\n                            <Pressable\r\n                                style={[styles.button, styles.buttonClose]}\r\n                                onPress={() => setModalVisible(!modalVisible)}\r\n                            >\r\n                                <Text style={styles.textStyle}>Ok</Text>\r\n                            </Pressable>\r\n\r\n                            <Text style={styles.textStyle}>Ok</Text>\r\n\r\n                        </View>\r\n                    </View>\r\n                </Modal>\r\n\r\n\r\n            </View>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Tab.Navigator\r\n            initialRouteName=\"ShowDishes\"\r\n            activeColor=\"#fff\"\r\n            barStyle={{ backgroundColor: 'rgb(62,197,0)' }}\r\n        >\r\n            <Tab.Screen name=\"ShowDishes\" component={ShowDishes}\r\n                options={{\r\n                    tabBarLabel: 'Menu',\r\n                    tabBarIcon: ({ color }) => (\r\n                        <SimpleLineIcons name=\"book-open\" size={20} color={color} />\r\n                    ),\r\n                }}\r\n            />\r\n            <Tab.Screen name=\"ShowCart\" component={ShowCart}\r\n                options={{\r\n                    tabBarLabel: 'Cart',\r\n                    tabBarIcon: ({ color }) => (\r\n                        <AntDesign\r\n                            style={styles.tabIcon}\r\n                            name=\"shoppingcart\"\r\n                            size={20}\r\n                            color={color}\r\n                        />\r\n                    ),\r\n                }}\r\n            />\r\n        </Tab.Navigator>\r\n    )\r\n}\r\n\r\n\r\nexport default DishesScreen\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    cartBar: {\r\n        height: 100,\r\n        marginTop: '10%',\r\n        width: '100%',\r\n        backgroundColor: 'green',\r\n    },\r\n    shadow: {\r\n        height: 60,\r\n        width: 370,\r\n        marginTop: 8,\r\n        marginBottom: 5,\r\n        elevation: 10,\r\n        borderRadius: 15,\r\n    },\r\n\r\n    centeredView: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginTop: 22\r\n    },\r\n    modalView: {\r\n        margin: 20,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 40,\r\n        padding: 15,\r\n        alignItems: \"center\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5,\r\n        width: '75%',\r\n        height: '75%'\r\n    },\r\n    button: {\r\n        borderRadius: 20,\r\n        padding: 10,\r\n        elevation: 2\r\n    },\r\n    buttonOpen: {\r\n        backgroundColor: \"#F194FF\",\r\n    },\r\n    buttonClose: {\r\n        backgroundColor: \"#2196F3\",\r\n    },\r\n    textStyle: {\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        textAlign: \"center\"\r\n    },\r\n    modalText: {\r\n        marginBottom: 15,\r\n        textAlign: \"center\"\r\n    }\r\n\r\n\r\n\r\n})\r\n"]},"metadata":{},"sourceType":"module"}