{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\asafs\\\\Documents\\\\github\\\\reactHomeals\\\\node_modules\\\\react-native-circle-floatmenu\\\\CircleButton.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport PropTypes from \"prop-types\";\nimport CircleButtonItem from \"./CircleButtonItem\";\nvar alignMap = {\n  topcenter: {\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    startDegree: 0,\n    endDegree: 180\n  },\n  topleft: {\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\",\n    startDegree: 0,\n    endDegree: 90\n  },\n  topright: {\n    alignItems: \"flex-end\",\n    justifyContent: \"flex-start\",\n    startDegree: 180,\n    endDegree: 90\n  },\n  center: {\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    startDegree: 180,\n    endDegree: 360\n  },\n  left: {\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-end\",\n    startDegree: 270,\n    endDegree: 360\n  },\n  right: {\n    alignItems: \"flex-end\",\n    justifyContent: \"flex-end\",\n    startDegree: 180,\n    endDegree: 270\n  }\n};\n\nvar CircleButton = function (_Component) {\n  _inherits(CircleButton, _Component);\n\n  var _super = _createSuper(CircleButton);\n\n  function CircleButton(props) {\n    var _this;\n\n    _classCallCheck(this, CircleButton);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      active: props.active,\n      anim: new Animated.Value(props.active ? 1 : 0)\n    };\n    _this.timeout = null;\n    return _this;\n  }\n\n  _createClass(CircleButton, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.timeout);\n    }\n  }, {\n    key: \"getCircleButtonStyle\",\n    value: function getCircleButtonStyle() {\n      return [styles.circleBarItem, this.getButtonSize()];\n    }\n  }, {\n    key: \"getCircleContainerStyle\",\n    value: function getCircleContainerStyle() {\n      var _alignMap$this$props$ = alignMap[this.props.position],\n          alignItems = _alignMap$this$props$.alignItems,\n          justifyContent = _alignMap$this$props$.justifyContent;\n      return [styles.overlay, styles.circleContainer, {\n        alignItems: alignItems,\n        justifyContent: justifyContent\n      }];\n    }\n  }, {\n    key: \"getCirclesStyle\",\n    value: function getCirclesStyle() {\n      return [this.getButtonSize()];\n    }\n  }, {\n    key: \"getButtonSize\",\n    value: function getButtonSize() {\n      return {\n        width: this.props.size,\n        height: this.props.size\n      };\n    }\n  }, {\n    key: \"animateButton\",\n    value: function animateButton() {\n      if (this.state.active) {\n        this.reset();\n        return;\n      }\n\n      Animated.spring(this.state.anim, {\n        toValue: 1,\n        duration: 250,\n        useNativeDriver: false\n      }).start();\n      this.setState({\n        active: true\n      });\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var _this2 = this;\n\n      Animated.spring(this.state.anim, {\n        toValue: 0,\n        duration: 250,\n        useNativeDriver: false\n      }).start();\n      setTimeout(function () {\n        _this2.setState({\n          active: false\n        });\n      }, 250);\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: this.getCircleButtonStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        activeOpacity: 0.85,\n        onLongPress: this.props.onLongPress,\n        onPress: function onPress() {\n          _this3.props.onPress();\n\n          if (_this3.props.children) {\n            _this3.animateButton();\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.btn, {\n          width: this.props.size,\n          height: this.props.size,\n          borderRadius: this.props.size / 2,\n          backgroundColor: this.state.anim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [this.props.buttonColor, this.props.btnOutRange]\n          }),\n          transform: [{\n            scale: this.state.anim.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, this.props.outRangeScale]\n            })\n          }, {\n            rotate: this.state.anim.interpolate({\n              inputRange: [0, 1],\n              outputRange: [\"0deg\", this.props.degrees + \"deg\"]\n            })\n          }]\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }\n      }, this.renderButtonIcon())));\n    }\n  }, {\n    key: \"renderButtonIcon\",\n    value: function renderButtonIcon() {\n      if (this.props.icon) {\n        return this.props.icon;\n      }\n\n      return React.createElement(Animated.Text, {\n        style: [styles.btnText, {\n          color: this.state.anim.interpolate({\n            inputRange: [0, 1],\n            outputRange: [this.props.buttonTextColor, this.props.btnOutRangeTxt]\n          })\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 7\n        }\n      }, \"+\");\n    }\n  }, {\n    key: \"renderCircles\",\n    value: function renderCircles() {\n      var _this4 = this;\n\n      if (!this.state.active) return null;\n      var startDegree = this.props.startDegree || alignMap[this.props.position].startDegree;\n      var endDegree = this.props.endDegree || alignMap[this.props.position].endDegree;\n      var startRadian = startDegree * Math.PI / 180;\n      var endRadian = endDegree * Math.PI / 180;\n      var childrenCount = React.Children.count(this.props.children);\n      var offset = 0;\n\n      if (childrenCount !== 1) {\n        offset = (endRadian - startRadian) / (childrenCount - 1);\n      }\n\n      return React.Children.map(this.props.children, function (button, index) {\n        return React.createElement(View, {\n          pointerEvents: \"box-none\",\n          style: _this4.getCircleContainerStyle(),\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 9\n          }\n        }, React.createElement(CircleButtonItem, _extends({\n          key: index,\n          position: _this4.props.position,\n          anim: _this4.state.anim,\n          size: _this4.props.itemSize,\n          radius: _this4.props.radius,\n          angle: startRadian + index * offset,\n          btnColor: _this4.props.btnOutRange\n        }, button.props, {\n          onPress: function onPress() {\n            if (_this4.props.autoInactive) {\n              _this4.timeout = setTimeout(function () {\n                _this4.reset();\n              }, 200);\n            }\n\n            button.props.onPress();\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 11\n          }\n        })));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var backdrop;\n\n      if (this.state.active) {\n        backdrop = React.createElement(TouchableWithoutFeedback, {\n          style: styles.overlay,\n          onPress: function onPress() {\n            _this5.reset();\n\n            _this5.props.onOverlayPress();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 9\n          }\n        }, React.createElement(Animated.View, {\n          style: {\n            backgroundColor: this.props.bgColor,\n            opacity: this.state.anim,\n            flex: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 11\n          }\n        }, this.props.backdrop));\n      }\n\n      return React.createElement(View, {\n        pointerEvents: \"box-none\",\n        style: styles.overlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 7\n        }\n      }, backdrop, this.props.children && this.renderCircles(), React.createElement(View, {\n        pointerEvents: \"box-none\",\n        style: this.getCircleContainerStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 9\n        }\n      }, this.renderButton()));\n    }\n  }]);\n\n  return CircleButton;\n}(Component);\n\nexport { CircleButton as default };\nCircleButton.Item = CircleButtonItem;\nCircleButton.propTypes = {\n  active: PropTypes.bool,\n  bgColor: PropTypes.string,\n  buttonColor: PropTypes.string,\n  buttonTextColor: PropTypes.string,\n  size: PropTypes.number,\n  itemSize: PropTypes.number,\n  autoInactive: PropTypes.bool,\n  onPress: PropTypes.func,\n  onOverlayPress: PropTypes.func,\n  backdrop: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  startDegree: PropTypes.number,\n  endDegree: PropTypes.number,\n  radius: PropTypes.number,\n  children: PropTypes.node,\n  position: PropTypes.oneOf([\"left\", \"center\", \"right\", \"topleft\", \"tpocenter\", \"topright\"])\n};\nCircleButton.defaultProps = {\n  active: false,\n  bgColor: \"transparent\",\n  buttonColor: \"rgba(0,0,0,1)\",\n  buttonTextColor: \"rgba(255,255,255,1)\",\n  position: \"center\",\n  outRangeScale: 1,\n  autoInactive: true,\n  onPress: function onPress() {},\n  onOverlayPress: function onOverlayPress() {},\n  backdrop: false,\n  degrees: 135,\n  size: 63,\n  itemSize: 36,\n  radius: 100,\n  btnOutRange: \"rgba(0,0,0,1)\",\n  btnOutRangeTxt: \"rgba(255,255,255,1)\"\n};\nvar styles = StyleSheet.create({\n  overlay: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    top: 0,\n    backgroundColor: \"transparent\"\n  },\n  circleContainer: {\n    flexDirection: \"column\",\n    padding: 10\n  },\n  circleBarItem: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\"\n  },\n  btn: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    shadowOpacity: 0.3,\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowColor: \"#444\",\n    shadowRadius: 1\n  },\n  btnText: {\n    marginTop: -4,\n    fontSize: 24,\n    backgroundColor: \"transparent\",\n    position: \"relative\"\n  }\n});","map":{"version":3,"sources":["C:/Users/asafs/Documents/github/reactHomeals/node_modules/react-native-circle-floatmenu/CircleButton.js"],"names":["React","Component","PropTypes","CircleButtonItem","alignMap","topcenter","alignItems","justifyContent","startDegree","endDegree","topleft","topright","center","left","right","CircleButton","props","state","active","anim","Animated","Value","timeout","clearTimeout","styles","circleBarItem","getButtonSize","position","overlay","circleContainer","width","size","height","reset","spring","toValue","duration","useNativeDriver","start","setState","setTimeout","getCircleButtonStyle","onLongPress","onPress","children","animateButton","btn","borderRadius","backgroundColor","interpolate","inputRange","outputRange","buttonColor","btnOutRange","transform","scale","outRangeScale","rotate","degrees","renderButtonIcon","icon","btnText","color","buttonTextColor","btnOutRangeTxt","startRadian","Math","PI","endRadian","childrenCount","Children","count","offset","map","button","index","getCircleContainerStyle","itemSize","radius","autoInactive","backdrop","onOverlayPress","bgColor","opacity","flex","renderCircles","renderButton","Item","propTypes","bool","string","number","func","oneOfType","object","node","oneOf","defaultProps","StyleSheet","create","bottom","top","flexDirection","padding","shadowOpacity","shadowOffset","shadowColor","shadowRadius","marginTop","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Animated,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n} from \"react-native\";\nimport PropTypes from \"prop-types\";\nimport CircleButtonItem from \"./CircleButtonItem\";\n\nconst alignMap = {\n  topcenter: {\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    startDegree: 0,\n    endDegree: 180,\n  },\n\n  topleft: {\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\",\n    startDegree: 0,\n    endDegree: 90,\n  },\n\n  topright: {\n    alignItems: \"flex-end\",\n    justifyContent: \"flex-start\",\n    startDegree: 180,\n    endDegree: 90,\n  },\n  center: {\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    startDegree: 180,\n    endDegree: 360,\n  },\n\n  left: {\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-end\",\n    startDegree: 270,\n    endDegree: 360,\n  },\n\n  right: {\n    alignItems: \"flex-end\",\n    justifyContent: \"flex-end\",\n    startDegree: 180,\n    endDegree: 270,\n  },\n};\n\nexport default class CircleButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: props.active,\n      anim: new Animated.Value(props.active ? 1 : 0),\n    };\n\n    this.timeout = null;\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timeout);\n  }\n\n  getCircleButtonStyle() {\n    return [styles.circleBarItem, this.getButtonSize()];\n  }\n\n  getCircleContainerStyle() {\n    const { alignItems, justifyContent } = alignMap[this.props.position];\n    return [\n      styles.overlay,\n      styles.circleContainer,\n      {\n        alignItems,\n        justifyContent,\n      },\n    ];\n  }\n  getCirclesStyle() {\n    return [this.getButtonSize()];\n  }\n\n  getButtonSize() {\n    return {\n      width: this.props.size,\n      height: this.props.size,\n    };\n  }\n\n  animateButton() {\n    if (this.state.active) {\n      this.reset();\n      return;\n    }\n\n    Animated.spring(this.state.anim, {\n      toValue: 1,\n      duration: 250,\n      useNativeDriver: false,\n    }).start();\n\n    this.setState({ active: true });\n  }\n\n  reset() {\n    Animated.spring(this.state.anim, {\n      toValue: 0,\n      duration: 250,\n      useNativeDriver: false,\n    }).start();\n\n    setTimeout(() => {\n      this.setState({ active: false });\n    }, 250);\n  }\n\n  renderButton() {\n    return (\n      <View style={this.getCircleButtonStyle()}>\n        <TouchableOpacity\n          activeOpacity={0.85}\n          onLongPress={this.props.onLongPress}\n          onPress={() => {\n            this.props.onPress();\n            if (this.props.children) {\n              this.animateButton();\n            }\n          }}\n        >\n          <Animated.View\n            style={[\n              styles.btn,\n              {\n                width: this.props.size,\n                height: this.props.size,\n                borderRadius: this.props.size / 2,\n                backgroundColor: this.state.anim.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [this.props.buttonColor, this.props.btnOutRange],\n                }),\n                transform: [\n                  {\n                    scale: this.state.anim.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [1, this.props.outRangeScale],\n                    }),\n                  },\n                  {\n                    rotate: this.state.anim.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [\"0deg\", this.props.degrees + \"deg\"],\n                    }),\n                  },\n                ],\n              },\n            ]}\n          >\n            {this.renderButtonIcon()}\n          </Animated.View>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  renderButtonIcon() {\n    if (this.props.icon) {\n      return this.props.icon;\n    }\n\n    return (\n      <Animated.Text\n        style={[\n          styles.btnText,\n          {\n            color: this.state.anim.interpolate({\n              inputRange: [0, 1],\n              outputRange: [\n                this.props.buttonTextColor,\n                this.props.btnOutRangeTxt,\n              ],\n            }),\n          },\n        ]}\n      >\n        +\n      </Animated.Text>\n    );\n  }\n\n  renderCircles() {\n    if (!this.state.active) return null;\n    const startDegree =\n      this.props.startDegree || alignMap[this.props.position].startDegree;\n    const endDegree =\n      this.props.endDegree || alignMap[this.props.position].endDegree;\n    const startRadian = (startDegree * Math.PI) / 180;\n    const endRadian = (endDegree * Math.PI) / 180;\n\n    const childrenCount = React.Children.count(this.props.children);\n    let offset = 0;\n    if (childrenCount !== 1) {\n      offset = (endRadian - startRadian) / (childrenCount - 1);\n    }\n\n    return React.Children.map(this.props.children, (button, index) => {\n      return (\n        <View pointerEvents=\"box-none\" style={this.getCircleContainerStyle()}>\n          <CircleButtonItem\n            key={index}\n            position={this.props.position}\n            anim={this.state.anim}\n            size={this.props.itemSize}\n            radius={this.props.radius}\n            angle={startRadian + index * offset}\n            btnColor={this.props.btnOutRange}\n            {...button.props}\n            onPress={() => {\n              if (this.props.autoInactive) {\n                this.timeout = setTimeout(() => {\n                  this.reset();\n                }, 200);\n              }\n              button.props.onPress();\n            }}\n          />\n        </View>\n      );\n    });\n  }\n\n  render() {\n    let backdrop;\n    if (this.state.active) {\n      backdrop = (\n        <TouchableWithoutFeedback\n          style={styles.overlay}\n          onPress={() => {\n            this.reset();\n            this.props.onOverlayPress();\n          }}\n        >\n          <Animated.View\n            style={{\n              backgroundColor: this.props.bgColor,\n              opacity: this.state.anim,\n              flex: 1,\n            }}\n          >\n            {this.props.backdrop}\n          </Animated.View>\n        </TouchableWithoutFeedback>\n      );\n    }\n    return (\n      <View pointerEvents=\"box-none\" style={styles.overlay}>\n        {backdrop}\n\n        {this.props.children && this.renderCircles()}\n        <View pointerEvents=\"box-none\" style={this.getCircleContainerStyle()}>\n          {this.renderButton()}\n        </View>\n      </View>\n    );\n  }\n}\n\nCircleButton.Item = CircleButtonItem;\n\nCircleButton.propTypes = {\n  active: PropTypes.bool,\n  bgColor: PropTypes.string,\n  buttonColor: PropTypes.string,\n  buttonTextColor: PropTypes.string,\n  size: PropTypes.number,\n  itemSize: PropTypes.number,\n  autoInactive: PropTypes.bool,\n  onPress: PropTypes.func,\n  onOverlayPress: PropTypes.func,\n  backdrop: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  startDegree: PropTypes.number,\n  endDegree: PropTypes.number,\n  radius: PropTypes.number,\n  children: PropTypes.node,\n  position: PropTypes.oneOf([\n    \"left\",\n    \"center\",\n    \"right\",\n    \"topleft\",\n    \"tpocenter\",\n    \"topright\",\n  ]),\n};\n\nCircleButton.defaultProps = {\n  active: false,\n  bgColor: \"transparent\",\n  buttonColor: \"rgba(0,0,0,1)\",\n  buttonTextColor: \"rgba(255,255,255,1)\",\n  position: \"center\",\n  outRangeScale: 1,\n  autoInactive: true,\n  onPress: () => {},\n  onOverlayPress: () => {},\n  backdrop: false,\n  degrees: 135,\n  size: 63,\n  itemSize: 36,\n  radius: 100,\n  btnOutRange: \"rgba(0,0,0,1)\",\n  btnOutRangeTxt: \"rgba(255,255,255,1)\",\n};\n\nconst styles = StyleSheet.create({\n  overlay: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    top: 0,\n    backgroundColor: \"transparent\",\n  },\n  circleContainer: {\n    flexDirection: \"column\",\n    padding: 10,\n  },\n  circleBarItem: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n  },\n  btn: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    shadowOpacity: 0.3,\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowColor: \"#444\",\n    shadowRadius: 1,\n  },\n  btnText: {\n    marginTop: -4,\n    fontSize: 24,\n    backgroundColor: \"transparent\",\n    position: \"relative\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}