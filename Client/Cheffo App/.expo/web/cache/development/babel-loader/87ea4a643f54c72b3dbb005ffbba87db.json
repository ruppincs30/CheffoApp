{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Shachar\\\\Desktop\\\\P\\\\reactHomeals\\\\screens\\\\DishesScreen.js\";\n\nimport React, { useEffect } from 'react';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport { Text, Card } from 'react-native-paper';\nimport { SimpleLineIcons, AntDesign, Ionicons, Feather, MaterialCommunityIcons } from '@expo/vector-icons';\nimport Paragraph from \"../components/Paragraph\";\nimport BackButton from \"../components/BackButton\";\nimport DishCard from \"../components/DishCard\";\nimport { useUserContext } from \"../src/UserContext\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { TextInput } from 'react-native-gesture-handler';\n\nvar DishesScreen = function DishesScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useUserContext = useUserContext(),\n      currentChefDishes = _useUserContext.currentChefDishes,\n      currentChef = _useUserContext.currentChef,\n      cart = _useUserContext.cart;\n\n  var Tab = createMaterialBottomTabNavigator();\n\n  function ShowDishes() {\n    var _this2 = this;\n\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, React.createElement(ScrollView, {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, React.createElement(BackButton, {\n      goBack: navigation.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    })), React.createElement(View, {\n      style: {\n        marginTop: \"15%\",\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, currentChefDishes.map(function (item, key) {\n      return React.createElement(DishCard, {\n        name: item.DisplayName,\n        img: item.Img,\n        rating: item.Rating,\n        dishType: item.DishType,\n        description: item.Description,\n        price: item.Price,\n        key: key,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }\n      });\n    }))));\n  }\n\n  function ShowCart() {\n    var _this3 = this;\n\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        marginTop: '10%',\n        fontSize: 35,\n        textAlign: 'center',\n        alignItems: 'center',\n        color: 'green'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, \"My Cart\"), console.log(cart), cart.length > 0 ? cart.map(function (item, key) {\n      return React.createElement(Card, {\n        style: styles.shadow,\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, React.createElement(Card.Content, {\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        style: {\n          marginTop: -10,\n          marginBottom: -30\n        },\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }\n      }, React.createElement(MaterialCommunityIcons, {\n        name: \"silverware-fork-knife\",\n        size: 24,\n        color: \"black\",\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 16,\n          color: 'black'\n        },\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 41\n        }\n      }, \" \", item.Name), React.createElement(Text, {\n        style: {\n          fontSize: 16,\n          color: '#8c8c8c'\n        },\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 41\n        }\n      }, \" - \"), React.createElement(Text, {\n        style: {\n          fontSize: 16,\n          color: 'black'\n        },\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 41\n        }\n      }, \" x \", item.Quantity, \" \", \"\\n\"))), React.createElement(Text, {\n        style: {\n          marginTop: 0,\n          textAlign: \"right\"\n        },\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontFamily: 'sans-serif-medium',\n          fontSize: 17,\n          color: 'green'\n        },\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 37\n        }\n      }, \" \", item.Price * item.Quantity)), React.createElement(Button, {\n        style: {\n          backgroundColor: 'rgb(255,138,87)',\n          marginTop: '170%'\n        },\n        mode: \"contained\",\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'rgb(255 ,255, 255)',\n          fontWeight: 'bold'\n        },\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 37\n        }\n      }, \"Order Now\"))));\n    }) : React.createElement(Text, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"Your cart is empty\"));\n  }\n\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"ShowDishes\",\n    activeColor: \"#fff\",\n    barStyle: {\n      backgroundColor: 'rgb(62,197,0)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"ShowDishes\",\n    component: ShowDishes,\n    options: {\n      tabBarLabel: 'Menu',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color;\n        return React.createElement(SimpleLineIcons, {\n          name: \"book-open\",\n          size: 20,\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"ShowCart\",\n    component: ShowCart,\n    options: {\n      tabBarLabel: 'Cart',\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color;\n        return React.createElement(AntDesign, {\n          style: styles.tabIcon,\n          name: \"shoppingcart\",\n          size: 20,\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }));\n};\n\n{}\nexport default DishesScreen;\nvar styles = StyleSheet.create({\n  cartBar: {\n    height: 100,\n    marginTop: '10%',\n    width: '100%',\n    backgroundColor: 'green'\n  },\n  shadow: {\n    height: 60,\n    width: 370,\n    marginTop: 8,\n    marginBottom: 5,\n    elevation: 10,\n    borderRadius: 15\n  }\n});","map":{"version":3,"sources":["C:/Users/Shachar/Desktop/P/reactHomeals/screens/DishesScreen.js"],"names":["React","useEffect","Background","Logo","Header","Button","Text","Card","SimpleLineIcons","AntDesign","Ionicons","Feather","MaterialCommunityIcons","Paragraph","BackButton","DishCard","useUserContext","createMaterialBottomTabNavigator","TextInput","DishesScreen","navigation","currentChefDishes","currentChef","cart","Tab","ShowDishes","width","flex","justifyContent","alignItems","goBack","marginTop","map","item","key","DisplayName","Img","Rating","DishType","Description","Price","ShowCart","fontSize","textAlign","color","console","log","length","styles","shadow","marginBottom","Name","Quantity","fontFamily","backgroundColor","fontWeight","tabBarLabel","tabBarIcon","tabIcon","StyleSheet","create","cartBar","height","elevation","borderRadius"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport Background from '../components/Background'\r\nimport Logo from '../components/Logo'\r\nimport Header from '../components/Header'\r\nimport Button from '../components/Button'\r\nimport { Text, Card } from 'react-native-paper'\r\nimport { SimpleLineIcons, AntDesign, Ionicons, Feather, MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport Paragraph from '../components/Paragraph'\r\nimport BackButton from '../components/BackButton'\r\nimport DishCard from '../components/DishCard'\r\nimport { useUserContext } from \"../src/UserContext\"\r\nimport { View, StyleSheet, Image, ScrollView, SafeAreaView } from 'react-native';\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nimport { TextInput } from 'react-native-gesture-handler'\r\n\r\n\r\n\r\n\r\nconst DishesScreen = ({ navigation }) => {\r\n    const { currentChefDishes, currentChef, cart } = useUserContext();\r\n    const Tab = createMaterialBottomTabNavigator();\r\n\r\n\r\n\r\n    function ShowDishes() {\r\n        return (\r\n            <View>\r\n                <ScrollView style={{ width: '100%' }}>\r\n                    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                        <BackButton goBack={navigation.goBack} />\r\n                    </View>\r\n\r\n                    <View style={{ marginTop: \"15%\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                        {currentChefDishes.map((item, key) =>\r\n                            <DishCard name={item.DisplayName} img={item.Img} rating={item.Rating}\r\n                                dishType={item.DishType} description={item.Description} price={item.Price} key={key}>\r\n                            </DishCard>\r\n                        )}\r\n                    </View>\r\n                </ScrollView >\r\n            </View>\r\n        );\r\n    }\r\n\r\n    function ShowCart() {\r\n        return (\r\n            <View>\r\n                <Text style={{ marginTop: '10%', fontSize: 35, textAlign: 'center',alignItems:'center', color: 'green' }}>My Cart</Text>\r\n                {console.log(cart)}\r\n                {(cart.length > 0) ?\r\n                    cart.map((item, key) =>\r\n                        <Card style={styles.shadow}>\r\n                            <Card.Content >\r\n                                <View style={{ marginTop: -10, marginBottom: -30 }}>\r\n                                    <MaterialCommunityIcons name=\"silverware-fork-knife\" size={24} color=\"black\" >\r\n                                        <Text style={{ fontSize: 16, color: 'black' }}> {item.Name}</Text>\r\n                                        <Text style={{ fontSize: 16, color: '#8c8c8c' }}> - </Text>\r\n                                        <Text style={{ fontSize: 16, color: 'black' }}> x {item.Quantity} {\"\\n\"}</Text>\r\n                                    </MaterialCommunityIcons>\r\n                                </View>\r\n                                <Text style={{ marginTop: 0, textAlign: \"right\" }}>\r\n                                    <Text style={{ fontFamily: 'sans-serif-medium', fontSize: 17, color: 'green' }}> {item.Price * item.Quantity}</Text>\r\n                                </Text>\r\n                                <Button style={{backgroundColor:'rgb(255,138,87)',marginTop:'170%'}} mode=\"contained\" /* onPress={onLoginPressed} */ >\r\n                                    <Text style={{ color: 'rgb(255 ,255, 255)', fontWeight: 'bold' }}>Order Now</Text>\r\n                                </Button>\r\n                            </Card.Content>\r\n                        </Card>)\r\n                    :\r\n                    <Text style={{ textAlign: 'center' }}>Your cart is empty</Text>\r\n                }\r\n            </View>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Tab.Navigator\r\n            initialRouteName=\"ShowDishes\"\r\n            activeColor=\"#fff\"\r\n            barStyle={{ backgroundColor: 'rgb(62,197,0)' }}\r\n        >\r\n            <Tab.Screen name=\"ShowDishes\" component={ShowDishes}\r\n                options={{\r\n                    tabBarLabel: 'Menu',\r\n                    tabBarIcon: ({ color }) => (\r\n                        <SimpleLineIcons name=\"book-open\" size={20} color={color} />\r\n                    ),\r\n                }}\r\n            />\r\n            <Tab.Screen name=\"ShowCart\" component={ShowCart}\r\n                options={{\r\n                    tabBarLabel: 'Cart',\r\n                    tabBarIcon: ({ color }) => (\r\n                        <AntDesign\r\n                            style={styles.tabIcon}\r\n                            name=\"shoppingcart\"\r\n                            size={20}\r\n                            color={color}\r\n                        />\r\n                    ),\r\n                }}\r\n            />\r\n        </Tab.Navigator>\r\n    )\r\n}\r\n\r\n{/* <ScrollView style={{ width: '100%' }}>\r\n        <View style={{ backgroundColor: 'rgb(240, 240, 240)', alignItems: 'center', width: '100%' }}>\r\n          <View style={{ width: '95%', marginTop: 30 }}>\r\n            <TextInput\r\n              label=\"Search\"\r\n            />\r\n          </View>\r\n          <View style={{ width: '100%' }}>\r\n            <SearchSlider></SearchSlider>\r\n          </View>\r\n        </View>\r\n        <View style={{ marginTop: \"5%\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n          {chefsArr.map((item, key) =>\r\n            <RestaurantCard name={item.DisplayName} img={item.Img} city={item.Address} rating={item.Rating} foodType={item.FoodType} key={key}\r\n              onPress={async () => {\r\n                 handleCardClick(item.Email); \r\n                selectedChef(item.Email)\r\n              }}>\r\n            </RestaurantCard>\r\n          )}\r\n        </View>\r\n      </ScrollView>\r\n */}\r\nexport default DishesScreen\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    cartBar: {\r\n        height: 100,\r\n        marginTop: '10%',\r\n        width: '100%',\r\n        backgroundColor: 'green',\r\n    },\r\n    shadow: {\r\n        height: 60,\r\n        width: 370,\r\n        marginTop: 8,\r\n        marginBottom: 5,\r\n        elevation: 10,\r\n        borderRadius: 15,\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}