{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Shachar\\\\Desktop\\\\P\\\\reactHomeals\\\\screens\\\\DishesScreen.js\";\n\nimport React, { useEffect } from 'react';\nimport Button from \"../components/Button\";\nimport { Text, Card } from 'react-native-paper';\nimport { SimpleLineIcons, AntDesign, Ionicons, Feather, MaterialCommunityIcons } from '@expo/vector-icons';\nimport BackButton from \"../components/BackButton\";\nimport DishCard from \"../components/DishCard\";\nimport CartCard from \"../components/CartCard\";\nimport { useUserContext } from \"../src/UserContext\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\n\nvar DishesScreen = function DishesScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useUserContext = useUserContext(),\n      currentChefDishes = _useUserContext.currentChefDishes,\n      currentChef = _useUserContext.currentChef,\n      cart = _useUserContext.cart,\n      setOrder = _useUserContext.setOrder;\n\n  var Tab = createMaterialBottomTabNavigator();\n\n  function ShowDishes() {\n    var _this2 = this;\n\n    return React.createElement(View, {\n      style: {\n        height: \"100%\",\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, React.createElement(BackButton, {\n      goBack: navigation.goBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    })), React.createElement(Text, {\n      style: {\n        marginTop: \"15%\",\n        textAlign: 'center',\n        fontFamily: 'sans-serif-light',\n        color: \"#3ec92d\",\n        fontSize: 22\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, currentChef.DisplayName, \"'s Menu\"), React.createElement(ScrollView, {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        marginTop: \"5%\",\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, currentChefDishes.map(function (item, key) {\n      return React.createElement(DishCard, {\n        name: item.DisplayName,\n        img: item.Img,\n        dishType: item.DishType,\n        description: item.Description,\n        price: item.Price,\n        key: key,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }\n      });\n    }))));\n  }\n\n  function ShowCart() {\n    var _this3 = this;\n\n    return React.createElement(View, {\n      style: {\n        height: \"100%\",\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        marginTop: '10%',\n        fontSize: 35,\n        textAlign: 'center',\n        color: 'green'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"My Cart\"), console.log(cart), cart.length > 0 ? cart.map(function (item, key) {\n      return item.Quantity == 0 ? null : React.createElement(CartCard, {\n        currentChef: currentChef,\n        cartDish: item,\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 55\n        }\n      });\n    }) : React.createElement(Text, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, \"Your cart is empty\"), cart.length > 0 ? React.createElement(View, {\n      style: {\n        marginRight: \"2%\",\n        marginTop: 'auto',\n        marginLeft: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'sans-serif-medium',\n        fontSize: 17,\n        color: 'green'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, \" Cart Total: \", cart.reduce(function (a, b) {\n      return a + b.Price * b.Quantity;\n    }, 0), \"\\u20AA\")), React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, React.createElement(Button, {\n      mode: \"outlined\",\n      style: {\n        borderRadius: 5,\n        backgroundColor: 'rgb(255,138,87)'\n      },\n      onPress: setOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'rgb(255 ,255, 255)',\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    }, \"Order Now\")))) : null);\n  }\n\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"ShowDishes\",\n    activeColor: \"#fff\",\n    barStyle: {\n      backgroundColor: 'rgb(62,197,0)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"ShowDishes\",\n    component: ShowDishes,\n    options: {\n      tabBarLabel: 'Menu',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color;\n        return React.createElement(SimpleLineIcons, {\n          name: \"book-open\",\n          size: 20,\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"ShowCart\",\n    component: ShowCart,\n    options: {\n      tabBarLabel: 'Cart',\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color;\n        return React.createElement(AntDesign, {\n          style: styles.tabIcon,\n          name: \"shoppingcart\",\n          size: 20,\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default DishesScreen;\nvar styles = StyleSheet.create({\n  cartBar: {\n    height: 100,\n    marginTop: '10%',\n    width: '100%',\n    backgroundColor: 'green'\n  },\n  shadow: {\n    height: 60,\n    width: 370,\n    marginTop: 8,\n    marginBottom: 5,\n    elevation: 10,\n    borderRadius: 15\n  }\n});","map":{"version":3,"sources":["C:/Users/Shachar/Desktop/P/reactHomeals/screens/DishesScreen.js"],"names":["React","useEffect","Button","Text","Card","SimpleLineIcons","AntDesign","Ionicons","Feather","MaterialCommunityIcons","BackButton","DishCard","CartCard","useUserContext","createMaterialBottomTabNavigator","DishesScreen","navigation","currentChefDishes","currentChef","cart","setOrder","Tab","ShowDishes","height","width","flex","justifyContent","alignItems","goBack","marginTop","textAlign","fontFamily","color","fontSize","DisplayName","map","item","key","Img","DishType","Description","Price","ShowCart","console","log","length","Quantity","marginRight","marginLeft","reduce","a","b","borderRadius","backgroundColor","fontWeight","tabBarLabel","tabBarIcon","styles","tabIcon","StyleSheet","create","cartBar","shadow","marginBottom","elevation"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport Button from '../components/Button'\r\nimport { Text, Card } from 'react-native-paper'\r\nimport { SimpleLineIcons, AntDesign, Ionicons, Feather, MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport BackButton from '../components/BackButton'\r\nimport DishCard from '../components/DishCard'\r\nimport CartCard from '../components/CartCard'\r\nimport { useUserContext } from \"../src/UserContext\"\r\nimport { View, StyleSheet, Image, ScrollView, SafeAreaView } from 'react-native';\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\n\r\n\r\n\r\n\r\n\r\nconst DishesScreen = ({ navigation }) => {\r\n    const { currentChefDishes, currentChef, cart, setOrder } = useUserContext();\r\n    const Tab = createMaterialBottomTabNavigator();\r\n\r\n\r\n\r\n    function ShowDishes() {\r\n        return (\r\n            <View style={{ height: \"100%\", width: '100%' }}>\r\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                    <BackButton goBack={navigation.goBack} />\r\n                </View>\r\n                <Text style={{ marginTop: \"15%\", textAlign: 'center', fontFamily: 'sans-serif-light', color: \"#3ec92d\", fontSize: 22 }}>{currentChef.DisplayName}'s Menu</Text>\r\n                <ScrollView style={{ width: '100%' }}>\r\n                    <View style={{ marginTop: \"5%\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                        {currentChefDishes.map((item, key) =>\r\n                            <DishCard name={item.DisplayName} img={item.Img}\r\n                                dishType={item.DishType} description={item.Description} price={item.Price} key={key}>\r\n                            </DishCard>\r\n                        )}\r\n                    </View>\r\n                </ScrollView >\r\n            </View>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    function ShowCart() {\r\n        return (\r\n            <View style={{ height: \"100%\", alignItems: 'center' }}>\r\n                <Text style={{ marginTop: '10%', fontSize: 35, textAlign: 'center', color: 'green' }}>My Cart</Text>\r\n                {console.log(cart)}\r\n                {(cart.length > 0) ?\r\n                    cart.map((item, key) =>\r\n                        (item.Quantity == 0) ? null : <CartCard currentChef={currentChef} cartDish={item}></CartCard>)\r\n                    :\r\n                    <Text style={{ textAlign: 'center' }}>Your cart is empty</Text>\r\n                }\r\n                {(cart.length > 0) ?\r\n                    <View style={{ marginRight: \"2%\", marginTop: 'auto', marginLeft: 'auto' }}>\r\n                        <View >\r\n                            <Text style={{ fontFamily: 'sans-serif-medium', fontSize: 17, color: 'green' }}> Cart Total: {cart.reduce((a, b) => a + (b.Price * b.Quantity), 0)}₪</Text>\r\n                        </View>\r\n                        <View>\r\n                            <Button mode=\"outlined\" style={{ borderRadius: 5, backgroundColor: 'rgb(255,138,87)' }} onPress={setOrder}>\r\n                                <Text style={{ color: 'rgb(255 ,255, 255)', fontWeight: 'bold' }}>Order Now</Text>\r\n                            </Button>\r\n                        </View>\r\n                    </View>\r\n                    : null\r\n\r\n                }\r\n            </View>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Tab.Navigator\r\n            initialRouteName=\"ShowDishes\"\r\n            activeColor=\"#fff\"\r\n            barStyle={{ backgroundColor: 'rgb(62,197,0)' }}\r\n        >\r\n            <Tab.Screen name=\"ShowDishes\" component={ShowDishes}\r\n                options={{\r\n                    tabBarLabel: 'Menu',\r\n                    tabBarIcon: ({ color }) => (\r\n                        <SimpleLineIcons name=\"book-open\" size={20} color={color} />\r\n                    ),\r\n                }}\r\n            />\r\n            <Tab.Screen name=\"ShowCart\" component={ShowCart}\r\n                options={{\r\n                    tabBarLabel: 'Cart',\r\n                    tabBarIcon: ({ color }) => (\r\n                        <AntDesign\r\n                            style={styles.tabIcon}\r\n                            name=\"shoppingcart\"\r\n                            size={20}\r\n                            color={color}\r\n                        />\r\n                    ),\r\n                }}\r\n            />\r\n        </Tab.Navigator>\r\n    )\r\n}\r\n\r\n\r\nexport default DishesScreen\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    cartBar: {\r\n        height: 100,\r\n        marginTop: '10%',\r\n        width: '100%',\r\n        backgroundColor: 'green',\r\n    },\r\n    shadow: {\r\n        height: 60,\r\n        width: 370,\r\n        marginTop: 8,\r\n        marginBottom: 5,\r\n        elevation: 10,\r\n        borderRadius: 15,\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}