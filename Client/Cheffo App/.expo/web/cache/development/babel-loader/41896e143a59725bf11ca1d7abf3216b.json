{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\asafs\\\\Desktop\\\\homeals\\\\screens\\\\LoginScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport fire from \"../fire\";\nimport { emailContext } from \"../App\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var onLoginPressed = function onLoginPressed(f) {\n    console.log(f);\n    f(\"bb\");\n  };\n\n  var handleLogin = function handleLogin() {\n    fire.auth().signInWithEmailAndPassword(email, password).catch(function (err) {\n      switch (err.code) {\n        case \"autu/invalid-email\":\n        case \"autu/user-disabled\":\n        case \"autu/user-not-found\":\n          setEmailError(err.massege);\n          break;\n\n        case \"autu/worng-password\":\n          setPasswordError(err.massege);\n          break;\n      }\n    });\n  };\n\n  var handleSingup = function handleSingup() {\n    fire.auth().createUserWithEmailAndPassword(email, password).catch(function (err) {\n      switch (err.code) {\n        case \"autu/email-alredy-use\":\n        case \"autu/invalid-email\":\n          setEmailError(err.massege);\n          break;\n\n        case \"autu/weak-password\":\n          setPasswordError(err.massege);\n          break;\n      }\n    });\n  };\n\n  var handleLogout = function handleLogout() {\n    fire.auth().signOut();\n  };\n\n  var authListner = function authListner() {\n    fire.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(function () {\n    authListner();\n  }, []);\n  return React.createElement(emailContext.Consumer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, function (email) {\n    return React.createElement(Background, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }\n    }, React.createElement(BackButton, {\n      goBack: navigation.goBack,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }), React.createElement(Logo, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }), React.createElement(Header, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, \"Welcome back.\"), React.createElement(TextInput, {\n      label: \"Email\",\n      returnKeyType: \"next\",\n      value: email[0],\n      onChangeText: function onChangeText(text) {\n        return setEmail({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!email.error,\n      errorText: email.error,\n      autoCapitalize: \"none\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }), React.createElement(TextInput, {\n      label: \"Password\",\n      returnKeyType: \"done\",\n      value: password.value,\n      onChangeText: function onChangeText(text) {\n        return setPassword({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!password.error,\n      errorText: password.error,\n      secureTextEntry: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }), React.createElement(View, {\n      style: styles.forgotPassword,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('ForgotPasswordScreen');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.forgot,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, \"Forgot your password?\"))), React.createElement(Button, {\n      mode: \"contained\",\n      onPress: onLoginPressed(email[1]),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, \"Login\"), React.createElement(View, {\n      style: styles.row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, \"Don\\u2019t have an account? \"), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.replace('RegisterScreen');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.link,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, \"Sign up\"))));\n  });\n};\n\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["C:/Users/asafs/Desktop/homeals/screens/LoginScreen.js"],"names":["React","useState","useEffect","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","fire","emailContext","LoginScreen","navigation","value","error","user","setUser","password","setPassword","onLoginPressed","f","console","log","handleLogin","auth","signInWithEmailAndPassword","email","catch","err","code","setEmailError","massege","setPasswordError","handleSingup","createUserWithEmailAndPassword","handleLogout","signOut","authListner","onAuthStateChanged","goBack","text","setEmail","styles","forgotPassword","navigate","forgot","row","replace","link","StyleSheet","create","width","alignItems","marginBottom","flexDirection","marginTop","fontSize","color","colors","secondary","fontWeight","primary"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,UAAP;AACA,SAASC,KAAT;AACA,SAASC,cAAT;AACA,SAASC,iBAAT;AACA,OAAOC,IAAP;AACA,SAAQC,YAAR;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBACdf,QAAQ,CAAC;AAAEgB,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAAD,CADM;AAAA;AAAA,MAC/BC,IAD+B;AAAA,MACzBC,OADyB;;AAAA,mBAGNnB,QAAQ,CAAC;AAAEgB,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAAD,CAHF;AAAA;AAAA,MAG/BG,QAH+B;AAAA,MAGrBC,WAHqB;;AAKtC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAAO;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAA,IAAAA,CAAC,CAAC,IAAD,CAAD;AAeD,GAjBD;;AAmBA,MAAMG,WAAW,GAAG,SAAdA,WAAc,GAAK;AACvBd,IAAAA,IAAI,CACDe,IADH,GAEGC,0BAFH,CAE8BC,KAF9B,EAEoCT,QAFpC,EAGGU,KAHH,CAGS,UAAAC,GAAG,EAAG;AACX,cAAOA,GAAG,CAACC,IAAX;AACE,aAAK,oBAAL;AACA,aAAK,oBAAL;AACA,aAAK,qBAAL;AACEC,UAAAA,aAAa,CAACF,GAAG,CAACG,OAAL,CAAb;AACA;;AACA,aAAK,qBAAL;AACEC,UAAAA,gBAAgB,CAACJ,GAAG,CAACG,OAAL,CAAhB;AACF;AARJ;AAWD,KAfH;AAgBC,GAjBH;;AAmBG,MAAME,YAAY,GAAG,SAAfA,YAAe,GAAK;AACzBxB,IAAAA,IAAI,CACDe,IADH,GAEGU,8BAFH,CAEkCR,KAFlC,EAEwCT,QAFxC,EAGGU,KAHH,CAGS,UAAAC,GAAG,EAAG;AACX,cAAOA,GAAG,CAACC,IAAX;AACE,aAAK,uBAAL;AACA,aAAK,oBAAL;AACEC,UAAAA,aAAa,CAACF,GAAG,CAACG,OAAL,CAAb;AACA;;AACA,aAAK,oBAAL;AACEC,UAAAA,gBAAgB,CAACJ,GAAG,CAACG,OAAL,CAAhB;AACF;AAPJ;AAUD,KAdH;AAeC,GAhBF;;AAkBC,MAAMI,YAAY,GAAG,SAAfA,YAAe,GAAK;AACxB1B,IAAAA,IAAI,CAACe,IAAL,GAAYY,OAAZ;AACD,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAK;AACvB5B,IAAAA,IAAI,CAACe,IAAL,GAAYc,kBAAZ,CAA+B,UAAAvB,IAAI,EAAG;AACpC,UAAGA,IAAH,EAAQ;AAACC,QAAAA,OAAO,CAACD,IAAD,CAAP;AAAe,OAAxB,MACI;AAACC,QAAAA,OAAO,CAAC,EAAD,CAAP;AAAa;AACnB,KAHD;AAID,GALD;;AAOAlB,EAAAA,SAAS,CAAC,YAAM;AACduC,IAAAA,WAAW;AACZ,GAFQ,EAEP,EAFO,CAAT;AAMJ,SACE,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,UAAAX,KAAK;AAAA,WACP,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAEd,UAAU,CAAC2B,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,EAIE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,aAAa,EAAC,MAFhB;AAGE,MAAA,KAAK,EAAEb,KAAK,CAAC,CAAD,CAHd;AAIE,MAAA,YAAY,EAAE,sBAACc,IAAD;AAAA,eAAUC,QAAQ,CAAC;AAAE5B,UAAAA,KAAK,EAAE2B,IAAT;AAAe1B,UAAAA,KAAK,EAAE;AAAtB,SAAD,CAAlB;AAAA,OAJhB;AAKE,MAAA,KAAK,EAAE,CAAC,CAACY,KAAK,CAACZ,KALjB;AAME,MAAA,SAAS,EAAEY,KAAK,CAACZ,KANnB;AAOE,MAAA,cAAc,EAAC,MAPjB;AAQE,MAAA,gBAAgB,EAAC,OARnB;AASE,MAAA,eAAe,EAAC,cATlB;AAUE,MAAA,YAAY,EAAC,eAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAgBE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,aAAa,EAAC,MAFhB;AAGE,MAAA,KAAK,EAAEG,QAAQ,CAACJ,KAHlB;AAIE,MAAA,YAAY,EAAE,sBAAC2B,IAAD;AAAA,eAAUtB,WAAW,CAAC;AAAEL,UAAAA,KAAK,EAAE2B,IAAT;AAAe1B,UAAAA,KAAK,EAAE;AAAtB,SAAD,CAArB;AAAA,OAJhB;AAKE,MAAA,KAAK,EAAE,CAAC,CAACG,QAAQ,CAACH,KALpB;AAME,MAAA,SAAS,EAAEG,QAAQ,CAACH,KANtB;AAOE,MAAA,eAAe,MAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,EAyBE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE4B,MAAM,CAACC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AACE,MAAA,OAAO,EAAE;AAAA,eAAM/B,UAAU,CAACgC,QAAX,CAAoB,sBAApB,CAAN;AAAA,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAHF,CADF,CAzBF,EAgCE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAyB,MAAA,OAAO,EAAE1B,cAAc,CAACO,KAAK,CAAC,CAAD,CAAN,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhCF,EAmCE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEgB,MAAM,CAACI,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,EAEE,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAMlC,UAAU,CAACmC,OAAX,CAAmB,gBAAnB,CAAN;AAAA,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,MAAM,CAACM,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAFF,CAnCF,CADO;AAAA,GADP,CADF;AA+CD,CA7HD;;AA+HA,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,cAAc,EAAE;AACdQ,IAAAA,KAAK,EAAE,MADO;AAEdC,IAAAA,UAAU,EAAE,UAFE;AAGdC,IAAAA,YAAY,EAAE;AAHA,GADe;AAM/BP,EAAAA,GAAG,EAAE;AACHQ,IAAAA,aAAa,EAAE,KADZ;AAEHC,IAAAA,SAAS,EAAE;AAFR,GAN0B;AAU/BV,EAAAA,MAAM,EAAE;AACNW,IAAAA,QAAQ,EAAE,EADJ;AAENC,IAAAA,KAAK,EAAEnD,KAAK,CAACoD,MAAN,CAAaC;AAFd,GAVuB;AAc/BX,EAAAA,IAAI,EAAE;AACJY,IAAAA,UAAU,EAAE,MADR;AAEJH,IAAAA,KAAK,EAAEnD,KAAK,CAACoD,MAAN,CAAaG;AAFhB;AAdyB,CAAlB,CAAf;AAoBA,eAAelD,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { TouchableOpacity, StyleSheet, View } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport Background from '../components/Background'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport BackButton from '../components/BackButton'\nimport { theme } from '../core/theme'\nimport { emailValidator } from '../helpers/emailValidator'\nimport { passwordValidator } from '../helpers/passwordValidator'\nimport fire from '../fire'\nimport {emailContext} from '../App'\n\nconst LoginScreen = ({ navigation }) => {\n  const [user, setUser] = useState({ value: '', error: '' })\n  /* const [email, setEmail] = useState({ value: '', error: '' }) */\n  const [password, setPassword] = useState({ value: '', error: '' })\n\n  const onLoginPressed = (f) => {\n    console.log(f);\n    f(\"bb\")\n\n   /*  const emailError = emailValidator(email.value) */\n   /*  const passwordError = passwordValidator(password.value) */\n   /*  if (emailError || passwordError) {\n      setEmail({ ...email, error: emailError })\n      setPassword({ ...password, error: passwordError })\n      return\n    } */\n   /*  navigation.reset({\n      index: 0,\n      routes: [{ name: 'Dashboard' }],\n    }) */\n/*     handleLogin(); */\n\n  }\n\n  const handleLogin = () =>{\n    fire\n      .auth()\n      .signInWithEmailAndPassword(email,password)\n      .catch(err =>{\n        switch(err.code){\n          case \"autu/invalid-email\":\n          case \"autu/user-disabled\":\n          case \"autu/user-not-found\":\n            setEmailError(err.massege)\n            break;\n            case \"autu/worng-password\":\n              setPasswordError(err.massege)\n            break;\n        }\n\n      });\n    };\n\n     const handleSingup = () =>{\n      fire\n        .auth()\n        .createUserWithEmailAndPassword(email,password)\n        .catch(err =>{\n          switch(err.code){\n            case \"autu/email-alredy-use\":\n            case \"autu/invalid-email\":\n              setEmailError(err.massege)\n              break;\n              case \"autu/weak-password\":\n                setPasswordError(err.massege)\n              break;\n          }\n  \n        });\n      }; \n\n      const handleLogout = () =>{\n        fire.auth().signOut();\n      }\n\n      const authListner = () =>{\n        fire.auth().onAuthStateChanged(user =>{\n          if(user){setUser(user);}\n          else{setUser(\"\");}\n        })\n      }\n\n      useEffect(() => {\n        authListner();\n      },[]);\n       \n\n   \n  return (\n    <emailContext.Consumer>{\n      email=>(\n    <Background>\n      <BackButton goBack={navigation.goBack} />\n      <Logo />\n      <Header>Welcome back.</Header>\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email[0]}\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={(text) => setPassword({ value: text, error: '' })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n      />\n      <View style={styles.forgotPassword}>\n        <TouchableOpacity\n          onPress={() => navigation.navigate('ForgotPasswordScreen')}\n        >\n          <Text style={styles.forgot}>Forgot your password?</Text>\n        </TouchableOpacity>\n      </View>\n      <Button mode=\"contained\" onPress={onLoginPressed(email[1])}>\n        Login\n      </Button>\n      <View style={styles.row}>\n        <Text>Don’t have an account? </Text>\n        <TouchableOpacity onPress={() => navigation.replace('RegisterScreen')}>\n          <Text style={styles.link}>Sign up</Text>\n        </TouchableOpacity>\n      </View>\n    </Background>\n      )}</emailContext.Consumer>\n  )\n}\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24,\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n})\n\nexport default LoginScreen\n"]},"metadata":{},"sourceType":"module"}