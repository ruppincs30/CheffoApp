{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport results from \"../src/dummy.json\";\nvar apiURLpostUser = \"http://192.168.1.35:50247/api/User/postUser/\";\nvar apiURLgetUsers = \"http://192.168.1.35:50247/api/User/getUsers/\";\nexport function script() {\n  var usersData, i;\n  return _regeneratorRuntime.async(function script$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(apiURLgetUsers, {\n            method: 'GET',\n            headers: new Headers({\n              'Content-Type': 'application/json; charset=UTF-8',\n              'Accept': 'application/json; charset=UTF-8'\n            })\n          }).then(function (response) {\n            console.log('response.status', response.status);\n            return response.json();\n          }).then(function (data) {\n            usersData = data;\n          }, function (error) {\n            console.log(\"err get=\", error);\n          }));\n\n        case 2:\n          console.log(usersData);\n\n          for (i = 0; i < data; i++) {}\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getRndInteger() {\n  return Math.floor(Math.random() * (9999 + 1));\n}\n\nfunction generateFilteredUser(data, city, gLon, gLat) {\n  var user = {\n    uid: data.login.uuid,\n    firstName: data.name.first,\n    lastName: data.name.last,\n    email: data.email,\n    city: city,\n    pNumber: data.phone,\n    lon: gLon,\n    lat: gLat,\n    img: data.picture.medium\n  };\n  fetch(apiURLpostUser, {\n    method: 'POST',\n    body: JSON.stringify(user),\n    headers: new Headers({\n      'Content-Type': 'application/json; charset=UTF-8',\n      'Accept': 'application/json; charset=UTF-8'\n    })\n  }).then(function (response) {\n    console.log('response=', response);\n    console.log('response.status', response.status);\n    console.log('response.ok', response.ok);\n    return response.json();\n  });\n  return user;\n}","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/reactHomeals/src/script.js"],"names":["results","apiURLpostUser","apiURLgetUsers","script","fetch","method","headers","Headers","then","response","console","log","status","json","data","usersData","error","i","getRndInteger","Math","floor","random","generateFilteredUser","city","gLon","gLat","user","uid","login","uuid","firstName","name","first","lastName","last","email","pNumber","phone","lon","lat","img","picture","medium","body","JSON","stringify","ok"],"mappings":";AACA,OAAOA,OAAP;AAEA,IAAIC,cAAc,GAAG,8CAArB;AACA,IAAIC,cAAc,GAAG,8CAArB;AAKA,OAAO,SAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEGC,KAAK,CAACF,cAAD,EAAiB;AACxBG,YAAAA,MAAM,EAAE,KADgB;AAExBC,YAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,8BAAgB,iCADC;AAEjB,wBAAU;AAFO,aAAZ;AAFe,WAAjB,CAAL,CAODC,IAPC,CAOI,UAAAC,QAAQ,EAAI;AACdC,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,QAAQ,CAACG,MAAxC;AACA,mBAAOH,QAAQ,CAACI,IAAT,EAAP;AACH,WAVC,EAWDL,IAXC,CAWI,UAACM,IAAD,EAAU;AACZC,YAAAA,SAAS,GAAGD,IAAZ;AACH,WAbC,EAcE,UAACE,KAAD,EAAW;AACPN,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,KAAxB;AACH,WAhBH,CAFH;;AAAA;AAmBHN,UAAAA,OAAO,CAACC,GAAR,CAAYI,SAAZ;;AACA,eAASE,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGH,IAApB,EAA0BG,CAAC,EAA3B,EAA+B,CAC9B;;AArBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuFP,SAASC,aAAT,GAAyB;AACrB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,OAAO,CAAxB,CAAX,CAAP;AACH;;AAED,SAASC,oBAAT,CAA8BR,IAA9B,EAAoCS,IAApC,EAA0CC,IAA1C,EAAgDC,IAAhD,EAAsD;AAClD,MAAIC,IAAI,GAAG;AACPC,IAAAA,GAAG,EAAEb,IAAI,CAACc,KAAL,CAAWC,IADT;AAEPC,IAAAA,SAAS,EAAEhB,IAAI,CAACiB,IAAL,CAAUC,KAFd;AAGPC,IAAAA,QAAQ,EAAEnB,IAAI,CAACiB,IAAL,CAAUG,IAHb;AAIPC,IAAAA,KAAK,EAAErB,IAAI,CAACqB,KAJL;AAKPZ,IAAAA,IAAI,EAAEA,IALC;AAMPa,IAAAA,OAAO,EAAEtB,IAAI,CAACuB,KANP;AAOPC,IAAAA,GAAG,EAAEd,IAPE;AAQPe,IAAAA,GAAG,EAAEd,IARE;AASPe,IAAAA,GAAG,EAAE1B,IAAI,CAAC2B,OAAL,CAAaC;AATX,GAAX;AAWAtC,EAAAA,KAAK,CAACH,cAAD,EAAiB;AAClBI,IAAAA,MAAM,EAAE,MADU;AAElBsC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAenB,IAAf,CAFY;AAGlBpB,IAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,sBAAgB,iCADC;AAEjB,gBAAU;AAFO,KAAZ;AAHS,GAAjB,CAAL,CAQKC,IARL,CAQU,UAAAC,QAAQ,EAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,QAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,QAAQ,CAACG,MAAxC;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,QAAQ,CAACqC,EAApC;AACA,WAAOrC,QAAQ,CAACI,IAAT,EAAP;AACH,GAbL;AAeA,SAAOa,IAAP;AACH","sourcesContent":["// const url = \"../src/dummy.json\";\r\nimport results from '../src/dummy.json'\r\n\r\nlet apiURLpostUser = \"http://192.168.1.35:50247/api/User/postUser/\";\r\nlet apiURLgetUsers = \"http://192.168.1.35:50247/api/User/getUsers/\";\r\n\r\n\r\n// document.addEventListener(\"DOMContentLoaded\", initialise);\r\n\r\nexport async function script() {\r\n    var usersData;\r\n    await fetch(apiURLgetUsers, {\r\n        method: 'GET',\r\n        headers: new Headers({\r\n            'Content-Type': 'application/json; charset=UTF-8',\r\n            'Accept': 'application/json; charset=UTF-8'\r\n        })\r\n    })\r\n        .then(response => {\r\n            console.log('response.status', response.status);\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            usersData = data;\r\n        },\r\n            (error) => {\r\n                console.log(\"err get=\", error);\r\n            });\r\n    console.log(usersData)\r\n    for (let i = 0; i < data; i++) {\r\n    }\r\n    // users creation by location\r\n    /* let listArr = [];\r\n    var city, gLon, gLat, curr1, curr2; */\r\n    /* for (let i = 0; i < results.results.length; i++) {\r\n        curr1 = getRndInteger() / 1000000;\r\n        curr2 = getRndInteger() / 1000000;\r\n        city = \"Netanya\";\r\n        gLon = 34.85 + curr1;\r\n        gLat = 32.31 + curr2;\r\n        if (i > 30) {\r\n            city = \"Mishmarot\";\r\n            gLon = 34.98 + curr1;\r\n            gLat = 32.48 + curr2;\r\n            if (i > 50) {\r\n                city = \"Kohav Yair\";\r\n                gLon = 34.99 + curr1;\r\n                gLat = 32.22 + curr2;\r\n                if (i > 80) {\r\n                    city = \"Tel Aviv\";\r\n                    gLon = 34.80 + curr1;\r\n                    gLat = 32.11 + curr2;\r\n                    if (i > 120) {\r\n                        city = \"Jerusalem\";\r\n                        gLon = 35.21 + curr1;\r\n                        gLat = 31.76 + curr2;\r\n                        if (i > 150) {\r\n                            city = \"Haifa\";\r\n                            gLon = 34.99 + curr1;\r\n                            gLat = 32.80 + curr2;\r\n                            if (i > 180) {\r\n                                city = \"Kfar Saba\";\r\n                                gLon = 34.90 + curr1;\r\n                                gLat = 32.17 + curr2;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        let filteredUser = generateFilteredUser(results.results[i], city, gLon, gLat);\r\n        listArr.push(filteredUser);\r\n        } */\r\n\r\n    /* console.log(listArr)\r\n    let userList = { users: listArr };\r\n    console.log(JSON.stringify(userList)); */\r\n    // users creation by location\r\n}\r\n\r\n/* function fetchGeneratedUsers() {\r\n    fetch(url)\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function (json) {\r\n            var listArr = [];\r\n            for (let i = 0; i < json.results.length; i++) {\r\n                var filteredUser = generateFilteredUser(json.results[i]);\r\n                listArr.push(filteredUser);\r\n            }\r\n\r\n            var userList = { users: listArr };\r\n            console.log(JSON.stringify(userList));\r\n        });\r\n} */\r\n\r\nfunction getRndInteger() {\r\n    return Math.floor(Math.random() * (9999 + 1));\r\n}\r\n\r\nfunction generateFilteredUser(data, city, gLon, gLat) {\r\n    var user = {\r\n        uid: data.login.uuid,\r\n        firstName: data.name.first,\r\n        lastName: data.name.last,\r\n        email: data.email,\r\n        city: city,\r\n        pNumber: data.phone,\r\n        lon: gLon,\r\n        lat: gLat,\r\n        img: data.picture.medium,\r\n    };\r\n    fetch(apiURLpostUser, {\r\n        method: 'POST',\r\n        body: JSON.stringify(user),\r\n        headers: new Headers({\r\n            'Content-Type': 'application/json; charset=UTF-8',\r\n            'Accept': 'application/json; charset=UTF-8'\r\n        })\r\n    })\r\n        .then(response => {\r\n            console.log('response=', response);\r\n            console.log('response.status', response.status);\r\n            console.log('response.ok', response.ok);\r\n            return response.json();\r\n        })\r\n\r\n    return user;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}