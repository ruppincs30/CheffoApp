{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shachar\\\\Desktop\\\\P\\\\reactHomeals\\\\src\\\\UserContext.js\";\nimport fire from \"../fire\";\nimport { auth } from 'firebase';\nimport React, { useContext, useState, useEffect } from 'react';\nimport dbFirestore from \"../fire\";\nimport { getDistanceFromLatLonInKm } from \"../helpers/calcDis\";\nvar apiURLgetUser = \"http://192.168.31.156:50247/api/User/getUser/\";\nvar apiURLpostUser = \"http://192.168.31.156:50247/api/User/postUser/\";\nvar apiURLgetChefs = \"http://192.168.31.156:50247/api/Chef/getChefs/\";\nvar apiURLgetDishes = \"http://192.168.31.156:50247/api/Dish/getDishes/\";\nvar apiURLpostOrder = \"http://192.168.31.156:50247/api/Order/postOrder/\";\nvar apiURLgetOrder = \"http://192.168.31.156:50247/api/Order/getOrder/\";\nvar UserContext = React.createContext();\nvar UserUpdateContext = React.createContext();\n\nfunction fireStoreImg() {\n  dbFirestore.firestore().collection('userData').doc(currentUser.uid).set({\n    imgUrl: currentUser.img\n  }).then(function () {\n    console.log('User added!');\n  });\n}\n\nexport function useUserContext() {\n  return useContext(UserContext);\n}\nexport function useUserUpdateContext() {\n  return useContext(UserUpdateContext);\n}\nexport function UserProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUser = _useState2[0],\n      setCurrentUser = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentChef = _useState4[0],\n      setCurrentChef = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentChefDishes = _useState6[0],\n      setCurrentChefDishes = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      chefsArr = _useState8[0],\n      setChefsArr = _useState8[1];\n\n  var _useState9 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      name = _useState10[0],\n      setName = _useState10[1];\n\n  var _useState11 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      email = _useState12[0],\n      setEmail = _useState12[1];\n\n  var _useState13 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      password = _useState14[0],\n      setPassword = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      userID = _useState16[0],\n      setUserID = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      selectedImage = _useState18[0],\n      setSelectedImage = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      cart = _useState20[0],\n      setCart = _useState20[1];\n\n  var _useState21 = useState(26),\n      _useState22 = _slicedToArray(_useState21, 2),\n      sliderValue = _useState22[0],\n      setSliderValue = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      orders = _useState24[0],\n      setOrders = _useState24[1];\n\n  function cartTotal(name, price, quantity) {\n    var tempCart;\n    var tempDish = {\n      Name: name,\n      Price: price,\n      Quantity: quantity\n    };\n    var flag = false;\n\n    if (cart) {\n      cart.map(function (item, key) {\n        if (item.Name == name) {\n          item.Quantity = quantity;\n          flag = true;\n          tempCart = cart;\n        }\n      });\n    } else {\n      setCart([tempDish]);\n      return;\n    }\n\n    if (!flag) {\n      tempCart = cart;\n      tempCart.push(tempDish);\n    }\n\n    setCart(tempCart);\n    console.log(cart);\n    console.log(tempDish);\n  }\n\n  function getOrders() {\n    fetch(apiURLgetOrder + currentUser.uid, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json; charset=UTF-8'\n      })\n    }).then(function (response) {\n      console.log('response.status', response.status);\n      return response.json();\n    }).then(function (data) {\n      setOrders(data);\n      console.log(data);\n    }, function (error) {\n      console.log(\"err get=\", error);\n    });\n  }\n\n  function setOrder() {\n    var sum = 0;\n    var orderStr = '';\n    cart.forEach(function (element) {\n      if (element.Quantity != 0) {\n        sum += element.Quantity * element.Price;\n        orderStr += element.Quantity + 'x ' + element.Name + ' - ' + element.Quantity * element.Price + '; ';\n      }\n    });\n    var currentdate = new Date();\n    var datetime = currentdate.getDate() + \"/\" + (currentdate.getMonth() + 1) + \"/\" + currentdate.getFullYear() + \" - \" + currentdate.getHours() + \":\" + currentdate.getMinutes();\n    var newOrder = {\n      uid: currentUser.uid,\n      chefEmail: currentChef.Email,\n      orderTime: datetime,\n      orderDescription: orderStr,\n      totalPrice: sum,\n      chef: currentChef.DisplayName\n    };\n    fetch(apiURLpostOrder, {\n      method: 'POST',\n      body: JSON.stringify(newOrder),\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json; charset=UTF-8'\n      })\n    }).then(function (response) {\n      console.log('response=', response);\n      console.log('response.status', response.status);\n      console.log('response.ok', response.ok);\n      return response.json();\n    });\n    setCart([]);\n  }\n\n  function onLogin(email, userID) {\n    setEmail(email);\n    setUserID(userID);\n  }\n\n  function updateImage(img) {\n    currentUser.img = img;\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  function signup(firstName, lastName, city, phone, email, password, lon, lat) {\n    var flag;\n    return _regeneratorRuntime.async(function signup$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            flag = true;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fire.auth().createUserWithEmailAndPassword(email, password).then(function (user) {\n              console.log(user.user.uid + \" / \" + email + \" / \" + firstName + \" / \" + lastName + \" / \" + city + \" / \" + phone);\n              var newUser = {\n                uid: user.user.uid,\n                email: email,\n                firstName: firstName,\n                lastName: lastName,\n                city: city,\n                pNumber: phone,\n                lon: lon,\n                lat: lat\n              };\n              console.log(newUser);\n              fetch(apiURLpostUser, {\n                method: 'POST',\n                body: JSON.stringify(newUser),\n                headers: new Headers({\n                  'Content-Type': 'application/json; charset=UTF-8',\n                  'Accept': 'application/json; charset=UTF-8'\n                })\n              }).then(function (response) {\n                console.log('response=', response);\n                console.log('response.status', response.status);\n                console.log('response.ok', response.ok);\n                return response.json();\n              });\n            }).catch(function (err) {\n              switch (err.code) {\n                case \"auth/email-already-in-use\":\n                case \"auth/invalid-email\":\n                case \"auth/weak-password\":\n                  alert(err.message);\n                  flag = false;\n                  break;\n              }\n            }));\n\n          case 3:\n            return _context.abrupt(\"return\", flag);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    getChefs();\n  }, [currentUser]);\n\n  function selectedChef(email) {\n    return _regeneratorRuntime.async(function selectedChef$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getDishes(email));\n\n          case 2:\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(chefsArr.forEach(function (element) {\n              if (element.Email == email) {\n                setCurrentChef(element);\n              }\n            }));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getDishes(email) {\n    fetch(apiURLgetDishes + email + '/', {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json; charset=UTF-8'\n      })\n    }).then(function (response) {\n      console.log('response.status', response.status);\n      return response.json();\n    }).then(function (data) {\n      setCurrentChefDishes(data);\n    }, function (error) {\n      console.log(\"err get=\", error);\n    });\n  }\n\n  function getChefs() {\n    fetch(apiURLgetChefs, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json; charset=UTF-8'\n      })\n    }).then(function (response) {\n      console.log('response.status', response.status);\n      return response.json();\n    }).then(function (data) {\n      var tempChefs = [];\n      data.forEach(function (element) {\n        var chef = {\n          Address: element.Address,\n          DisplayName: element.DisplayName,\n          Email: element.Email,\n          FirstName: element.FirstName,\n          LastName: element.LastName,\n          PNumber: element.PNumber,\n          Lon: element.Lon,\n          Lat: element.Lat,\n          Rating: element.Rating,\n          FoodType: element.FoodType,\n          Img: element.Img,\n          DisFromUser: getDistanceFromLatLonInKm(currentUser.lat, currentUser.lon, element.Lat, element.Lon)\n        };\n        tempChefs.push(chef);\n      });\n      setChefsArr(tempChefs);\n    }, function (error) {\n      console.log(\"err get=\", error);\n    });\n  }\n\n  function signin(email, password, callbackfunc) {\n    var flag;\n    return _regeneratorRuntime.async(function signin$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _regeneratorRuntime.awrap(fire.auth().signInWithEmailAndPassword(email, password).then(function _callee3() {\n              return _regeneratorRuntime.async(function _callee3$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _context5.next = 2;\n                      return _regeneratorRuntime.awrap(fire.auth().onAuthStateChanged(function _callee2(authUser) {\n                        return _regeneratorRuntime.async(function _callee2$(_context4) {\n                          while (1) {\n                            switch (_context4.prev = _context4.next) {\n                              case 0:\n                                if (!(authUser !== null)) {\n                                  _context4.next = 5;\n                                  break;\n                                }\n\n                                _context4.next = 3;\n                                return _regeneratorRuntime.awrap(fetch(apiURLgetUser + authUser.uid, {\n                                  method: 'GET',\n                                  headers: new Headers({\n                                    'Content-Type': 'application/json; charset=UTF-8',\n                                    'Accept': 'application/json; charset=UTF-8'\n                                  })\n                                }).then(function (response) {\n                                  console.log('response.status', response.status);\n                                  return response.json();\n                                }).then(function _callee(data) {\n                                  var user;\n                                  return _regeneratorRuntime.async(function _callee$(_context3) {\n                                    while (1) {\n                                      switch (_context3.prev = _context3.next) {\n                                        case 0:\n                                          user = {\n                                            uid: data.Uid,\n                                            email: data.Email,\n                                            firstName: data.FirstName,\n                                            lastName: data.LastName,\n                                            city: data.City,\n                                            pNumber: data.PNumber,\n                                            lon: data.Lon,\n                                            lat: data.Lat,\n                                            img: data.Img\n                                          };\n                                          setCurrentUser(user);\n                                          console.log(user);\n                                          flag = true;\n                                          callbackfunc(flag);\n\n                                        case 5:\n                                        case \"end\":\n                                          return _context3.stop();\n                                      }\n                                    }\n                                  }, null, null, null, Promise);\n                                }, function (error) {\n                                  console.log(\"err get=\", error);\n                                }));\n\n                              case 3:\n                                _context4.next = 6;\n                                break;\n\n                              case 5:\n                                setCurrentUser('');\n\n                              case 6:\n                              case \"end\":\n                                return _context4.stop();\n                            }\n                          }\n                        }, null, null, null, Promise);\n                      }));\n\n                    case 2:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (err) {\n              switch (err.code) {\n                case \"auth/invalid-email\":\n                case \"auth/user-disabled\":\n                case \"auth/user-not-found\":\n                  alert(\"wrong Email\");\n                  console.log(err.message);\n                  break;\n\n                case \"auth/wrong-password\":\n                  alert(\"wrong Password\");\n                  console.log(err.message);\n                  break;\n              }\n\n              flag = false;\n              callbackfunc(flag);\n            }));\n\n          case 2:\n            fireStoreImg();\n\n          case 3:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function Logout() {\n    fire.auth().signOut();\n  }\n\n  var value = {\n    currentUser: currentUser,\n    setCurrentUser: setCurrentUser,\n    name: name,\n    email: email,\n    password: password,\n    userID: userID,\n    signup: signup,\n    signin: signin,\n    updateEmail: updateEmail,\n    updatePassword: updatePassword,\n    onLogin: onLogin,\n    Logout: Logout,\n    chefsArr: chefsArr,\n    selectedChef: selectedChef,\n    currentChefDishes: currentChefDishes,\n    currentChef: currentChef,\n    updateImage: updateImage,\n    cartTotal: cartTotal,\n    cart: cart,\n    setCart: setCart,\n    sliderValue: sliderValue,\n    setSliderValue: setSliderValue,\n    setOrder: setOrder,\n    getOrders: getOrders,\n    orders: orders\n  };\n  return React.createElement(UserContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }\n  }, children);\n}","map":{"version":3,"sources":["C:/Users/Shachar/Desktop/P/reactHomeals/src/UserContext.js"],"names":["fire","auth","React","useContext","useState","useEffect","dbFirestore","getDistanceFromLatLonInKm","apiURLgetUser","apiURLpostUser","apiURLgetChefs","apiURLgetDishes","apiURLpostOrder","apiURLgetOrder","UserContext","createContext","UserUpdateContext","fireStoreImg","firestore","collection","doc","currentUser","uid","set","imgUrl","img","then","console","log","useUserContext","useUserUpdateContext","UserProvider","children","setCurrentUser","currentChef","setCurrentChef","currentChefDishes","setCurrentChefDishes","chefsArr","setChefsArr","value","error","name","setName","email","setEmail","password","setPassword","userID","setUserID","selectedImage","setSelectedImage","cart","setCart","sliderValue","setSliderValue","orders","setOrders","cartTotal","price","quantity","tempCart","tempDish","Name","Price","Quantity","flag","map","item","key","push","getOrders","fetch","method","headers","Headers","response","status","json","data","setOrder","sum","orderStr","forEach","element","currentdate","Date","datetime","getDate","getMonth","getFullYear","getHours","getMinutes","newOrder","chefEmail","Email","orderTime","orderDescription","totalPrice","chef","DisplayName","body","JSON","stringify","ok","onLogin","updateImage","updateEmail","updatePassword","signup","firstName","lastName","city","phone","lon","lat","createUserWithEmailAndPassword","user","newUser","pNumber","catch","err","code","alert","message","getChefs","selectedChef","getDishes","tempChefs","Address","FirstName","LastName","PNumber","Lon","Lat","Rating","FoodType","Img","DisFromUser","signin","callbackfunc","signInWithEmailAndPassword","onAuthStateChanged","authUser","Uid","City","Logout","signOut"],"mappings":"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","sourcesContent":["import fire from '../fire'\r\nimport { auth } from 'firebase'\r\nimport React, { useContext, useState, useEffect } from 'react'\r\nimport dbFirestore from '../fire'\r\nimport { getDistanceFromLatLonInKm } from '../helpers/calcDis'\r\n\r\nlet apiURLgetUser = \"http://192.168.31.156:50247/api/User/getUser/\";\r\nlet apiURLpostUser = \"http://192.168.31.156:50247/api/User/postUser/\";\r\nlet apiURLgetChefs = \"http://192.168.31.156:50247/api/Chef/getChefs/\";\r\nlet apiURLgetDishes = \"http://192.168.31.156:50247/api/Dish/getDishes/\";\r\nlet apiURLpostOrder = \"http://192.168.31.156:50247/api/Order/postOrder/\";\r\nlet apiURLgetOrder = \"http://192.168.31.156:50247/api/Order/getOrder/\";\r\n\r\nconst UserContext = React.createContext()\r\nconst UserUpdateContext = React.createContext()\r\n\r\nfunction fireStoreImg() {\r\n    dbFirestore.firestore()\r\n        .collection('userData')\r\n        .doc(currentUser.uid)\r\n        .set({\r\n            imgUrl:currentUser.img\r\n        })\r\n        .then(() => {\r\n            console.log('User added!');\r\n        });\r\n\r\n}\r\n\r\nexport function useUserContext() {\r\n    return useContext(UserContext)\r\n}\r\n\r\nexport function useUserUpdateContext() {\r\n    return useContext(UserUpdateContext)\r\n}\r\n\r\nexport function UserProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState('')\r\n    const [currentChef, setCurrentChef] = useState('')\r\n    const [currentChefDishes, setCurrentChefDishes] = useState('')\r\n    const [chefsArr, setChefsArr] = useState('')\r\n    const [name, setName] = useState({ value: '', error: '' })\r\n    const [email, setEmail] = useState({ value: '', error: '' })\r\n    const [password, setPassword] = useState({ value: '', error: '' })\r\n    const [userID, setUserID] = useState('')\r\n    const [selectedImage, setSelectedImage] = useState('');\r\n    const [cart, setCart] = useState([]);\r\n    const [sliderValue, setSliderValue] = useState(26);\r\n    const [orders, setOrders] = useState([]);\r\n\r\n\r\n    function cartTotal(name, price, quantity) {\r\n        let tempCart;\r\n        let tempDish = {\r\n            Name: name,\r\n            Price: price,\r\n            Quantity: quantity\r\n        }\r\n        let flag = false;\r\n        if (cart) {\r\n            cart.map((item, key) => {\r\n                if (item.Name == name) {\r\n                    item.Quantity = quantity;\r\n                    flag = true;\r\n                    tempCart = cart;\r\n                }\r\n            }\r\n            )\r\n        }\r\n        else {\r\n            setCart([tempDish]);\r\n            return;\r\n        }\r\n        if (!flag) {\r\n            tempCart = cart;\r\n            tempCart.push(tempDish);\r\n        }\r\n        setCart(tempCart);\r\n        console.log(cart);\r\n        console.log(tempDish);\r\n    }\r\n\r\n    function getOrders() {\r\n        /* Get Orders from SQL */\r\n        fetch(apiURLgetOrder + currentUser.uid, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response.status', response.status);\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                setOrders(data);\r\n                console.log(data);\r\n            },\r\n                (error) => {\r\n                    console.log(\"err get=\", error);\r\n                });\r\n\r\n    }\r\n\r\n    function setOrder() {\r\n        let sum = 0;\r\n        let orderStr = '';\r\n        cart.forEach(element => {\r\n            if (element.Quantity != 0) {\r\n                sum += (element.Quantity * element.Price)\r\n                orderStr += element.Quantity + 'x ' + element.Name + ' - ' + (element.Quantity * element.Price) + '; ';\r\n            }\r\n        });\r\n        var currentdate = new Date();\r\n        var datetime = currentdate.getDate() + \"/\"\r\n            + (currentdate.getMonth() + 1) + \"/\"\r\n            + currentdate.getFullYear() + \" - \"\r\n            + currentdate.getHours() + \":\"\r\n            + currentdate.getMinutes();\r\n        let newOrder = {\r\n            uid: currentUser.uid,\r\n            chefEmail: currentChef.Email,\r\n            orderTime: datetime,\r\n            orderDescription: orderStr,\r\n            totalPrice: sum,\r\n            chef: currentChef.DisplayName\r\n        }\r\n        fetch(apiURLpostOrder, {\r\n            method: 'POST',\r\n            body: JSON.stringify(newOrder),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response=', response);\r\n                console.log('response.status', response.status);\r\n                console.log('response.ok', response.ok);\r\n                return response.json();\r\n            })\r\n        setCart([]);\r\n    }\r\n\r\n    function onLogin(email, userID) {\r\n        setEmail(email);\r\n        setUserID(userID);\r\n\r\n    }\r\n\r\n    function updateImage(img) {\r\n        currentUser.img = img;\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    async function signup(firstName, lastName, city, phone, email, password, lon, lat) {\r\n        var flag = true;\r\n        await fire\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then(function (user) {\r\n                console.log(user.user.uid + \" / \" + email + \" / \" + firstName + \" / \" + lastName + \" / \" + city + \" / \" + phone)\r\n                const newUser = {\r\n                    uid: user.user.uid,\r\n                    email: email,\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    city: city,\r\n                    pNumber: phone,\r\n                    lon: lon,\r\n                    lat: lat\r\n                }\r\n                console.log(newUser);\r\n                fetch(apiURLpostUser, {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(newUser),\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json; charset=UTF-8',\r\n                        'Accept': 'application/json; charset=UTF-8'\r\n                    })\r\n                })\r\n                    .then(response => {\r\n                        console.log('response=', response);\r\n                        console.log('response.status', response.status);\r\n                        console.log('response.ok', response.ok);\r\n                        return response.json();\r\n                    })\r\n            })\r\n            .catch(err => {\r\n                switch (err.code) {\r\n                    case \"auth/email-already-in-use\":\r\n                    case \"auth/invalid-email\":\r\n                    case \"auth/weak-password\":\r\n                        alert(err.message);\r\n                        flag = false;\r\n                        break;\r\n                }\r\n            });\r\n\r\n\r\n        return flag;\r\n    }\r\n\r\n    useEffect(() => {\r\n        getChefs();\r\n    }, [currentUser])\r\n\r\n\r\n\r\n    async function selectedChef(email) {\r\n        await getDishes(email);\r\n        await chefsArr.forEach(element => {\r\n            if (element.Email == email) {\r\n                setCurrentChef(element);\r\n            }\r\n        });\r\n    }\r\n\r\n    function getDishes(email) {\r\n        /* Get Dishes from SQL */\r\n        fetch(apiURLgetDishes + email + '/', {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response.status', response.status);\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                setCurrentChefDishes(data);\r\n            },\r\n                (error) => {\r\n                    console.log(\"err get=\", error);\r\n                });\r\n    }\r\n\r\n    function getChefs() {\r\n        /* Get Chefs from SQL */\r\n        fetch(apiURLgetChefs, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response.status', response.status);\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                let tempChefs = [];\r\n                data.forEach(element => {\r\n                    const chef = {\r\n                        Address: element.Address,\r\n                        DisplayName: element.DisplayName,\r\n                        Email: element.Email,\r\n                        FirstName: element.FirstName,\r\n                        LastName: element.LastName,\r\n                        PNumber: element.PNumber,\r\n                        Lon: element.Lon,\r\n                        Lat: element.Lat,\r\n                        Rating: element.Rating,\r\n                        FoodType: element.FoodType,\r\n                        Img: element.Img,\r\n                        DisFromUser: getDistanceFromLatLonInKm(currentUser.lat, currentUser.lon, element.Lat, element.Lon)\r\n                    }\r\n                    tempChefs.push(chef);\r\n                });\r\n                setChefsArr(tempChefs);\r\n\r\n            },\r\n                (error) => {\r\n                    console.log(\"err get=\", error);\r\n                });\r\n    }\r\n\r\n    async function signin(email, password, callbackfunc) {\r\n\r\n        let flag;\r\n        await fire.auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(async () => {\r\n                await fire.auth().onAuthStateChanged(async authUser => {\r\n                    if (authUser !== null) {\r\n                        /* Get User Details from SQL */\r\n                        await fetch(apiURLgetUser + authUser.uid, {\r\n                            method: 'GET',\r\n                            headers: new Headers({\r\n                                'Content-Type': 'application/json; charset=UTF-8',\r\n                                'Accept': 'application/json; charset=UTF-8'\r\n                            })\r\n                        })\r\n                            .then(response => {\r\n                                console.log('response.status', response.status);\r\n                                return response.json();\r\n                            })\r\n                            .then(async (data) => {\r\n                                const user = {\r\n                                    uid: data.Uid,\r\n                                    email: data.Email,\r\n                                    firstName: data.FirstName,\r\n                                    lastName: data.LastName,\r\n                                    city: data.City,\r\n                                    pNumber: data.PNumber,\r\n                                    lon: data.Lon,\r\n                                    lat: data.Lat,\r\n                                    img: data.Img\r\n                                }\r\n                                setCurrentUser(user);\r\n                                console.log(user)\r\n                                flag = true;\r\n                                callbackfunc(flag);\r\n                            },\r\n                                (error) => {\r\n                                    console.log(\"err get=\", error);\r\n\r\n                                })\r\n\r\n                    }\r\n                    else {\r\n                        setCurrentUser('');\r\n                    }\r\n                })\r\n            }\r\n            )\r\n            .catch(err => {\r\n                switch (err.code) {\r\n                    case \"auth/invalid-email\":\r\n                    case \"auth/user-disabled\":\r\n                    case \"auth/user-not-found\":\r\n                        alert(\"wrong Email\");\r\n                        console.log(err.message)\r\n                        break;\r\n                    case \"auth/wrong-password\":\r\n                        alert(\"wrong Password\");\r\n                        console.log(err.message)\r\n                        break;\r\n                }\r\n                flag = false;\r\n                callbackfunc(flag);\r\n            });\r\n        fireStoreImg();\r\n    }\r\n\r\n    function Logout() {\r\n        fire.auth().signOut();\r\n    }\r\n\r\n    const value = {\r\n        currentUser,\r\n        setCurrentUser,\r\n        name,\r\n        email,\r\n        password,\r\n        userID,\r\n        signup,\r\n        signin,\r\n        updateEmail,\r\n        updatePassword,\r\n        onLogin,\r\n        Logout,\r\n        chefsArr,\r\n        selectedChef,\r\n        currentChefDishes,\r\n        currentChef,\r\n        updateImage,\r\n        cartTotal,\r\n        cart,\r\n        setCart,\r\n        sliderValue,\r\n        setSliderValue,\r\n        setOrder,\r\n        getOrders,\r\n        orders,\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={value}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}