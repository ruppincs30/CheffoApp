{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\reactHomeals\\\\screens\\\\FriendsScreen.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport PaperButton from \"../components/Button\";\nimport { Text, Card } from 'react-native-paper';\nimport { SimpleLineIcons, AntDesign, Ionicons, Feather, MaterialCommunityIcons, FontAwesome5 } from '@expo/vector-icons';\nimport BackButton from \"../components/BackButton\";\nimport { useUserContext } from \"../src/UserContext\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport FriendCard from \"../components/FriendCard\";\nimport { SearchBar } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\n\nvar FriendsScreen = function FriendsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useUserContext = useUserContext(),\n      currentChefDishes = _useUserContext.currentChefDishes,\n      currentChef = _useUserContext.currentChef,\n      cart = _useUserContext.cart,\n      setOrder = _useUserContext.setOrder,\n      friendsSuggestion = _useUserContext.friendsSuggestion,\n      friendsArrDetails = _useUserContext.friendsArrDetails,\n      allUsers = _useUserContext.allUsers;\n\n  var Tab = createMaterialBottomTabNavigator();\n  useEffect(function () {\n    if (friendsArrDetails) {\n      console.log('hi12321312');\n    }\n  }, [friendsArrDetails]);\n\n  function ShowFriends() {\n    var _this2 = this;\n\n    return React.createElement(View, {\n      style: {\n        marginTop: \"5%\",\n        flex: 1,\n        justifyContent: 'left',\n        alignItems: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        position: 'absolute',\n        flex: 1,\n        alignItems: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, React.createElement(AntDesign, {\n      onPress: function onPress() {\n        navigation.reset({\n          index: 0,\n          routes: [{\n            name: 'Dashboard'\n          }]\n        });\n      },\n      name: \"arrowleft\",\n      size: 24,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    })), React.createElement(Text, {\n      style: {\n        marginBottom: \"5%\",\n        textAlign: 'center',\n        fontFamily: 'sans-serif-light',\n        color: \"#3ec92d\",\n        fontSize: 22\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, \"My Friends\"), React.createElement(ScrollView, {\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, friendsArrDetails ? friendsArrDetails.map(function (item, key) {\n      return React.createElement(FriendCard, {\n        key: key,\n        friendData: item,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }\n      });\n    }) : React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }, \"You have no friends yet\")));\n  }\n\n  var myData = [].concat(friendsSuggestion).sort(function (a, b) {\n    return a.score < b.score ? 1 : -1;\n  });\n\n  function ShowSuggestions() {\n    var _this3 = this;\n\n    var _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        search = _useState2[0],\n        setSearch = _useState2[1];\n\n    function updateSearch(searchVal) {\n      allUsers.forEach(function (currUser) {\n        currUser.FirstName.includes(searchVal) ? console.log(currStr.FirstName) : null;\n      });\n      console.log('miao');\n      console.log(allUsers);\n    }\n\n    ;\n    return React.createElement(View, {\n      style: {\n        marginTop: \"5%\",\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: \"-webkit-fill-available\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, React.createElement(SearchBar, {\n      containerStyle: {\n        width: \"inherit\",\n        padding: \"1.5%\",\n        marginTop: \"-5%\"\n      },\n      lightTheme: true,\n      round: \"true\",\n      placeholder: \"Search friends...\",\n      onChangeText: updateSearch,\n      value: search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: {\n        marginBottom: \"3%\",\n        marginTop: \"3%\",\n        textAlign: 'center',\n        fontFamily: 'sans-serif-light',\n        color: \"rgb(45 74 39)\",\n        fontSize: 20,\n        fontFamily: 'system-ui'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"People You May Know\"), React.createElement(ScrollView, {\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, myData ? myData.map(function (item, key) {\n      return React.createElement(FriendCard, {\n        key: key,\n        friendData: item,\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      });\n    }) : React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, \"No suggestion yet\")));\n  }\n\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"ShowFriends\",\n    activeColor: \"#fff\",\n    barStyle: {\n      backgroundColor: 'rgb(62,197,0)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"ShowFriends\",\n    component: ShowFriends,\n    options: {\n      tabBarLabel: 'Friends',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color;\n        return React.createElement(SimpleLineIcons, {\n          name: \"people\",\n          size: 20,\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"ShowSuggestions\",\n    component: ShowSuggestions,\n    options: {\n      tabBarLabel: 'Suggestions',\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color;\n        return React.createElement(FontAwesome5, {\n          name: \"people-arrows\",\n          size: 24,\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default FriendsScreen;\nvar styles = StyleSheet.create({\n  cartBar: {\n    height: 100,\n    marginTop: '10%',\n    width: '100%',\n    backgroundColor: 'green'\n  },\n  shadow: {\n    height: 60,\n    width: 370,\n    marginTop: 8,\n    marginBottom: 5,\n    elevation: 10,\n    borderRadius: 15\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/reactHomeals/screens/FriendsScreen.js"],"names":["React","useEffect","useState","PaperButton","Text","Card","SimpleLineIcons","AntDesign","Ionicons","Feather","MaterialCommunityIcons","FontAwesome5","BackButton","useUserContext","createMaterialBottomTabNavigator","FriendCard","SearchBar","Icon","FriendsScreen","navigation","currentChefDishes","currentChef","cart","setOrder","friendsSuggestion","friendsArrDetails","allUsers","Tab","console","log","ShowFriends","marginTop","flex","justifyContent","alignItems","position","reset","index","routes","name","marginBottom","textAlign","fontFamily","color","fontSize","width","map","item","key","myData","concat","sort","a","b","score","ShowSuggestions","search","setSearch","updateSearch","searchVal","forEach","currUser","FirstName","includes","currStr","padding","backgroundColor","tabBarLabel","tabBarIcon","styles","StyleSheet","create","cartBar","height","shadow","elevation","borderRadius"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport PaperButton from '../components/Button'\r\nimport { Text, Card } from 'react-native-paper'\r\nimport { SimpleLineIcons, AntDesign, Ionicons, Feather, MaterialCommunityIcons, FontAwesome5 } from '@expo/vector-icons';\r\nimport BackButton from '../components/BackButton'\r\nimport { useUserContext } from \"../src/UserContext\"\r\nimport { View, StyleSheet, Image, ScrollView, SafeAreaView } from 'react-native';\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nimport FriendCard from '../components/FriendCard'\r\nimport { SearchBar } from 'react-native-elements';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nconst FriendsScreen = ({ navigation }) => {\r\n    const { currentChefDishes, currentChef, cart, setOrder, friendsSuggestion, friendsArrDetails, allUsers } = useUserContext();\r\n    const Tab = createMaterialBottomTabNavigator();\r\n    \r\n\r\n    useEffect(() => {\r\n        if (friendsArrDetails){\r\n            console.log('hi12321312')\r\n        }\r\n    }, [friendsArrDetails])\r\n    function ShowFriends() {\r\n        return (\r\n            <View style={{marginTop: \"5%\", flex: 1, justifyContent: 'left', alignItems: 'left' }}>\r\n                <View style={{ position: 'absolute', flex: 1, alignItems: 'left' }}>\r\n                    <AntDesign onPress={() => { navigation.reset({ index: 0, routes: [{ name: 'Dashboard' }], }) }} name=\"arrowleft\" size={24} color=\"black\" />\r\n                </View>\r\n                <Text style={{marginBottom: \"5%\", textAlign: 'center', fontFamily: 'sans-serif-light', color: \"#3ec92d\", fontSize: 22 }}>My Friends</Text>\r\n                <ScrollView style={{ width: \"100%\" }}>\r\n\r\n                    {friendsArrDetails ? friendsArrDetails.map((item, key) =>\r\n                        <FriendCard key={key}\r\n                            friendData={item}>\r\n                        </FriendCard>\r\n                    ) : <Text>You have no friends yet</Text>}\r\n                </ScrollView>\r\n\r\n            </View>\r\n        );\r\n    }\r\n\r\n    const myData = [].concat(friendsSuggestion)\r\n        .sort((a, b) => a.score < b.score ? 1 : -1);\r\n\r\n    function ShowSuggestions() {\r\n        const [search, setSearch] = useState('')\r\n        function updateSearch(searchVal){\r\n            allUsers.forEach(currUser => {\r\n                currUser.FirstName.includes(searchVal) ? console.log(currStr.FirstName) : null\r\n            });\r\n            console.log('miao')\r\n            console.log(allUsers)\r\n        };\r\n        return (\r\n            <View style={{ marginTop: \"5%\", flex: 1, justifyContent: 'center', alignItems: 'center', width: \"-webkit-fill-available\" }}>\r\n                <SearchBar\r\n                    containerStyle={{ width: \"inherit\", padding: \"1.5%\", marginTop: \"-5%\" }}\r\n                    lightTheme\r\n                    round = \"true\"\r\n                    placeholder=\"Search friends...\"\r\n                    onChangeText={updateSearch}\r\n                    value={search}\r\n                />\r\n                <Text style={{ marginBottom: \"3%\", marginTop: \"3%\", textAlign: 'center', fontFamily: 'sans-serif-light', color: \"rgb(45 74 39)\", fontSize: 20, fontFamily: 'system-ui' }}>People You May Know</Text>\r\n                <ScrollView style={{ width: \"100%\" }}>\r\n                    {/* {console.log(myData)} */}\r\n                    {myData ? myData.map((item, key) =>\r\n                        <FriendCard key={key}\r\n                            friendData={item}>\r\n                        </FriendCard>\r\n                    ) : <Text>No suggestion yet</Text>}\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Tab.Navigator\r\n            initialRouteName=\"ShowFriends\"\r\n            activeColor=\"#fff\"\r\n            barStyle={{ backgroundColor: 'rgb(62,197,0)' }}\r\n        >\r\n            <Tab.Screen name=\"ShowFriends\" component={ShowFriends}\r\n                options={{\r\n                    tabBarLabel: 'Friends',\r\n                    tabBarIcon: ({ color }) => (\r\n                        <SimpleLineIcons name=\"people\" size={20} color={color} />\r\n                    ),\r\n                }}\r\n            />\r\n            <Tab.Screen name=\"ShowSuggestions\" component={ShowSuggestions}\r\n                options={{\r\n                    tabBarLabel: 'Suggestions',\r\n                    tabBarIcon: ({ color }) => (\r\n                        <FontAwesome5 name=\"people-arrows\" size={24} color={color} />\r\n                    ),\r\n                }}\r\n            />\r\n        </Tab.Navigator>\r\n    )\r\n}\r\n\r\nexport default FriendsScreen\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    cartBar: {\r\n        height: 100,\r\n        marginTop: '10%',\r\n        width: '100%',\r\n        backgroundColor: 'green',\r\n    },\r\n    shadow: {\r\n        height: 60,\r\n        width: 370,\r\n        marginTop: 8,\r\n        marginBottom: 5,\r\n        elevation: 10,\r\n        borderRadius: 15,\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}