{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { generateFirestoreId, isObject } from '@react-native-firebase/app/lib/common';\nimport FirestoreDocumentReference, { provideCollectionReferenceClass } from \"./FirestoreDocumentReference\";\nimport FirestoreQuery from \"./FirestoreQuery\";\nimport FirestoreQueryModifiers from \"./FirestoreQueryModifiers\";\n\nvar FirestoreCollectionReference = function (_FirestoreQuery) {\n  _inherits(FirestoreCollectionReference, _FirestoreQuery);\n\n  var _super = _createSuper(FirestoreCollectionReference);\n\n  function FirestoreCollectionReference(firestore, collectionPath) {\n    _classCallCheck(this, FirestoreCollectionReference);\n\n    return _super.call(this, firestore, collectionPath, new FirestoreQueryModifiers());\n  }\n\n  _createClass(FirestoreCollectionReference, [{\n    key: \"add\",\n    value: function add(data) {\n      if (!isObject(data)) {\n        throw new Error(\"firebase.firestore().collection().add(*) 'data' must be an object.\");\n      }\n\n      var documentRef = this.doc();\n      return documentRef.set(data).then(function () {\n        return Promise.resolve(documentRef);\n      });\n    }\n  }, {\n    key: \"doc\",\n    value: function doc(documentPath) {\n      var newPath = documentPath || generateFirestoreId();\n\n      var path = this._collectionPath.child(newPath);\n\n      if (!path.isDocument) {\n        throw new Error(\"firebase.firestore().collection().doc(*) 'documentPath' must point to a document.\");\n      }\n\n      return new FirestoreDocumentReference(this._firestore, path);\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._collectionPath.id;\n    }\n  }, {\n    key: \"parent\",\n    get: function get() {\n      var parent = this._collectionPath.parent();\n\n      if (!parent) {\n        return null;\n      }\n\n      return new FirestoreDocumentReference(this._firestore, parent);\n    }\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this._collectionPath.relativeName;\n    }\n  }]);\n\n  return FirestoreCollectionReference;\n}(FirestoreQuery);\n\nexport { FirestoreCollectionReference as default };\nprovideCollectionReferenceClass(FirestoreCollectionReference);","map":{"version":3,"sources":["C:/Users/asafs/Desktop/homeals/node_modules/@react-native-firebase/firestore/lib/FirestoreCollectionReference.js"],"names":["generateFirestoreId","isObject","FirestoreDocumentReference","provideCollectionReferenceClass","FirestoreQuery","FirestoreQueryModifiers","FirestoreCollectionReference","firestore","collectionPath","data","Error","documentRef","doc","set","then","Promise","resolve","documentPath","newPath","path","_collectionPath","child","isDocument","_firestore","id","parent","relativeName"],"mappings":";;;;;;;;;;AAiBA,SAASA,mBAAT,EAA8BC,QAA9B,QAA8C,uCAA9C;AACA,OAAOC,0BAAP,IACEC,+BADF;AAGA,OAAOC,cAAP;AACA,OAAOC,uBAAP;;IAEqBC,4B;;;;;AACnB,wCAAYC,SAAZ,EAAuBC,cAAvB,EAAuC;AAAA;;AAAA,6BAC/BD,SAD+B,EACpBC,cADoB,EACJ,IAAIH,uBAAJ,EADI;AAEtC;;;;wBAkBGI,I,EAAM;AACR,UAAI,CAACR,QAAQ,CAACQ,IAAD,CAAb,EAAqB;AACnB,cAAM,IAAIC,KAAJ,CAAU,oEAAV,CAAN;AACD;;AAED,UAAMC,WAAW,GAAG,KAAKC,GAAL,EAApB;AACA,aAAOD,WAAW,CAACE,GAAZ,CAAgBJ,IAAhB,EAAsBK,IAAtB,CAA2B;AAAA,eAAMC,OAAO,CAACC,OAAR,CAAgBL,WAAhB,CAAN;AAAA,OAA3B,CAAP;AACD;;;wBAEGM,Y,EAAc;AAChB,UAAMC,OAAO,GAAGD,YAAY,IAAIjB,mBAAmB,EAAnD;;AACA,UAAMmB,IAAI,GAAG,KAAKC,eAAL,CAAqBC,KAArB,CAA2BH,OAA3B,CAAb;;AAEA,UAAI,CAACC,IAAI,CAACG,UAAV,EAAsB;AACpB,cAAM,IAAIZ,KAAJ,CACJ,mFADI,CAAN;AAGD;;AAED,aAAO,IAAIR,0BAAJ,CAA+B,KAAKqB,UAApC,EAAgDJ,IAAhD,CAAP;AACD;;;wBApCQ;AACP,aAAO,KAAKC,eAAL,CAAqBI,EAA5B;AACD;;;wBAEY;AACX,UAAMC,MAAM,GAAG,KAAKL,eAAL,CAAqBK,MAArB,EAAf;;AACA,UAAI,CAACA,MAAL,EAAa;AACX,eAAO,IAAP;AACD;;AACD,aAAO,IAAIvB,0BAAJ,CAA+B,KAAKqB,UAApC,EAAgDE,MAAhD,CAAP;AACD;;;wBAEU;AACT,aAAO,KAAKL,eAAL,CAAqBM,YAA5B;AACD;;;;EAnBuDtB,c;;SAArCE,4B;AA6CrBH,+BAA+B,CAACG,4BAAD,CAA/B","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { generateFirestoreId, isObject } from '@react-native-firebase/app/lib/common';\nimport FirestoreDocumentReference, {\n  provideCollectionReferenceClass,\n} from './FirestoreDocumentReference';\nimport FirestoreQuery from './FirestoreQuery';\nimport FirestoreQueryModifiers from './FirestoreQueryModifiers';\n\nexport default class FirestoreCollectionReference extends FirestoreQuery {\n  constructor(firestore, collectionPath) {\n    super(firestore, collectionPath, new FirestoreQueryModifiers());\n  }\n\n  get id() {\n    return this._collectionPath.id;\n  }\n\n  get parent() {\n    const parent = this._collectionPath.parent();\n    if (!parent) {\n      return null;\n    }\n    return new FirestoreDocumentReference(this._firestore, parent);\n  }\n\n  get path() {\n    return this._collectionPath.relativeName;\n  }\n\n  add(data) {\n    if (!isObject(data)) {\n      throw new Error(\"firebase.firestore().collection().add(*) 'data' must be an object.\");\n    }\n\n    const documentRef = this.doc();\n    return documentRef.set(data).then(() => Promise.resolve(documentRef));\n  }\n\n  doc(documentPath) {\n    const newPath = documentPath || generateFirestoreId();\n    const path = this._collectionPath.child(newPath);\n\n    if (!path.isDocument) {\n      throw new Error(\n        \"firebase.firestore().collection().doc(*) 'documentPath' must point to a document.\",\n      );\n    }\n\n    return new FirestoreDocumentReference(this._firestore, path);\n  }\n}\n\n// To avoid React Native require cycle warnings\nprovideCollectionReferenceClass(FirestoreCollectionReference);\n"]},"metadata":{},"sourceType":"module"}