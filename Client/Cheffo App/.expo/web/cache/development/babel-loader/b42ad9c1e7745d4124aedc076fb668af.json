{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\reactHomeals\\\\node_modules\\\\react-native-elements\\\\src\\\\text\\\\Text.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { fonts, withTheme } from \"../config\";\nimport { patchWebProps } from \"../helpers\";\nimport normalize from \"../helpers/normalizeText\";\n\nvar TextElement = function TextElement(props) {\n  var style = props.style,\n      theme = props.theme,\n      children = props.children,\n      h1 = props.h1,\n      h2 = props.h2,\n      h3 = props.h3,\n      h4 = props.h4,\n      h1Style = props.h1Style,\n      h2Style = props.h2Style,\n      h3Style = props.h3Style,\n      h4Style = props.h4Style,\n      rest = _objectWithoutProperties(props, [\"style\", \"theme\", \"children\", \"h1\", \"h2\", \"h3\", \"h4\", \"h1Style\", \"h2Style\", \"h3Style\", \"h4Style\"]);\n\n  return React.createElement(Text, _extends({\n    style: StyleSheet.flatten([styles.text(theme), style, (h1 || h2 || h3 || h4) && styles.bold, h1 && StyleSheet.flatten([{\n      fontSize: normalize(40)\n    }, h1Style]), h2 && StyleSheet.flatten([{\n      fontSize: normalize(34)\n    }, h2Style]), h3 && StyleSheet.flatten([{\n      fontSize: normalize(28)\n    }, h3Style]), h4 && StyleSheet.flatten([{\n      fontSize: normalize(22)\n    }, h4Style])])\n  }, patchWebProps(rest), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nTextElement.propTypes = {\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  h1: PropTypes.bool,\n  h2: PropTypes.bool,\n  h3: PropTypes.bool,\n  h4: PropTypes.bool,\n  h1Style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  h2Style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  h3Style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  h4Style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  children: PropTypes.node\n};\nTextElement.defaultProps = {\n  h1: false,\n  h2: false,\n  h3: false,\n  h4: false,\n  style: {},\n  h1Style: {},\n  h2Style: {},\n  h3Style: {},\n  h4Style: {},\n  children: ''\n};\nvar styles = {\n  text: function text(theme) {\n    return _objectSpread(_objectSpread({}, Platform.select({\n      android: _objectSpread({}, fonts.android.regular)\n    })), {}, {\n      color: theme.colors.black\n    });\n  },\n  bold: _objectSpread({}, Platform.select({\n    android: _objectSpread({}, fonts.android.bold)\n  }))\n};\nexport { TextElement };\nexport default withTheme(TextElement, 'Text');","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/reactHomeals/node_modules/react-native-elements/src/text/Text.js"],"names":["React","PropTypes","fonts","withTheme","patchWebProps","normalize","TextElement","props","style","theme","children","h1","h2","h3","h4","h1Style","h2Style","h3Style","h4Style","rest","StyleSheet","flatten","styles","text","bold","fontSize","propTypes","oneOfType","object","array","bool","node","defaultProps","Platform","select","android","regular","color","colors","black"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Text, StyleSheet, Platform } from 'react-native';\r\n\r\nimport { fonts, withTheme } from '../config';\r\nimport { patchWebProps } from '../helpers';\r\nimport normalize from '../helpers/normalizeText';\r\n\r\nconst TextElement = (props) => {\r\n  const {\r\n    style,\r\n    theme,\r\n    children,\r\n    h1,\r\n    h2,\r\n    h3,\r\n    h4,\r\n    h1Style,\r\n    h2Style,\r\n    h3Style,\r\n    h4Style,\r\n    ...rest\r\n  } = props;\r\n\r\n  return (\r\n    <Text\r\n      style={StyleSheet.flatten([\r\n        styles.text(theme),\r\n        style,\r\n        (h1 || h2 || h3 || h4) && styles.bold,\r\n        h1 && StyleSheet.flatten([{ fontSize: normalize(40) }, h1Style]),\r\n        h2 && StyleSheet.flatten([{ fontSize: normalize(34) }, h2Style]),\r\n        h3 && StyleSheet.flatten([{ fontSize: normalize(28) }, h3Style]),\r\n        h4 && StyleSheet.flatten([{ fontSize: normalize(22) }, h4Style]),\r\n      ])}\r\n      {...patchWebProps(rest)}\r\n    >\r\n      {children}\r\n    </Text>\r\n  );\r\n};\r\n\r\nTextElement.propTypes = {\r\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  h1: PropTypes.bool,\r\n  h2: PropTypes.bool,\r\n  h3: PropTypes.bool,\r\n  h4: PropTypes.bool,\r\n  h1Style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  h2Style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  h3Style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  h4Style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  children: PropTypes.node,\r\n};\r\n\r\nTextElement.defaultProps = {\r\n  h1: false,\r\n  h2: false,\r\n  h3: false,\r\n  h4: false,\r\n  style: {},\r\n  h1Style: {},\r\n  h2Style: {},\r\n  h3Style: {},\r\n  h4Style: {},\r\n  children: '',\r\n};\r\n\r\nconst styles = {\r\n  text: (theme) => ({\r\n    ...Platform.select({\r\n      android: {\r\n        ...fonts.android.regular,\r\n      },\r\n    }),\r\n    color: theme.colors.black,\r\n  }),\r\n  bold: {\r\n    ...Platform.select({\r\n      android: {\r\n        ...fonts.android.bold,\r\n      },\r\n    }),\r\n  },\r\n};\r\n\r\nexport { TextElement };\r\nexport default withTheme(TextElement, 'Text');\r\n"]},"metadata":{},"sourceType":"module"}