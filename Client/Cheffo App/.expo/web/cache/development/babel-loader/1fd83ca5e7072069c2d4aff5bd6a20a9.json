{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\asafs\\\\Desktop\\\\homeals\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { React, createContext, useState } from 'react';\nimport { Provider } from 'react-native-paper';\nimport { NavigationContainer, YellowBox } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { theme } from \"./core/theme\";\nimport { StartScreen, LoginScreen, RegisterScreen, ForgotPasswordScreen, Dashboard } from \"./screens\";\nvar Stack = createStackNavigator();\nexport var emailContext = createContext();\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: \"aa\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(emailContext.Provider, {\n        value: [email, setEmail],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 5\n        }\n      }, React.createElement(Provider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 5\n        }\n      }, React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"StartScreen\",\n        screenOptions: {\n          headerShown: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"StartScreen\",\n        component: StartScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"LoginScreen\",\n        component: LoginScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"RegisterScreen\",\n        component: RegisterScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Dashboard\",\n        component: Dashboard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"ForgotPasswordScreen\",\n        component: ForgotPasswordScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      })))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/asafs/Desktop/homeals/App.js"],"names":["React","createContext","useState","Provider","NavigationContainer","YellowBox","createStackNavigator","theme","StartScreen","LoginScreen","RegisterScreen","ForgotPasswordScreen","Dashboard","Stack","emailContext","App","state","email","setEmail","headerShown","Component"],"mappings":";;;;;;;;;;;AACA,SAAQA,KAAR,EAAgBC,aAAhB,EAA+BC,QAA/B,QAA8C,OAA9C;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,mBAAT,EAA8BC,SAA9B,QAA+C,0BAA/C;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,KAAT;AAIA,SACEC,WADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,oBAJF,EAKEC,SALF;AAQA,IAAMC,KAAK,GAAGP,oBAAoB,EAAlC;AAEA,OAAO,IAAMQ,YAAY,GAAGb,aAAa,EAAlC;;IAEDc,G;;;;;;;;;;;;;;;UAEJC,K,GAAM;AACJC,MAAAA,KAAK,EAAE;AADH,K;;;;;;6BAII;AAAC,aACT,oBAAC,YAAD,CAAc,QAAd;AAAuB,QAAA,KAAK,EAAE,CAACA,KAAD,EAAQC,QAAR,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEX,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,SAAP;AACE,QAAA,gBAAgB,EAAC,aADnB;AAEE,QAAA,aAAa,EAAE;AACbY,UAAAA,WAAW,EAAE;AADA,SAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,aAAnB;AAAiC,QAAA,SAAS,EAAEX,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,aAAnB;AAAiC,QAAA,SAAS,EAAEC,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,gBAAnB;AAAoC,QAAA,SAAS,EAAEC,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EASE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,WAAnB;AAA+B,QAAA,SAAS,EAAEE,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAUI,oBAAC,KAAD,CAAO,MAAP;AACA,QAAA,IAAI,EAAC,sBADL;AAEA,QAAA,SAAS,EAAED,oBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,CADF,CADF,CADA,CADS;AAsBT;;;;EA5BcX,KAAK,CAACoB,S;;AA+BxB,eAAeL,GAAf","sourcesContent":["//@refresh reset\nimport {React , createContext, useState} from 'react'\nimport { Provider } from 'react-native-paper'\nimport { NavigationContainer, YellowBox } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { theme } from './core/theme' \n\n\n\nimport {\n  StartScreen,\n  LoginScreen,\n  RegisterScreen,\n  ForgotPasswordScreen,\n  Dashboard,\n} from './screens' \n\nconst Stack = createStackNavigator()\n\nexport const emailContext = createContext();\n\nclass App extends React.Component {\n  /* const [email, setEmail] = useState('');  */\n  state={\n    email: \"aa\",\n  }\n\n  render () {return (\n    <emailContext.Provider value={[email, setEmail]}>\n    <Provider theme={theme}>\n      <NavigationContainer>\n        <Stack.Navigator\n          initialRouteName=\"StartScreen\"\n          screenOptions={{\n            headerShown: false,\n          }}\n        >\n          <Stack.Screen name=\"StartScreen\" component={StartScreen} />\n          <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\n          <Stack.Screen name=\"RegisterScreen\" component={RegisterScreen} />\n          <Stack.Screen name=\"Dashboard\" component={Dashboard} /> \n          { <Stack.Screen\n            name=\"ForgotPasswordScreen\"\n            component={ForgotPasswordScreen}\n          /> }\n        </Stack.Navigator>\n      </NavigationContainer>\n    </Provider>\n    </emailContext.Provider>\n  )}\n}\n\nexport default App ;\n\n"]},"metadata":{},"sourceType":"module"}