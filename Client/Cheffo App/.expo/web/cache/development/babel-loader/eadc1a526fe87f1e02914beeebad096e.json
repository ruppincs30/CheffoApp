{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\asafs\\\\Desktop\\\\homeals\\\\screens\\\\Dashboard.js\";\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Paragraph from \"../components/Paragraph\";\nimport Button from \"../components/Button\";\nimport { useUserContext } from \"../src/UserContext\";\nimport { SimpleLineIcons, AntDesign, Ionicons } from '@expo/vector-icons';\nimport { Divider } from 'react-native-elements';\nimport { black } from 'react-native-paper/lib/typescript/styles/colors';\n\nvar Dashboard = function Dashboard(_ref) {\n  var navigation = _ref.navigation;\n  var Tab = createMaterialBottomTabNavigator();\n\n  function Search() {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, \"Home!\"));\n  }\n\n  function MyOrders() {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"Home!\"));\n  }\n\n  function Profile() {\n    return React.createElement(Background, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: 'https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png'\n      },\n      style: {\n        width: 200,\n        height: 200,\n        borderRadius: 200 / 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      style: {\n        width: '100%',\n        paddingTop: 60,\n        paddingBottom: 60\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.profileText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, \"Asaf Sasson\"), React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }), \";\", React.createElement(Text, {\n      style: styles.profileText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, currentUser.email), React.createElement(Text, {\n      style: styles.profileText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"City\"), React.createElement(Text, {\n      style: styles.profileText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"0525551453\")), React.createElement(Button, {\n      mode: \"outlined\",\n      onPress: function onPress() {\n        return navigation.reset({\n          index: 0,\n          routes: [{\n            name: 'StartScreen'\n          }]\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Logout\"));\n  }\n\n  function fetchData() {\n    return _regeneratorRuntime.async(function fetchData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var _useUserContext = useUserContext(),\n      currentUser = _useUserContext.currentUser;\n\n  return React.createElement(Tab.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Search\",\n    component: Search,\n    options: {\n      tabBarIcon: function tabBarIcon() {\n        return React.createElement(AntDesign, {\n          name: \"search1\",\n          size: 20,\n          color: \"white\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"My Orders\",\n    component: MyOrders,\n    options: {\n      tabBarIcon: function tabBarIcon() {\n        return React.createElement(SimpleLineIcons, {\n          style: styles.tabIcon,\n          name: \"book-open\",\n          size: 20,\n          color: \"white\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Profile\",\n    component: Profile,\n    options: {\n      tabBarIcon: function tabBarIcon() {\n        return React.createElement(SimpleLineIcons, {\n          name: \"user\",\n          size: 20,\n          color: \"white\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  tabIcon: {\n    flex: 0,\n    paddingBottom: 10\n  },\n  profileText: {\n    fontSize: 23,\n    fontWeight: 'lighter'\n  }\n});\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/asafs/Desktop/homeals/screens/Dashboard.js"],"names":["React","NavigationContainer","createMaterialBottomTabNavigator","Background","Logo","Header","Paragraph","Button","useUserContext","SimpleLineIcons","AntDesign","Ionicons","Divider","black","Dashboard","navigation","Tab","Search","flex","justifyContent","alignItems","MyOrders","Profile","uri","width","height","borderRadius","paddingTop","paddingBottom","styles","profileText","currentUser","email","reset","index","routes","name","fetchData","tabBarIcon","tabIcon","StyleSheet","create","fontSize","fontWeight"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,gCAAT,QAAiD,wCAAjD;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP;AACA,SAASC,cAAT;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,oBAArD;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,KAAT,QAAsB,iDAAtB;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAEpC,MAAMC,GAAG,GAAGd,gCAAgC,EAA5C;;AACA,WAASe,MAAT,GAAkB;AAChB,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,cAAc,EAAE,QAA3B;AAAqCC,QAAAA,UAAU,EAAE;AAAjD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF;AAKD;;AACD,WAASC,QAAT,GAAoB;AAClB,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEH,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,cAAc,EAAE,QAA3B;AAAqCC,QAAAA,UAAU,EAAE;AAAjD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF;AAKD;;AAED,WAASE,OAAT,GAAmB;AACjB,WACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,KAAD;AACE,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE;AAAP,OADV;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE,GAAtB;AAA2BC,QAAAA,YAAY,EAAE,MAAM;AAA/C,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAOE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAC,MAAR;AAAeG,QAAAA,UAAU,EAAC,EAA1B;AAA6BC,QAAAA,aAAa,EAAC;AAA3C,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,OAGE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCC,WAAW,CAACC,KAA9C,CAHF,EAKE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAOE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,CAPF,EAiBE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,OAAO,EAAE;AAAA,eACPf,UAAU,CAACkB,KAAX,CAAiB;AACfC,UAAAA,KAAK,EAAE,CADQ;AAEfC,UAAAA,MAAM,EAAE,CAAC;AAAEC,YAAAA,IAAI,EAAE;AAAR,WAAD;AAFO,SAAjB,CADO;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,CADF;AA+BD;;AAED,WAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AApDoC,wBAsDZ7B,cAAc,EAtDF;AAAA,MAsD5BuB,WAtD4B,mBAsD5BA,WAtD4B;;AAyDpC,SACE,oBAAC,GAAD,CAAK,SAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,QAAjB;AAA0B,IAAA,SAAS,EAAEd,MAArC;AACE,IAAA,OAAO,EAAE;AACPqB,MAAAA,UAAU,EAAE;AAAA,eACV,oBAAC,SAAD;AAAW,UAAA,IAAI,EAAC,SAAhB;AAA0B,UAAA,IAAI,EAAE,EAAhC;AAAoC,UAAA,KAAK,EAAC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADU;AAAA;AADL,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,WAAjB;AAA6B,IAAA,SAAS,EAAEjB,QAAxC;AACE,IAAA,OAAO,EAAE;AACPiB,MAAAA,UAAU,EAAE;AAAA,eACV,oBAAC,eAAD;AAAiB,UAAA,KAAK,EAAET,MAAM,CAACU,OAA/B;AAAwC,UAAA,IAAI,EAAC,WAA7C;AAAyD,UAAA,IAAI,EAAE,EAA/D;AAAmE,UAAA,KAAK,EAAC,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADU;AAAA;AADL,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAeE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,SAAjB;AAA2B,IAAA,SAAS,EAAEjB,OAAtC;AACE,IAAA,OAAO,EAAE;AACPgB,MAAAA,UAAU,EAAE;AAAA,eACV,oBAAC,eAAD;AAAiB,UAAA,IAAI,EAAC,MAAtB;AAA6B,UAAA,IAAI,EAAE,EAAnC;AAAuC,UAAA,KAAK,EAAC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADU;AAAA;AADL,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AA0BD,CAnFD;;AAoFA,IAAMT,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,OAAO,EAAE;AACPrB,IAAAA,IAAI,EAAE,CADC;AAEPU,IAAAA,aAAa,EAAE;AAFR,GADsB;AAM/BE,EAAAA,WAAW,EAAE;AACXY,IAAAA,QAAQ,EAAE,EADC;AAEXC,IAAAA,UAAU,EAAE;AAFD;AANkB,CAAlB,CAAf;AAmBA,eAAe7B,SAAf","sourcesContent":["import * as React from 'react';\r\nimport { Text, View, StyleSheet, Image } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nimport Background from '../components/Background'\r\nimport Logo from '../components/Logo'\r\nimport Header from '../components/Header'\r\nimport Paragraph from '../components/Paragraph'\r\nimport Button from '../components/Button'\r\nimport { useUserContext } from \"../src/UserContext\"\r\nimport { SimpleLineIcons, AntDesign, Ionicons } from '@expo/vector-icons';\r\nimport { Divider } from 'react-native-elements';\r\nimport { black } from 'react-native-paper/lib/typescript/styles/colors';\r\n\r\n\r\nconst Dashboard = ({ navigation }) => {\r\n\r\n  const Tab = createMaterialBottomTabNavigator();\r\n  function Search() {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Text>Home!</Text>\r\n      </View>\r\n    );\r\n  }\r\n  function MyOrders() {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Text>Home!</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  function Profile() {\r\n    return (\r\n      <Background>\r\n        {/* <Logo /> */}\r\n        {/* <Header>{\"Hello \" + currentUser.email}</Header> */}\r\n        <Image\r\n          source={{ uri: 'https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png'}}\r\n          style={{ width: 200, height: 200, borderRadius: 200 / 2 }}\r\n        />\r\n        <View style={{ width:'100%',paddingTop:60,paddingBottom:60 }}>\r\n          <Text style={styles.profileText}>Asaf Sasson</Text>\r\n          <Divider></Divider>;\r\n          <Text style={styles.profileText}>{currentUser.email}</Text>\r\n          {/* <Divider style={styles.profileDivider}/> */}\r\n          <Text style={styles.profileText}>City</Text>\r\n          {/* <Divider style={styles.profileDivider}/> */}\r\n          <Text style={styles.profileText}>0525551453</Text>\r\n        </View>\r\n\r\n        <Button\r\n          mode=\"outlined\"\r\n          onPress={() =>\r\n            navigation.reset({\r\n              index: 0,\r\n              routes: [{ name: 'StartScreen' }],\r\n            })\r\n          }\r\n        >\r\n          Logout\r\n          </Button>\r\n      </Background>\r\n    );\r\n  }\r\n\r\n  async function fetchData() { }\r\n\r\n  const { currentUser } = useUserContext()\r\n\r\n\r\n  return (\r\n    <Tab.Navigator>\r\n      <Tab.Screen name=\"Search\" component={Search}\r\n        options={{\r\n          tabBarIcon: () => (\r\n            <AntDesign name=\"search1\" size={20} color=\"white\" />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen name=\"My Orders\" component={MyOrders}\r\n        options={{\r\n          tabBarIcon: () => (\r\n            <SimpleLineIcons style={styles.tabIcon} name=\"book-open\" size={20} color=\"white\" />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen name=\"Profile\" component={Profile}\r\n        options={{\r\n          tabBarIcon: () => (\r\n            <SimpleLineIcons name=\"user\" size={20} color=\"white\" />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  )\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n  tabIcon: {\r\n    flex: 0,\r\n    paddingBottom: 10,\r\n  },\r\n\r\n  profileText: {\r\n    fontSize: 23,\r\n    fontWeight: 'lighter',\r\n  },\r\n\r\n /*  profileDivider: {\r\n    backgroundColor: 'rgb(189 ,189 ,189)',\r\n    width: '100%',\r\n    margin: '15px',\r\n  } */\r\n\r\n})\r\n\r\nexport default Dashboard\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}