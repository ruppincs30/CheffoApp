{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport color from 'color';\nimport renderNode from \"./renderNode\";\nimport getIconType from \"./getIconType\";\nimport normalizeText from \"./normalizeText\";\nimport nodeType from \"./nodeType\";\nimport { ImageSourceType } from \"./types\";\nvar Screen = Dimensions.get('window');\nvar ScreenWidth = Screen.width;\nvar ScreenHeight = Screen.height;\nvar isIOS = Platform.OS === 'ios';\n\nvar conditionalStyle = function conditionalStyle(condition, style) {\n  return condition ? style : {};\n};\n\nexport var patchWebProps = function patchWebProps(_ref) {\n  var updateTheme = _ref.updateTheme,\n      replaceTheme = _ref.replaceTheme,\n      onClear = _ref.onClear,\n      rest = _objectWithoutProperties(_ref, [\"updateTheme\", \"replaceTheme\", \"onClear\"]);\n\n  return rest;\n};\nexport { renderNode, getIconType, normalizeText, nodeType, ScreenWidth, ScreenHeight, isIOS, conditionalStyle, color, ImageSourceType };","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/reactHomeals/node_modules/react-native-elements/src/helpers/index.js"],"names":["color","renderNode","getIconType","normalizeText","nodeType","ImageSourceType","Screen","Dimensions","get","ScreenWidth","width","ScreenHeight","height","isIOS","Platform","OS","conditionalStyle","condition","style","patchWebProps","updateTheme","replaceTheme","onClear","rest"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,aAAP;AACA,OAAOC,QAAP;AACA,SAASC,eAAT;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAf;AACA,IAAMC,WAAW,GAAGH,MAAM,CAACI,KAA3B;AACA,IAAMC,YAAY,GAAGL,MAAM,CAACM,MAA5B;AACA,IAAMC,KAAK,GAAGC,QAAQ,CAACC,EAAT,KAAgB,KAA9B;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,SAAD,EAAYC,KAAZ;AAAA,SAAuBD,SAAS,GAAGC,KAAH,GAAW,EAA3C;AAAA,CAAzB;;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAKvB;AAAA,MAJJC,WAII,QAJJA,WAII;AAAA,MAHJC,YAGI,QAHJA,YAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADDC,IACC;;AACJ,SAAOA,IAAP;AACD,CAPM;AASP,SACEtB,UADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,QAJF,EAKEK,WALF,EAMEE,YANF,EAOEE,KAPF,EAQEG,gBARF,EASEhB,KATF,EAUEK,eAVF","sourcesContent":["import { Platform, Dimensions } from 'react-native';\r\nimport color from 'color';\r\nimport renderNode from './renderNode';\r\nimport getIconType from './getIconType';\r\nimport normalizeText from './normalizeText';\r\nimport nodeType from './nodeType';\r\nimport { ImageSourceType } from './types';\r\n\r\nconst Screen = Dimensions.get('window');\r\nconst ScreenWidth = Screen.width;\r\nconst ScreenHeight = Screen.height;\r\nconst isIOS = Platform.OS === 'ios';\r\n\r\nconst conditionalStyle = (condition, style) => (condition ? style : {});\r\n\r\nexport const patchWebProps = ({\r\n  updateTheme,\r\n  replaceTheme,\r\n  onClear,\r\n  ...rest\r\n}) => {\r\n  return rest;\r\n};\r\n\r\nexport {\r\n  renderNode,\r\n  getIconType,\r\n  normalizeText,\r\n  nodeType,\r\n  ScreenWidth,\r\n  ScreenHeight,\r\n  isIOS,\r\n  conditionalStyle,\r\n  color,\r\n  ImageSourceType,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}