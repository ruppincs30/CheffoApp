{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shachar\\\\Desktop\\\\P\\\\reactHomeals\\\\components\\\\SearchSlider.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Slider } from 'react-native-elements';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { Component } from 'react';\n\nvar SearchSlider = function (_Component) {\n  _inherits(SearchSlider, _Component);\n\n  var _super = _createSuper(SearchSlider);\n\n  function SearchSlider(props) {\n    var _this;\n\n    _classCallCheck(this, SearchSlider);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      value: ''\n    };\n    return _this;\n  }\n\n  _createClass(SearchSlider, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'stretch',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      }, React.createElement(Slider, {\n        value: this.state.value,\n        onValueChange: function onValueChange(value) {\n          return _this2.setState({\n            value: value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }\n      }, \"Value: \", this.state.value)), \"// Replace Thumb with custom image\", React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'stretch',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      }, React.createElement(Slider, {\n        value: this.state.value,\n        onValueChange: function onValueChange(value) {\n          return _this2.setState({\n            value: value\n          });\n        },\n        thumbStyle: {\n          height: 40,\n          width: 40,\n          backgroundColor: 'transparent'\n        },\n        thumbProps: {\n          Component: Animated.Image,\n          source: {\n            uri: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }, \"Value: \", this.state.value)), \"; // Set Custom Children inside thumb\", React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'stretch',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, React.createElement(Slider, {\n        value: value,\n        onValueChange: setValue,\n        maximumValue: 50,\n        minimumValue: 20,\n        step: 1,\n        trackStyle: {\n          height: 10,\n          backgroundColor: 'transparent'\n        },\n        thumbStyle: {\n          height: 20,\n          width: 20,\n          backgroundColor: 'transparent'\n        },\n        thumbProps: {\n          children: React.createElement(Icon, {\n            name: \"heartbeat\",\n            type: \"font-awesome\",\n            size: 20,\n            reverse: true,\n            containerStyle: {\n              bottom: 20,\n              right: 20\n            },\n            color: \"#f50\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, \"Value: \", this.state.value)), \";\");\n    }\n  }]);\n\n  return SearchSlider;\n}(Component);\n\nexport { SearchSlider as default };","map":{"version":3,"sources":["C:/Users/Shachar/Desktop/P/reactHomeals/components/SearchSlider.js"],"names":["Slider","React","Component","SearchSlider","props","state","value","flex","alignItems","justifyContent","setState","height","width","backgroundColor","Animated","Image","source","uri","setValue","children","bottom","right"],"mappings":"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","sourcesContent":["import { Slider } from 'react-native-elements';\r\nimport { Animated, Text, View } from 'react-native';\r\nimport React, { Component } from 'react'\r\n\r\n\r\nexport default class SearchSlider extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n           value:'',\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <View>\r\n                <View style={{ flex: 1, alignItems: 'stretch', justifyContent: 'center' }}>\r\n                    <Slider\r\n                        value={this.state.value}\r\n                        onValueChange={(value) => this.setState({ value })}\r\n                    />\r\n                    <Text>Value: {this.state.value}</Text>\r\n                </View>\r\n\r\n                // Replace Thumb with custom image\r\n                <View style={{ flex: 1, alignItems: 'stretch', justifyContent: 'center' }}>\r\n                    <Slider\r\n                        value={this.state.value}\r\n                        onValueChange={(value) => this.setState({ value })}\r\n                        thumbStyle={{ height: 40, width: 40, backgroundColor: 'transparent' }}\r\n                        thumbProps={{\r\n                            Component: Animated.Image,\r\n                            source: {\r\n                                uri: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\r\n                            },\r\n                        }}\r\n                    />\r\n                    <Text>Value: {this.state.value}</Text>\r\n                </View>;\r\n\r\n                // Set Custom Children inside thumb\r\n                <View style={{ flex: 1, alignItems: 'stretch', justifyContent: 'center' }}>\r\n                    <Slider\r\n                        value={value}\r\n                        onValueChange={setValue}\r\n                        maximumValue={50}\r\n                        minimumValue={20}\r\n                        step={1}\r\n                        trackStyle={{ height: 10, backgroundColor: 'transparent' }}\r\n                        thumbStyle={{ height: 20, width: 20, backgroundColor: 'transparent' }}\r\n                        thumbProps={{\r\n                            children: (\r\n                                <Icon\r\n                                    name=\"heartbeat\"\r\n                                    type=\"font-awesome\"\r\n                                    size={20}\r\n                                    reverse\r\n                                    containerStyle={{ bottom: 20, right: 20 }}\r\n                                    color=\"#f50\"\r\n                                />\r\n                            ),\r\n                        }}\r\n                    />\r\n                    <Text>Value: {this.state.value}</Text>\r\n                </View>;\r\n            </View>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}