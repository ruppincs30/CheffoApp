{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\reactHomeals\\\\screens\\\\RegisterScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport fire from \"../fire\";\nimport { useUserContext } from \"../src/UserContext\";\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var userContext = useUserContext();\n\n  var _useUserContext = useUserContext(),\n      name = _useUserContext.name,\n      email = _useUserContext.email,\n      password = _useUserContext.password;\n\n  console.log(name + \" \" + email + \" \" + password);\n\n  var onSignUpPressed = function onSignUpPressed() {\n    var nameError = nameValidator(name.value);\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError || nameError) {\n      setName(_objectSpread(_objectSpread({}, name), {}, {\n        error: nameError\n      }));\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    }\n\n    navigation.reset({\n      index: 0,\n      routes: [{\n        name: 'Dashboard'\n      }]\n    });\n    handleSignup();\n  };\n\n  var handleSignup = function handleSignup() {\n    fire.auth().createUserWithEmailAndPassword(email.value, password.value).catch(function (err) {\n      switch (err.code) {\n        case \"auth/email-already-use\":\n        case \"auth/invalid-email\":\n          alert(err.message);\n          break;\n\n        case \"auth/weak-password\":\n          alert(\"weak password\");\n          console.log(err.message);\n          break;\n      }\n    });\n  };\n\n  useEffect(function () {\n    authListner();\n  }, []);\n  return React.createElement(Background, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    goBack: navigation.goBack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), React.createElement(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Create Account\"), React.createElement(TextInput, {\n    label: \"Name\",\n    returnKeyType: \"next\",\n    value: name.value,\n    onChangeText: function onChangeText(text) {\n      return setName({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!name.error,\n    errorText: name.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: handleSignup,\n    style: {\n      marginTop: 24\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Sign Up\"), React.createElement(View, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Already have an account? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.replace('LoginScreen');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"Login\"))));\n};\n\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/reactHomeals/screens/RegisterScreen.js"],"names":["React","useState","useEffect","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","nameValidator","fire","useUserContext","RegisterScreen","navigation","userContext","name","email","password","console","log","onSignUpPressed","nameError","value","emailError","passwordError","setName","error","setEmail","setPassword","reset","index","routes","handleSignup","auth","createUserWithEmailAndPassword","catch","err","code","alert","message","authListner","goBack","text","marginTop","styles","row","replace","link","StyleSheet","create","flexDirection","fontWeight","color","colors","primary"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { View, StyleSheet, TouchableOpacity } from 'react-native'\r\nimport { Text } from 'react-native-paper'\r\nimport Background from '../components/Background'\r\nimport Logo from '../components/Logo'\r\nimport Header from '../components/Header'\r\nimport Button from '../components/Button'\r\nimport TextInput from '../components/TextInput'\r\nimport BackButton from '../components/BackButton'\r\nimport { theme } from '../core/theme'\r\nimport { emailValidator } from '../helpers/emailValidator'\r\nimport { passwordValidator } from '../helpers/passwordValidator'\r\nimport { nameValidator } from '../helpers/nameValidator'\r\nimport fire from '../fire'\r\nimport { useUserContext } from \"../src/UserContext\"\r\n\r\nconst RegisterScreen = ({ navigation } ) => {\r\n  const userContext = useUserContext()\r\n  const {name , email , password} = useUserContext()\r\n  console.log(name + \" \"+ email +\" \" + password)\r\n\r\n  const onSignUpPressed = () => {\r\n    const nameError = nameValidator(name.value)\r\n    const emailError = emailValidator(email.value)\r\n    const passwordError = passwordValidator(password.value)\r\n    if (emailError || passwordError || nameError) {\r\n      setName({ ...name, error: nameError })\r\n      setEmail({ ...email, error: emailError })\r\n      setPassword({ ...password, error: passwordError })\r\n      return\r\n    }\r\n     navigation.reset({\r\n      index: 0,\r\n      routes: [{ name: 'Dashboard' }],\r\n    }) \r\n    handleSignup();\r\n  }\r\n\r\n  const handleSignup = () => {\r\n    fire\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email.value, password.value)\r\n      .catch(err => {\r\n        switch (err.code) {\r\n          case \"auth/email-already-use\":\r\n          case \"auth/invalid-email\":\r\n            alert(err.message);\r\n            break;\r\n          case \"auth/weak-password\":\r\n            \r\n            alert(\"weak password\");\r\n            console.log(err.message)\r\n            break;\r\n        }\r\n      });\r\n  };\r\n  /* \r\n  const authListner = () => {\r\n    fire.auth().onAuthStateChanged(user => {\r\n      if (user) { setUser(user); }\r\n      else { setUser(\"\"); }\r\n    })\r\n  } */\r\n  \r\n  useEffect(() => {\r\n    authListner();\r\n  }, []); \r\n\r\n \r\n  return (\r\n    <Background>\r\n      <BackButton goBack={navigation.goBack} />\r\n      <Logo />\r\n      <Header>Create Account</Header>\r\n     {  <TextInput\r\n        label=\"Name\"\r\n        returnKeyType=\"next\"\r\n        value={name.value}\r\n        onChangeText={(text) => setName({ value: text, error: '' })}\r\n        error={!!name.error}\r\n        errorText={name.error}\r\n      /> }\r\n      <TextInput\r\n        label=\"Email\"\r\n        returnKeyType=\"next\"\r\n        value={email.value}\r\n        onChangeText={(text) => setEmail({ value: text, error: '' })} \r\n        error={!!email.error}\r\n        errorText={email.error}\r\n        autoCapitalize=\"none\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n        keyboardType=\"email-address\"\r\n      />\r\n      <TextInput\r\n        label=\"Password\"\r\n        returnKeyType=\"done\"\r\n        value={password.value}\r\n        onChangeText={(text) => setPassword({ value: text, error: '' })} \r\n        error={!!password.error}\r\n        errorText={password.error}\r\n        secureTextEntry\r\n      />\r\n      <Button\r\n        mode=\"contained\"\r\n        onPress={handleSignup}\r\n        style={{ marginTop: 24 }}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n      <View style={styles.row}>\r\n        <Text>Already have an account? </Text>\r\n        <TouchableOpacity onPress={() => navigation.replace('LoginScreen')}>\r\n          <Text style={styles.link}>Login</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </Background>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 4,\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.primary,\r\n  },\r\n})\r\n\r\nexport default RegisterScreen\r\n"]},"metadata":{},"sourceType":"module"}