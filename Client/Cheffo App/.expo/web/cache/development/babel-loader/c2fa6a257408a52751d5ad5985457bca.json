{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shachar\\\\Desktop\\\\P\\\\reactHomeals\\\\helpers\\\\imagePicker.js\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport { Avatar, Card, Title, Paragraph, IconButton, Menu, Divider, Provider, Button } from 'react-native-paper';\nimport styles from \"./styles\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { AntDesign, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Camera } from 'expo-camera';\nimport React, { useState, useEffect } from 'react';\nexport default function App(props) {\n  var _this = this;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedImage = _React$useState2[0],\n      setSelectedImage = _React$useState2[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(Camera.Constants.Type.back),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      openCamera = _React$useState4[0],\n      setopenCamera = _React$useState4[1];\n\n  var openImagePickerAsync = function openImagePickerAsync() {\n    var permissionResult, pickerResult;\n    return _regeneratorRuntime.async(function openImagePickerAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 2:\n            permissionResult = _context.sent;\n\n            if (!(permissionResult.granted === false)) {\n              _context.next = 6;\n              break;\n            }\n\n            alert(\"Permission to access camera roll is required!\");\n            return _context.abrupt(\"return\");\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n          case 8:\n            pickerResult = _context.sent;\n            console.log(pickerResult);\n\n            if (!(pickerResult.cancelled === true)) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 12:\n            setSelectedImage({\n              localUri: pickerResult.uri\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context2.sent;\n              status = _await$Camera$request.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var startCamera = function startCamera() {\n    setopenCamera({\n      uri: \"1\"\n    });\n  };\n\n  var takePicture = function takePicture() {\n    var photo;\n    return _regeneratorRuntime.async(function takePicture$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            Vibration.vibrate();\n\n            if (!_this.camera) {\n              _context3.next = 8;\n              break;\n            }\n\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(_this.camera.takePictureAsync());\n\n          case 4:\n            photo = _context3.sent;\n            setSelectedImage({\n              localUri: photo.uri\n            });\n            _context3.next = 9;\n            break;\n\n          case 8:\n            alert(\"Camera isn't ready\");\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(AntDesign, {\n    style: styles.camera,\n    name: \"camerao\",\n    size: 40,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    style: styles.gallery,\n    name: \"image-plus\",\n    size: 40,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Shachar/Desktop/P/reactHomeals/helpers/imagePicker.js"],"names":["Avatar","Card","Title","Paragraph","IconButton","Menu","Divider","Provider","Button","styles","ImagePicker","AntDesign","MaterialCommunityIcons","Camera","React","useState","useEffect","App","props","selectedImage","setSelectedImage","hasPermission","setHasPermission","Constants","Type","back","type","setType","openCamera","setopenCamera","openImagePickerAsync","requestMediaLibraryPermissionsAsync","permissionResult","granted","alert","launchImageLibraryAsync","pickerResult","console","log","cancelled","localUri","uri","requestPermissionsAsync","status","startCamera","takePicture","Vibration","vibrate","camera","takePictureAsync","photo","gallery"],"mappings":"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","sourcesContent":["import { Image, StyleSheet, Text, TouchableOpacity, View, Vibration } from 'react-native'\r\nimport { Avatar, Card, Title, Paragraph, IconButton, Menu, Divider, Provider, Button } from 'react-native-paper';\r\nimport styles from './styles';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { AntDesign, MaterialCommunityIcons} from '@expo/vector-icons';\r\nimport { Camera } from 'expo-camera';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nexport default function App(props) {\r\n    const [selectedImage, setSelectedImage] = React.useState(null);\r\n    const [hasPermission, setHasPermission] = useState(null);\r\n    const [type, setType] = useState(Camera.Constants.Type.back);\r\n    const [openCamera, setopenCamera] = React.useState(null);\r\n\r\n\r\n\r\n    let openImagePickerAsync = async () => {\r\n        let permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n\r\n        if (permissionResult.granted === false) {\r\n            alert(\"Permission to access camera roll is required!\");\r\n            return;\r\n        }\r\n\r\n        let pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n        console.log(pickerResult);\r\n\r\n        if (pickerResult.cancelled === true) {\r\n            return;\r\n        }\r\n\r\n        setSelectedImage({ localUri: pickerResult.uri });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const { status } = await Camera.requestPermissionsAsync();\r\n            setHasPermission(status === 'granted');\r\n        })();\r\n    }, []);\r\n\r\n    let startCamera = () => {\r\n        setopenCamera({ uri: \"1\" });\r\n    }\r\n\r\n    const takePicture = async () => {\r\n        Vibration.vibrate();\r\n        if (this.camera) {\r\n            let photo = await this.camera.takePictureAsync();\r\n            setSelectedImage({ localUri: photo.uri });\r\n        }\r\n        else { alert(\"Camera isn't ready\") }\r\n\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <View >\r\n                {/*  <AntDesign\r\n                    style={styles.noteImg}\r\n                    name=\"picture\"\r\n                    size={50}\r\n                    color=\"rgb(0, 199, 80)\"\r\n                    title=\"Add Picture\"\r\n                    onPress={() => { openImagePickerAsync() }}\r\n                /> */}\r\n                <AntDesign style={styles.camera} name=\"camerao\" size={40} color=\"black\" />\r\n            </View>\r\n            <View >\r\n                <MaterialCommunityIcons style={styles.gallery} name=\"image-plus\" size={40} color=\"black\" />\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}