{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\asafs\\\\Documents\\\\github\\\\reactHomeals\\\\node_modules\\\\react-native-elements\\\\src\\\\tile\\\\Tile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { withTheme } from \"../config\";\nimport { ImageSourceType } from \"../helpers\";\nimport Image from \"../image/Image\";\nimport Text from \"../text/Text\";\nimport Icon from \"../icons/Icon\";\nimport FeaturedTile from \"./FeaturedTile\";\n\nvar Tile = function Tile(props) {\n  var featured = props.featured,\n      imageSrc = props.imageSrc,\n      icon = props.icon,\n      title = props.title,\n      children = props.children,\n      caption = props.caption,\n      titleStyle = props.titleStyle,\n      onPress = props.onPress,\n      activeOpacity = props.activeOpacity,\n      overlayContainerStyle = props.overlayContainerStyle,\n      captionStyle = props.captionStyle,\n      iconContainerStyle = props.iconContainerStyle,\n      imageContainerStyle = props.imageContainerStyle,\n      containerStyle = props.containerStyle,\n      contentContainerStyle = props.contentContainerStyle,\n      titleNumberOfLines = props.titleNumberOfLines,\n      ImageComponent = props.ImageComponent,\n      imageProps = props.imageProps,\n      attributes = _objectWithoutProperties(props, [\"featured\", \"imageSrc\", \"icon\", \"title\", \"children\", \"caption\", \"titleStyle\", \"onPress\", \"activeOpacity\", \"overlayContainerStyle\", \"captionStyle\", \"iconContainerStyle\", \"imageContainerStyle\", \"containerStyle\", \"contentContainerStyle\", \"titleNumberOfLines\", \"ImageComponent\", \"imageProps\"]);\n\n  var width = props.width,\n      _props$height = props.height,\n      height = _props$height === void 0 ? width * 0.8 : _props$height;\n\n  if (featured) {\n    var featuredProps = {\n      title: title,\n      icon: icon,\n      caption: caption,\n      imageSrc: imageSrc,\n      onPress: onPress,\n      activeOpacity: activeOpacity,\n      containerStyle: containerStyle,\n      imageContainerStyle: imageContainerStyle,\n      overlayContainerStyle: overlayContainerStyle,\n      titleStyle: titleStyle,\n      captionStyle: captionStyle,\n      width: width,\n      height: height,\n      imageProps: imageProps,\n      ImageComponent: ImageComponent\n    };\n    return React.createElement(FeaturedTile, _extends({}, featuredProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  return React.createElement(TouchableOpacity, _extends({}, attributes, {\n    onPress: onPress,\n    activeOpacity: activeOpacity,\n    style: StyleSheet.flatten([{\n      width: width,\n      height: height\n    }, containerStyle && containerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), React.createElement(ImageComponent, _extends({\n    resizeMode: \"cover\",\n    source: imageSrc,\n    containerStyle: StyleSheet.flatten([styles.imageContainer, imageContainerStyle && imageContainerStyle]),\n    style: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n      alignItems: 'center',\n      justifyContent: 'center'\n    })\n  }, imageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: StyleSheet.flatten([styles.iconContainer, iconContainerStyle && iconContainerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, icon && React.createElement(Icon, _extends({}, icon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 20\n    }\n  })))), React.createElement(View, {\n    style: StyleSheet.flatten([styles.contentContainer, contentContainerStyle && contentContainerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    testID: \"tileTitle\",\n    h4: !titleStyle || !titleStyle.fontSize,\n    style: StyleSheet.flatten([styles.text, titleStyle && titleStyle]),\n    numberOfLines: titleNumberOfLines,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, title), children));\n};\n\nTile.propTypes = {\n  title: PropTypes.string,\n  icon: PropTypes.object,\n  caption: PropTypes.node,\n  imageSrc: ImageSourceType,\n  onPress: PropTypes.func,\n  activeOpacity: PropTypes.number,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  imageContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  iconContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  overlayContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  captionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  featured: PropTypes.bool,\n  children: PropTypes.node,\n  contentContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  titleNumberOfLines: PropTypes.number,\n  imageProps: PropTypes.object,\n  ImageComponent: PropTypes.elementType\n};\nTile.defaultProps = {\n  width: Dimensions.get('window').width,\n  ImageComponent: Image,\n  imageProps: {}\n};\nvar styles = StyleSheet.create({\n  imageContainer: {\n    flex: 2\n  },\n  text: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    marginBottom: 5\n  },\n  contentContainer: {\n    paddingTop: 15,\n    paddingBottom: 5,\n    paddingLeft: 15,\n    paddingRight: 15\n  },\n  iconContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center'\n  }\n});\nexport { Tile };\nexport default withTheme(Tile, 'Tile');","map":{"version":3,"sources":["C:/Users/asafs/Documents/github/reactHomeals/node_modules/react-native-elements/src/tile/Tile.js"],"names":["React","PropTypes","withTheme","ImageSourceType","Image","Text","Icon","FeaturedTile","Tile","props","featured","imageSrc","icon","title","children","caption","titleStyle","onPress","activeOpacity","overlayContainerStyle","captionStyle","iconContainerStyle","imageContainerStyle","containerStyle","contentContainerStyle","titleNumberOfLines","ImageComponent","imageProps","attributes","width","height","featuredProps","StyleSheet","flatten","styles","imageContainer","absoluteFillObject","alignItems","justifyContent","iconContainer","contentContainer","fontSize","text","propTypes","string","object","node","func","number","oneOfType","array","bool","elementType","defaultProps","Dimensions","get","create","flex","backgroundColor","marginBottom","paddingTop","paddingBottom","paddingLeft","paddingRight","alignSelf"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { View, StyleSheet, Dimensions, TouchableOpacity } from 'react-native';\r\n\r\nimport { withTheme } from '../config';\r\nimport { ImageSourceType } from '../helpers';\r\n\r\nimport Image from '../image/Image';\r\nimport Text from '../text/Text';\r\nimport Icon from '../icons/Icon';\r\nimport FeaturedTile from './FeaturedTile';\r\n\r\nconst Tile = (props) => {\r\n  const {\r\n    featured,\r\n    imageSrc,\r\n    icon,\r\n    title,\r\n    children,\r\n    caption,\r\n    titleStyle,\r\n    onPress,\r\n    activeOpacity,\r\n    overlayContainerStyle,\r\n    captionStyle,\r\n    iconContainerStyle,\r\n    imageContainerStyle,\r\n    containerStyle,\r\n    contentContainerStyle,\r\n    titleNumberOfLines,\r\n    ImageComponent,\r\n    imageProps,\r\n    ...attributes\r\n  } = props;\r\n\r\n  const { width, height = width * 0.8 } = props;\r\n\r\n  if (featured) {\r\n    const featuredProps = {\r\n      title,\r\n      icon,\r\n      caption,\r\n      imageSrc,\r\n      onPress,\r\n      activeOpacity,\r\n      containerStyle,\r\n      imageContainerStyle,\r\n      overlayContainerStyle,\r\n      titleStyle,\r\n      captionStyle,\r\n      width,\r\n      height,\r\n      imageProps,\r\n      ImageComponent,\r\n    };\r\n    return <FeaturedTile {...featuredProps} />;\r\n  }\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      {...attributes}\r\n      onPress={onPress}\r\n      activeOpacity={activeOpacity}\r\n      style={StyleSheet.flatten([\r\n        {\r\n          width,\r\n          height,\r\n        },\r\n        containerStyle && containerStyle,\r\n      ])}\r\n    >\r\n      <ImageComponent\r\n        resizeMode=\"cover\"\r\n        source={imageSrc}\r\n        containerStyle={StyleSheet.flatten([\r\n          styles.imageContainer,\r\n          imageContainerStyle && imageContainerStyle,\r\n        ])}\r\n        style={{\r\n          ...StyleSheet.absoluteFillObject,\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n        {...imageProps}\r\n      >\r\n        <View\r\n          style={StyleSheet.flatten([\r\n            styles.iconContainer,\r\n            iconContainerStyle && iconContainerStyle,\r\n          ])}\r\n        >\r\n          {icon && <Icon {...icon} />}\r\n        </View>\r\n      </ImageComponent>\r\n\r\n      <View\r\n        style={StyleSheet.flatten([\r\n          styles.contentContainer,\r\n          contentContainerStyle && contentContainerStyle,\r\n        ])}\r\n      >\r\n        <Text\r\n          testID=\"tileTitle\"\r\n          h4={!titleStyle || !titleStyle.fontSize}\r\n          style={StyleSheet.flatten([styles.text, titleStyle && titleStyle])}\r\n          numberOfLines={titleNumberOfLines}\r\n        >\r\n          {title}\r\n        </Text>\r\n        {children}\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nTile.propTypes = {\r\n  title: PropTypes.string,\r\n  icon: PropTypes.object,\r\n  caption: PropTypes.node,\r\n  imageSrc: ImageSourceType,\r\n  onPress: PropTypes.func,\r\n  activeOpacity: PropTypes.number,\r\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  imageContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  iconContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  overlayContainerStyle: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.array,\r\n  ]),\r\n  titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  captionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n  featured: PropTypes.bool,\r\n  children: PropTypes.node,\r\n  contentContainerStyle: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.array,\r\n  ]),\r\n  titleNumberOfLines: PropTypes.number,\r\n  imageProps: PropTypes.object,\r\n  ImageComponent: PropTypes.elementType,\r\n};\r\n\r\nTile.defaultProps = {\r\n  width: Dimensions.get('window').width,\r\n  ImageComponent: Image,\r\n  imageProps: {},\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  imageContainer: {\r\n    flex: 2,\r\n  },\r\n  text: {\r\n    backgroundColor: 'rgba(0,0,0,0)',\r\n    marginBottom: 5,\r\n  },\r\n  contentContainer: {\r\n    paddingTop: 15,\r\n    paddingBottom: 5,\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  },\r\n  iconContainer: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    alignSelf: 'center',\r\n  },\r\n});\r\n\r\nexport { Tile };\r\nexport default withTheme(Tile, 'Tile');\r\n"]},"metadata":{},"sourceType":"module"}