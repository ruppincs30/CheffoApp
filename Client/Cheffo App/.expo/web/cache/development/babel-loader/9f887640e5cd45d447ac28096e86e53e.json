{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Shachar\\\\Desktop\\\\P\\\\reactHomeals\\\\screens\\\\RegisterScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, Component } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport { phoneValidator } from \"../helpers/phoneValidator\";\nimport { useUserContext } from \"../src/UserContext\";\nimport Constants from 'expo-constants';\nimport * as Location from 'expo-location';\nimport { Map } from 'ol';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  useEffect(function () {\n    getLocation();\n  }, [location]);\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstName = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastName = _useState4[0],\n      setLastName = _useState4[1];\n\n  var _useState5 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      phone = _useState10[0],\n      setPhone = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      location = _useState12[0],\n      setLocation = _useState12[1];\n\n  var _useState13 = useState({\n    value: ''\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      city = _useState14[0],\n      setCity = _useState14[1];\n\n  var userContext = useUserContext();\n\n  var _useUserContext = useUserContext(),\n      signup = _useUserContext.signup;\n\n  var onSignUpPressed = function onSignUpPressed() {\n    var firstNameError = nameValidator(firstName.value);\n    var lastNameError = nameValidator(lastName.value);\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n    var phoneError = phoneValidator(phone.value);\n\n    if (firstNameError || lastNameError || phoneError || emailError || passwordError) {\n      setFirstName(_objectSpread(_objectSpread({}, firstName), {}, {\n        error: firstNameError\n      }));\n      setLastName(_objectSpread(_objectSpread({}, lastName), {}, {\n        error: lastNameError\n      }));\n      setPhone(_objectSpread(_objectSpread({}, phone), {}, {\n        error: phoneError\n      }));\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    }\n\n    handleSignup();\n  };\n\n  var handleSignup = function handleSignup() {\n    var ok;\n    return _regeneratorRuntime.async(function handleSignup$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(signup(firstName.value, lastName.value, city, phone.value, email.value, password.value, location.lat, location.lon));\n\n          case 3:\n            ok = _context.sent;\n            console.log('hi');\n            console.log(ok);\n\n            if (ok) {\n              navigation.reset({\n                index: 0,\n                routes: [{\n                  name: 'LoginScreen'\n                }]\n              });\n            }\n\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            alert(\"Failed to create an account\");\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  var getLocation = function getLocation() {\n    var _await$Location$reque, status, currLocation;\n\n    return _regeneratorRuntime.async(function getLocation$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n          case 2:\n            _await$Location$reque = _context2.sent;\n            status = _await$Location$reque.status;\n\n            if (!(status !== 'granted')) {\n              _context2.next = 8;\n              break;\n            }\n\n            alert('You must enable location sharing to signup');\n            navigation.reset({\n              index: 0,\n              routes: [{\n                name: 'StartScreen'\n              }]\n            });\n            return _context2.abrupt(\"return\");\n\n          case 8:\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n          case 10:\n            currLocation = _context2.sent;\n            _context2.next = 13;\n            return _regeneratorRuntime.awrap(reverseGeocode(currLocation));\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var locationStr = function locationStr(json) {\n    var locStr = \"\";\n    console.log(json);\n\n    if (json.address.county) {\n      locStr = json.address.county;\n    }\n\n    if (json.address.city) {\n      locStr = json.address.city;\n    }\n\n    if (json.address.town) {\n      locStr = json.address.town;\n    }\n\n    if (json.address.village) {\n      locStr = json.address.village;\n    }\n\n    if (json.address.road) {\n      locStr += \", \" + json.address.road;\n    }\n\n    setCity(locStr);\n    console.log(locStr);\n  };\n\n  function reverseGeocode(currLocation) {\n    fetch('http://nominatim.openstreetmap.org/reverse?format=json&lon=' + currLocation.coords.longitude + '&lat=' + currLocation.coords.latitude + '&accept-language=en').then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      setLocation(json);\n      locationStr(json);\n    });\n  }\n\n  return React.createElement(Background, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    goBack: navigation.goBack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, \"Create Account\"), React.createElement(ScrollView, {\n    style: styles.scroll,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    label: \"First Name\",\n    returnKeyType: \"next\",\n    value: firstName.value,\n    onChangeText: function onChangeText(text) {\n      return setFirstName({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!firstName.error,\n    errorText: firstName.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 12\n    }\n  }), React.createElement(TextInput, {\n    label: \"Last Name\",\n    returnKeyType: \"next\",\n    value: lastName.value,\n    onChangeText: function onChangeText(text) {\n      return setLastName({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!lastName.error,\n    errorText: lastName.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 12\n    }\n  }), React.createElement(TextInput, {\n    label: \"Location\",\n    returnKeyType: \"next\",\n    value: location & city ? city : '',\n    editable: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 12\n    }\n  }), React.createElement(TextInput, {\n    label: \"Phone\",\n    returnKeyType: \"next\",\n    value: phone.value,\n    onChangeText: function onChangeText(text) {\n      return setPhone({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!phone.error,\n    errorText: phone.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 12\n    }\n  }), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: onSignUpPressed,\n    style: {\n      marginTop: 24\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, \"Sign Up\"), React.createElement(View, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, \" Already have an account? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.replace('LoginScreen');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 15\n    }\n  }, \"Login\"))))));\n};\n\nvar styles = StyleSheet.create({\n  scroll: {\n    width: '100%'\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"sources":["C:/Users/Shachar/Desktop/P/reactHomeals/screens/RegisterScreen.js"],"names":["React","useState","useEffect","Component","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","nameValidator","phoneValidator","useUserContext","Constants","Location","Map","TileLayer","OSM","ScrollView","RegisterScreen","navigation","getLocation","location","value","error","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","phone","setPhone","setLocation","city","setCity","userContext","signup","onSignUpPressed","firstNameError","lastNameError","emailError","passwordError","phoneError","handleSignup","lat","lon","ok","console","log","reset","index","routes","name","alert","requestPermissionsAsync","status","getCurrentPositionAsync","currLocation","reverseGeocode","locationStr","json","locStr","address","county","town","village","road","fetch","coords","longitude","latitude","then","response","goBack","styles","scroll","text","marginTop","row","replace","link","StyleSheet","create","width","flexDirection","fontWeight","color","colors","primary"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from 'react'\r\nimport { Platform, View, StyleSheet, TouchableOpacity, KeyboardAvoidingView } from 'react-native'\r\nimport { Text } from 'react-native-paper'\r\nimport Background from '../components/Background'\r\nimport Logo from '../components/Logo'\r\nimport Header from '../components/Header'\r\nimport Button from '../components/Button'\r\nimport TextInput from '../components/TextInput'\r\nimport BackButton from '../components/BackButton'\r\nimport { theme } from '../core/theme'\r\nimport { emailValidator } from '../helpers/emailValidator'\r\nimport { passwordValidator } from '../helpers/passwordValidator'\r\nimport { nameValidator } from '../helpers/nameValidator'\r\nimport { phoneValidator } from '../helpers/phoneValidator'\r\nimport { useUserContext } from \"../src/UserContext\"\r\nimport Constants from 'expo-constants';\r\nimport * as Location from 'expo-location';\r\nimport { Map } from 'ol';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport OSM from 'ol/source/OSM';\r\nimport { ScrollView } from 'react-native-gesture-handler'\r\n\r\nconst RegisterScreen = ({ navigation }) => {\r\n\r\n  useEffect(() => {\r\n    /*  const apiUrl = 'https://raw.githubusercontent.com/royts/israel-cities/master/israel-cities.json';\r\n     fetch(apiUrl)\r\n       .then((response) => response.json())\r\n       .then((data) => {\r\n         setCityData(data);\r\n       }) */\r\n    getLocation();\r\n  }, [location]);\r\n\r\n  const [firstName, setFirstName] = useState({ value: '', error: '' })\r\n  const [lastName, setLastName] = useState({ value: '', error: '' })\r\n  const [email, setEmail] = useState({ value: '', error: '' })\r\n  const [password, setPassword] = useState({ value: '', error: '' })\r\n  const [phone, setPhone] = useState({ value: '', error: '' })\r\n  const [location, setLocation] = useState('');\r\n  const [city, setCity] = useState({ value: '' })\r\n\r\n  const userContext = useUserContext()\r\n  const { signup } = useUserContext()\r\n\r\n  const onSignUpPressed = () => {\r\n    const firstNameError = nameValidator(firstName.value)\r\n    const lastNameError = nameValidator(lastName.value)\r\n    const emailError = emailValidator(email.value)\r\n    const passwordError = passwordValidator(password.value)\r\n    const phoneError = phoneValidator(phone.value)\r\n\r\n\r\n    if (firstNameError || lastNameError || phoneError || emailError || passwordError) {\r\n      setFirstName({ ...firstName, error: firstNameError })\r\n      setLastName({ ...lastName, error: lastNameError })\r\n      setPhone({ ...phone, error: phoneError })\r\n      setEmail({ ...email, error: emailError })\r\n      setPassword({ ...password, error: passwordError })\r\n      return\r\n    }\r\n    handleSignup();\r\n  }\r\n\r\n  const handleSignup = async () => {\r\n    try {\r\n      const ok = await signup(firstName.value, lastName.value, city, phone.value, email.value, password.value, location.lat, location.lon);\r\n      console.log('hi')\r\n      console.log(ok);\r\n      if (ok) {\r\n        navigation.reset({\r\n          index: 0,\r\n          routes: [{ name: 'LoginScreen' }],\r\n        })\r\n      }\r\n\r\n    } catch {\r\n      alert(\"Failed to create an account\")\r\n    }\r\n  };\r\n\r\n\r\n  const getLocation = async () => {\r\n    let { status } = await Location.requestPermissionsAsync();\r\n    if (status !== 'granted') {\r\n      alert('You must enable location sharing to signup');\r\n      navigation.reset({\r\n        index: 0,\r\n        routes: [{ name: 'StartScreen' }],\r\n      })\r\n      return;\r\n    }\r\n\r\n    let currLocation = await Location.getCurrentPositionAsync({});\r\n    await reverseGeocode(currLocation);\r\n  }\r\n\r\n\r\n  const locationStr = (json) => {\r\n    let locStr = \"\";\r\n    console.log(json);\r\n    if (json.address.county) {\r\n      locStr = json.address.county;\r\n    }\r\n    if (json.address.city) {\r\n      locStr = json.address.city;\r\n    }\r\n    if (json.address.town) {\r\n      locStr = json.address.town;\r\n    }\r\n    if (json.address.village) {\r\n      locStr = json.address.village;\r\n    }\r\n    if (json.address.road) {\r\n      locStr += \", \" + json.address.road;\r\n    }\r\n    setCity(locStr);\r\n    console.log(locStr);\r\n\r\n  }\r\n\r\n  function reverseGeocode(currLocation) {\r\n    fetch('http://nominatim.openstreetmap.org/reverse?format=json&lon=' + currLocation.coords.longitude + '&lat=' + currLocation.coords.latitude + '&accept-language=en')\r\n      .then(function (response) {\r\n        return response.json();\r\n      }).then(function (json) {\r\n        setLocation(json);\r\n        locationStr(json);\r\n      });\r\n  }\r\n  /*  if (errorMsg) {\r\n     text = errorMsg;\r\n   } else if (location) {\r\n     text = JSON.stringify(location);\r\n   } */\r\n\r\n  /* const authListner = () => {\r\n    fire.auth().onAuthStateChanged(user => {\r\n      if (user) { setUser(user); }\r\n      else { setUser(\"\"); }\r\n    })\r\n  }\r\n  \r\n  useEffect(() => {\r\n    authListner();\r\n  }, []); \r\n */\r\n\r\n  return (\r\n    <Background>\r\n      <BackButton goBack={navigation.goBack} />\r\n      <Header>Create Account</Header>\r\n      <ScrollView style={styles.scroll}>\r\n        <KeyboardAvoidingView>\r\n          {<TextInput\r\n            label=\"First Name\"\r\n            returnKeyType=\"next\"\r\n            value={firstName.value}\r\n            onChangeText={(text) => setFirstName({ value: text, error: '' })}\r\n            error={!!firstName.error}\r\n            errorText={firstName.error}\r\n          />}\r\n          {<TextInput\r\n            label=\"Last Name\"\r\n            returnKeyType=\"next\"\r\n            value={lastName.value}\r\n            onChangeText={(text) => setLastName({ value: text, error: '' })}\r\n            error={!!lastName.error}\r\n            errorText={lastName.error}\r\n          />}\r\n          {<TextInput\r\n            label=\"Location\"\r\n            returnKeyType=\"next\"\r\n            /* value={(location ? (location.address.road ? location.address.city + ', ' + location.address.road : location.address.city) : '')} */\r\n            value={((location & city) ? city : '')}\r\n            editable={false}\r\n          />}\r\n          {<TextInput\r\n            label=\"Phone\"\r\n            returnKeyType=\"next\"\r\n            value={phone.value}\r\n            onChangeText={(text) => setPhone({ value: text, error: '' })}\r\n            error={!!phone.error}\r\n            errorText={phone.error}\r\n          />}\r\n          <TextInput\r\n            label=\"Email\"\r\n            returnKeyType=\"next\"\r\n            value={email.value}\r\n            onChangeText={(text) => setEmail({ value: text, error: '' })}\r\n            error={!!email.error}\r\n            errorText={email.error}\r\n            autoCapitalize=\"none\"\r\n            autoCompleteType=\"email\"\r\n            textContentType=\"emailAddress\"\r\n            keyboardType=\"email-address\"\r\n          />\r\n          <TextInput\r\n            label=\"Password\"\r\n            returnKeyType=\"done\"\r\n            value={password.value}\r\n            onChangeText={(text) => setPassword({ value: text, error: '' })}\r\n            error={!!password.error}\r\n            errorText={password.error}\r\n            secureTextEntry\r\n          />\r\n          <Button\r\n            mode=\"contained\"\r\n            onPress={onSignUpPressed}\r\n            style={{ marginTop: 24 }}\r\n          >\r\n            Sign Up\r\n      </Button>\r\n          <View style={styles.row}>\r\n            <Text> Already have an account? </Text>\r\n            <TouchableOpacity onPress={() => navigation.replace('LoginScreen')}>\r\n              <Text style={styles.link}>Login</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </KeyboardAvoidingView>\r\n      </ScrollView>\r\n    </Background>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  scroll: {\r\n    width: '100%',\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 4,\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.primary,\r\n  },\r\n})\r\n\r\nexport default RegisterScreen\r\n"]},"metadata":{},"sourceType":"module"}