{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\asafs\\\\Desktop\\\\homeals\\\\screens\\\\LoginScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport fire from \"../fire\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var onLoginPressed = function onLoginPressed() {\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    }\n\n    handleLogin();\n  };\n\n  var handleLogin = function handleLogin() {\n    fire.auth().signInWithEmailAndPassword(email, password).catch(function (err) {\n      switch (err.code) {\n        case \"autu/invalid-email\":\n        case \"autu/user-disabled\":\n        case \"autu/user-not-found\":\n          setEmailError(err.massege);\n          break;\n\n        case \"autu/worng-password\":\n          setPasswordError(err.massege);\n          break;\n      }\n    });\n  };\n\n  var handleSingup = function handleSingup() {\n    fire.auth().signInWithEmailAndPassword(email, password).catch(function (err) {\n      switch (err.code) {\n        case \"autu/email-alredy-use\":\n        case \"autu/invalid-email\":\n          setEmailError(err.massege);\n          break;\n\n        case \"autu/weak-password\":\n          setPasswordError(err.massege);\n          break;\n      }\n    });\n  };\n\n  var handleLogout = function handleLogout() {\n    fire.auth().signOut();\n  };\n\n  var authListner = function authListner() {\n    fire.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        setUser(user);\n      }\n    });\n  };\n\n  return React.createElement(Background, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    goBack: navigation.goBack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), React.createElement(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Welcome back.\"), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.forgotPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('ForgotPasswordScreen');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.forgot,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"Forgot your password?\"))), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: onLoginPressed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, \"Login\"), React.createElement(View, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Don\\u2019t have an account? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.replace('RegisterScreen');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Sign up\"))));\n};\n\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["C:/Users/asafs/Desktop/homeals/screens/LoginScreen.js"],"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","fire","LoginScreen","navigation","value","error","user","setUser","email","setEmail","password","setPassword","onLoginPressed","emailError","passwordError","handleLogin","auth","signInWithEmailAndPassword","catch","err","code","setEmailError","massege","setPasswordError","handleSingup","handleLogout","signOut","authListner","onAuthStateChanged","goBack","text","styles","forgotPassword","navigate","forgot","row","replace","link","StyleSheet","create","width","alignItems","marginBottom","flexDirection","marginTop","fontSize","color","colors","secondary","fontWeight","primary"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,UAAP;AACA,SAASC,KAAT;AACA,SAASC,cAAT;AACA,SAASC,iBAAT;AACA,OAAOC,IAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBACdb,QAAQ,CAAC;AAAEc,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAAD,CADM;AAAA;AAAA,MAC/BC,IAD+B;AAAA,MACzBC,OADyB;;AAAA,mBAEZjB,QAAQ,CAAC;AAAEc,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAAD,CAFI;AAAA;AAAA,MAE/BG,KAF+B;AAAA,MAExBC,QAFwB;;AAAA,mBAGNnB,QAAQ,CAAC;AAAEc,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAAD,CAHF;AAAA;AAAA,MAG/BK,QAH+B;AAAA,MAGrBC,WAHqB;;AAKtC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAMC,UAAU,GAAGd,cAAc,CAACS,KAAK,CAACJ,KAAP,CAAjC;AACA,QAAMU,aAAa,GAAGd,iBAAiB,CAACU,QAAQ,CAACN,KAAV,CAAvC;;AACA,QAAIS,UAAU,IAAIC,aAAlB,EAAiC;AAC/BL,MAAAA,QAAQ,iCAAMD,KAAN;AAAaH,QAAAA,KAAK,EAAEQ;AAApB,SAAR;AACAF,MAAAA,WAAW,iCAAMD,QAAN;AAAgBL,QAAAA,KAAK,EAAES;AAAvB,SAAX;AACA;AACD;;AAKDC,IAAAA,WAAW;AAEZ,GAdD;;AAgBA,MAAMA,WAAW,GAAG,SAAdA,WAAc,GAAK;AACvBd,IAAAA,IAAI,CACDe,IADH,GAEGC,0BAFH,CAE8BT,KAF9B,EAEoCE,QAFpC,EAGGQ,KAHH,CAGS,UAAAC,GAAG,EAAG;AACX,cAAOA,GAAG,CAACC,IAAX;AACE,aAAK,oBAAL;AACA,aAAK,oBAAL;AACA,aAAK,qBAAL;AACEC,UAAAA,aAAa,CAACF,GAAG,CAACG,OAAL,CAAb;AACA;;AACA,aAAK,qBAAL;AACEC,UAAAA,gBAAgB,CAACJ,GAAG,CAACG,OAAL,CAAhB;AACF;AARJ;AAWD,KAfH;AAgBC,GAjBH;;AAmBG,MAAME,YAAY,GAAG,SAAfA,YAAe,GAAK;AACzBvB,IAAAA,IAAI,CACDe,IADH,GAEGC,0BAFH,CAE8BT,KAF9B,EAEoCE,QAFpC,EAGGQ,KAHH,CAGS,UAAAC,GAAG,EAAG;AACX,cAAOA,GAAG,CAACC,IAAX;AACE,aAAK,uBAAL;AACA,aAAK,oBAAL;AACEC,UAAAA,aAAa,CAACF,GAAG,CAACG,OAAL,CAAb;AACA;;AACA,aAAK,oBAAL;AACEC,UAAAA,gBAAgB,CAACJ,GAAG,CAACG,OAAL,CAAhB;AACF;AAPJ;AAUD,KAdH;AAeC,GAhBF;;AAkBC,MAAMG,YAAY,GAAG,SAAfA,YAAe,GAAK;AACxBxB,IAAAA,IAAI,CAACe,IAAL,GAAYU,OAAZ;AACD,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAK;AACvB1B,IAAAA,IAAI,CAACe,IAAL,GAAYY,kBAAZ,CAA+B,UAAAtB,IAAI,EAAG;AACpC,UAAGA,IAAH,EAAQ;AAACC,QAAAA,OAAO,CAACD,IAAD,CAAP;AAAe;AAEzB,KAHD;AAKD,GAND;;AAWJ,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEH,UAAU,CAAC0B,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,EAIE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,aAAa,EAAC,MAFhB;AAGE,IAAA,KAAK,EAAErB,KAAK,CAACJ,KAHf;AAIE,IAAA,YAAY,EAAE,sBAAC0B,IAAD;AAAA,aAAUrB,QAAQ,CAAC;AAAEL,QAAAA,KAAK,EAAE0B,IAAT;AAAezB,QAAAA,KAAK,EAAE;AAAtB,OAAD,CAAlB;AAAA,KAJhB;AAKE,IAAA,KAAK,EAAE,CAAC,CAACG,KAAK,CAACH,KALjB;AAME,IAAA,SAAS,EAAEG,KAAK,CAACH,KANnB;AAOE,IAAA,cAAc,EAAC,MAPjB;AAQE,IAAA,gBAAgB,EAAC,OARnB;AASE,IAAA,eAAe,EAAC,cATlB;AAUE,IAAA,YAAY,EAAC,eAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAgBE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,aAAa,EAAC,MAFhB;AAGE,IAAA,KAAK,EAAEK,QAAQ,CAACN,KAHlB;AAIE,IAAA,YAAY,EAAE,sBAAC0B,IAAD;AAAA,aAAUnB,WAAW,CAAC;AAAEP,QAAAA,KAAK,EAAE0B,IAAT;AAAezB,QAAAA,KAAK,EAAE;AAAtB,OAAD,CAArB;AAAA,KAJhB;AAKE,IAAA,KAAK,EAAE,CAAC,CAACK,QAAQ,CAACL,KALpB;AAME,IAAA,SAAS,EAAEK,QAAQ,CAACL,KANtB;AAOE,IAAA,eAAe,MAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAyBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE0B,MAAM,CAACC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAM7B,UAAU,CAAC8B,QAAX,CAAoB,sBAApB,CAAN;AAAA,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF,CADF,CAzBF,EAgCE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,WAAb;AAAyB,IAAA,OAAO,EAAEtB,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhCF,EAmCE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEmB,MAAM,CAACI,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMhC,UAAU,CAACiC,OAAX,CAAmB,gBAAnB,CAAN;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAFF,CAnCF,CADF;AA4CD,CArHD;;AAuHA,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,cAAc,EAAE;AACdQ,IAAAA,KAAK,EAAE,MADO;AAEdC,IAAAA,UAAU,EAAE,UAFE;AAGdC,IAAAA,YAAY,EAAE;AAHA,GADe;AAM/BP,EAAAA,GAAG,EAAE;AACHQ,IAAAA,aAAa,EAAE,KADZ;AAEHC,IAAAA,SAAS,EAAE;AAFR,GAN0B;AAU/BV,EAAAA,MAAM,EAAE;AACNW,IAAAA,QAAQ,EAAE,EADJ;AAENC,IAAAA,KAAK,EAAEhD,KAAK,CAACiD,MAAN,CAAaC;AAFd,GAVuB;AAc/BX,EAAAA,IAAI,EAAE;AACJY,IAAAA,UAAU,EAAE,MADR;AAEJH,IAAAA,KAAK,EAAEhD,KAAK,CAACiD,MAAN,CAAaG;AAFhB;AAdyB,CAAlB,CAAf;AAoBA,eAAehD,WAAf","sourcesContent":["import React, { useState } from 'react'\nimport { TouchableOpacity, StyleSheet, View } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport Background from '../components/Background'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport BackButton from '../components/BackButton'\nimport { theme } from '../core/theme'\nimport { emailValidator } from '../helpers/emailValidator'\nimport { passwordValidator } from '../helpers/passwordValidator'\nimport fire from '../fire'\n\nconst LoginScreen = ({ navigation }) => {\n  const [user, setUser] = useState({ value: '', error: '' })\n  const [email, setEmail] = useState({ value: '', error: '' })\n  const [password, setPassword] = useState({ value: '', error: '' })\n\n  const onLoginPressed = () => {\n    const emailError = emailValidator(email.value)\n    const passwordError = passwordValidator(password.value)\n    if (emailError || passwordError) {\n      setEmail({ ...email, error: emailError })\n      setPassword({ ...password, error: passwordError })\n      return\n    }\n   /*  navigation.reset({\n      index: 0,\n      routes: [{ name: 'Dashboard' }],\n    }) */\n    handleLogin();\n\n  }\n\n  const handleLogin = () =>{\n    fire\n      .auth()\n      .signInWithEmailAndPassword(email,password)\n      .catch(err =>{\n        switch(err.code){\n          case \"autu/invalid-email\":\n          case \"autu/user-disabled\":\n          case \"autu/user-not-found\":\n            setEmailError(err.massege)\n            break;\n            case \"autu/worng-password\":\n              setPasswordError(err.massege)\n            break;\n        }\n\n      });\n    };\n\n     const handleSingup = () =>{\n      fire\n        .auth()\n        .signInWithEmailAndPassword(email,password)\n        .catch(err =>{\n          switch(err.code){\n            case \"autu/email-alredy-use\":\n            case \"autu/invalid-email\":\n              setEmailError(err.massege)\n              break;\n              case \"autu/weak-password\":\n                setPasswordError(err.massege)\n              break;\n          }\n  \n        });\n      }; \n\n      const handleLogout = () =>{\n        fire.auth().signOut();\n      }\n\n      const authListner = () =>{\n        fire.auth().onAuthStateChanged(user =>{\n          if(user){setUser(user);}\n\n        })\n\n      }\n       \n\n   \n\n  return (\n    <Background>\n      <BackButton goBack={navigation.goBack} />\n      <Logo />\n      <Header>Welcome back.</Header>\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={(text) => setPassword({ value: text, error: '' })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n      />\n      <View style={styles.forgotPassword}>\n        <TouchableOpacity\n          onPress={() => navigation.navigate('ForgotPasswordScreen')}\n        >\n          <Text style={styles.forgot}>Forgot your password?</Text>\n        </TouchableOpacity>\n      </View>\n      <Button mode=\"contained\" onPress={onLoginPressed}>\n        Login\n      </Button>\n      <View style={styles.row}>\n        <Text>Don’t have an account? </Text>\n        <TouchableOpacity onPress={() => navigation.replace('RegisterScreen')}>\n          <Text style={styles.link}>Sign up</Text>\n        </TouchableOpacity>\n      </View>\n    </Background>\n  )\n}\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24,\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n})\n\nexport default LoginScreen\n"]},"metadata":{},"sourceType":"module"}