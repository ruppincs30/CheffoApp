{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\asafs\\\\Documents\\\\GitHub\\\\reactHomeals\\\\node_modules\\\\react-native-ratings\\\\src\\\\SwipeRating.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport times from 'lodash/times';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\n\nvar STAR_IMAGE = require(\"./images/star.png\");\n\nvar HEART_IMAGE = require(\"./images/heart.png\");\n\nvar ROCKET_IMAGE = require(\"./images/rocket.png\");\n\nvar BELL_IMAGE = require(\"./images/bell.png\");\n\nvar TYPES = {\n  star: {\n    source: STAR_IMAGE,\n    color: '#f1c40f',\n    backgroundColor: 'white'\n  },\n  heart: {\n    source: HEART_IMAGE,\n    color: '#e74c3c',\n    backgroundColor: 'white'\n  },\n  rocket: {\n    source: ROCKET_IMAGE,\n    color: '#2ecc71',\n    backgroundColor: 'white'\n  },\n  bell: {\n    source: BELL_IMAGE,\n    color: '#f39c12',\n    backgroundColor: 'white'\n  }\n};\n\nvar SwipeRating = function (_Component) {\n  _inherits(SwipeRating, _Component);\n\n  var _super = _createSuper(SwipeRating);\n\n  function SwipeRating(props) {\n    var _this;\n\n    _classCallCheck(this, SwipeRating);\n\n    _this = _super.call(this, props);\n    var _this$props = _this.props,\n        onStartRating = _this$props.onStartRating,\n        onFinishRating = _this$props.onFinishRating,\n        fractions = _this$props.fractions;\n    var position = new Animated.ValueXY();\n    var panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n        return true;\n      },\n      onPanResponderGrant: function onPanResponderGrant() {\n        if (typeof onStartRating === 'function') {\n          onStartRating();\n        }\n      },\n      onPanResponderMove: function onPanResponderMove(event, gesture) {\n        var newPosition = new Animated.ValueXY();\n        newPosition.setValue({\n          x: gesture.dx,\n          y: 0\n        });\n\n        if (_this.state.isComponentMounted) {\n          _this.setState({\n            position: newPosition,\n            value: gesture.dx\n          });\n        }\n      },\n      onPanResponderRelease: function onPanResponderRelease(event) {\n        var rating = _this.getCurrentRating(_this.state.value);\n\n        if (rating >= _this.props.minValue) {\n          if (!fractions) {\n            _this.setCurrentRating(rating);\n          }\n\n          if (typeof onFinishRating === 'function') onFinishRating(rating);\n        }\n      }\n    });\n    _this.state = {\n      panResponder: panResponder,\n      position: position,\n      display: false,\n      isComponentMounted: false\n    };\n    return _this;\n  }\n\n  _createClass(SwipeRating, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _STAR_IMAGE, _HEART_IMAGE, _ROCKET_IMAGE, _BELL_IMAGE;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(require(\"./images/star.png\"));\n\n            case 3:\n              _STAR_IMAGE = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(require(\"./images/heart.png\"));\n\n            case 6:\n              _HEART_IMAGE = _context.sent;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(require(\"./images/rocket.png\"));\n\n            case 9:\n              _ROCKET_IMAGE = _context.sent;\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(require(\"./images/bell.png\"));\n\n            case 12:\n              _BELL_IMAGE = _context.sent;\n              this.setState({\n                display: true,\n                isComponentMounted: true\n              });\n              _context.next = 19;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 19:\n              this.setCurrentRating(this.props.startingValue);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 16]], Promise);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.startingValue !== prevProps.startingValue) {\n        this.setCurrentRating(this.props.startingValue);\n      }\n    }\n  }, {\n    key: \"getPrimaryViewStyle\",\n    value: function getPrimaryViewStyle() {\n      var position = this.state.position;\n      var _this$props2 = this.props,\n          imageSize = _this$props2.imageSize,\n          ratingCount = _this$props2.ratingCount,\n          type = _this$props2.type;\n      var color = TYPES[type].color;\n      var width = position.x.interpolate({\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [0, ratingCount * imageSize / 2, ratingCount * imageSize],\n        extrapolate: 'clamp'\n      }, {\n        useNativeDriver: true\n      });\n      return {\n        backgroundColor: color,\n        width: width,\n        height: width ? imageSize : 0\n      };\n    }\n  }, {\n    key: \"getSecondaryViewStyle\",\n    value: function getSecondaryViewStyle() {\n      var position = this.state.position;\n      var _this$props3 = this.props,\n          imageSize = _this$props3.imageSize,\n          ratingCount = _this$props3.ratingCount,\n          type = _this$props3.type;\n      var backgroundColor = TYPES[type].backgroundColor;\n      var width = position.x.interpolate({\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [ratingCount * imageSize, ratingCount * imageSize / 2, 0],\n        extrapolate: 'clamp'\n      }, {\n        useNativeDriver: true\n      });\n      return {\n        backgroundColor: backgroundColor,\n        width: width,\n        height: width ? imageSize : 0\n      };\n    }\n  }, {\n    key: \"renderRatings\",\n    value: function renderRatings() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          imageSize = _this$props4.imageSize,\n          ratingCount = _this$props4.ratingCount,\n          type = _this$props4.type,\n          tintColor = _this$props4.tintColor;\n      var source = TYPES[type].source;\n      return times(ratingCount, function (index) {\n        return React.createElement(View, {\n          key: index,\n          style: styles.starContainer,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 7\n          }\n        }, React.createElement(Image, {\n          source: source,\n          style: {\n            width: imageSize,\n            height: imageSize,\n            tintColor: tintColor\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 9\n          }\n        }));\n      });\n    }\n  }, {\n    key: \"getCurrentRating\",\n    value: function getCurrentRating(value) {\n      var _this$props5 = this.props,\n          fractions = _this$props5.fractions,\n          imageSize = _this$props5.imageSize,\n          ratingCount = _this$props5.ratingCount;\n      var startingValue = ratingCount / 2;\n      var currentRating = this.props.minValue ? this.props.minValue : 0;\n\n      if (value > ratingCount * imageSize / 2) {\n        currentRating = ratingCount;\n      } else if (value < -ratingCount * imageSize / 2) {\n        currentRating = this.props.minValue ? this.props.minValue : 0;\n      } else if (value <= imageSize || value > imageSize) {\n        currentRating = startingValue + value / imageSize;\n        currentRating = !fractions ? Math.ceil(currentRating) : +currentRating.toFixed(fractions);\n      } else {\n        currentRating = !fractions ? Math.ceil(startingValue) : +startingValue.toFixed(fractions);\n      }\n\n      return currentRating;\n    }\n  }, {\n    key: \"setCurrentRating\",\n    value: function setCurrentRating(rating) {\n      var _this$props6 = this.props,\n          imageSize = _this$props6.imageSize,\n          ratingCount = _this$props6.ratingCount;\n      var initialRating = ratingCount / 2;\n      var value = null;\n\n      if (rating > ratingCount) {\n        value = ratingCount * imageSize / 2;\n      } else if (rating < 0) {\n        value = -ratingCount * imageSize / 2;\n      } else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n        value = (rating - initialRating) * imageSize;\n      } else {\n        value = 0;\n      }\n\n      var newPosition = new Animated.ValueXY();\n      newPosition.setValue({\n        x: value,\n        y: 0\n      });\n\n      if (this.state.isComponentMounted) {\n        this.setState({\n          position: newPosition,\n          value: value\n        });\n      }\n    }\n  }, {\n    key: \"displayCurrentRating\",\n    value: function displayCurrentRating() {\n      var _this$props7 = this.props,\n          ratingCount = _this$props7.ratingCount,\n          type = _this$props7.type,\n          readonly = _this$props7.readonly,\n          showReadOnlyText = _this$props7.showReadOnlyText,\n          ratingTextColor = _this$props7.ratingTextColor;\n      var color = ratingTextColor || TYPES[type].color;\n      return React.createElement(View, {\n        style: styles.showRatingView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.ratingView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: [styles.ratingText, {\n          color: color\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }\n      }, \"Rating:\", ' '), React.createElement(Text, {\n        style: [styles.currentRatingText, {\n          color: color\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }\n      }, this.getCurrentRating(this.state.value)), React.createElement(Text, {\n        style: [styles.maxRatingText, {\n          color: color\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }\n      }, \"/\", ratingCount)), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 9\n        }\n      }, readonly && showReadOnlyText && React.createElement(Text, {\n        style: [styles.readonlyLabel, {\n          color: color\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 48\n        }\n      }, \"(readonly)\")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          readonly = _this$props8.readonly,\n          type = _this$props8.type,\n          ratingImage = _this$props8.ratingImage,\n          ratingColor = _this$props8.ratingColor,\n          ratingBackgroundColor = _this$props8.ratingBackgroundColor,\n          style = _this$props8.style,\n          showRating = _this$props8.showRating;\n\n      if (type === 'custom') {\n        var custom = {\n          source: ratingImage,\n          color: ratingColor,\n          backgroundColor: ratingBackgroundColor\n        };\n        TYPES.custom = custom;\n      }\n\n      return this.state.display ? React.createElement(View, {\n        pointerEvents: readonly ? 'none' : 'auto',\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 7\n        }\n      }, showRating && this.displayCurrentRating(), React.createElement(View, _extends({\n        style: styles.starsWrapper\n      }, this.state.panResponder.panHandlers, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.starsInsideWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }\n      }, React.createElement(Animated.View, {\n        style: this.getPrimaryViewStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }\n      }), React.createElement(Animated.View, {\n        style: this.getSecondaryViewStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }\n      })), this.renderRatings())) : null;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setState({\n        isComponentMounted: false\n      });\n    }\n  }]);\n\n  return SwipeRating;\n}(Component);\n\nSwipeRating.defaultProps = {\n  type: 'star',\n  ratingImage: require(\"./images/star.png\"),\n  ratingColor: '#f1c40f',\n  ratingBackgroundColor: 'white',\n  ratingCount: 5,\n  showReadOnlyText: true,\n  imageSize: 40,\n  minValue: 0\n};\nexport { SwipeRating as default };\nvar styles = StyleSheet.create({\n  starsWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  starsInsideWrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  showRatingView: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingText: {\n    fontSize: 15,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  },\n  readonlyLabel: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495a'\n  },\n  currentRatingText: {\n    fontSize: 30,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null\n  },\n  maxRatingText: {\n    fontSize: 18,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  }\n});\n\nvar fractionsType = function fractionsType(props, propName, componentName) {\n  if (props[propName]) {\n    var value = props[propName];\n\n    if (typeof value === 'number') {\n      return value >= 0 && value <= 20 ? null : new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be between 0 and 20\");\n    }\n\n    return new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be a number\");\n  }\n};\n\nSwipeRating.propTypes = {\n  type: PropTypes.string,\n  ratingImage: PropTypes.node,\n  ratingColor: PropTypes.string,\n  ratingBackgroundColor: PropTypes.string,\n  ratingCount: PropTypes.number,\n  ratingTextColor: PropTypes.string,\n  imageSize: PropTypes.number,\n  onStartRating: PropTypes.func,\n  onFinishRating: PropTypes.func,\n  showRating: PropTypes.bool,\n  style: PropTypes.object,\n  readonly: PropTypes.bool,\n  showReadOnlyText: PropTypes.bool,\n  startingValue: PropTypes.number,\n  fractions: fractionsType,\n  minValue: PropTypes.number\n};","map":{"version":3,"sources":["C:/Users/asafs/Documents/GitHub/reactHomeals/node_modules/react-native-ratings/src/SwipeRating.js"],"names":["React","Component","times","PropTypes","STAR_IMAGE","require","HEART_IMAGE","ROCKET_IMAGE","BELL_IMAGE","TYPES","star","source","color","backgroundColor","heart","rocket","bell","SwipeRating","props","onStartRating","onFinishRating","fractions","position","Animated","ValueXY","panResponder","PanResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","onPanResponderMove","event","gesture","newPosition","setValue","x","dx","y","state","isComponentMounted","setState","value","onPanResponderRelease","rating","getCurrentRating","minValue","setCurrentRating","display","console","log","startingValue","prevProps","imageSize","ratingCount","type","width","interpolate","inputRange","outputRange","extrapolate","useNativeDriver","height","tintColor","index","styles","starContainer","currentRating","Math","ceil","toFixed","initialRating","readonly","showReadOnlyText","ratingTextColor","showRatingView","ratingView","ratingText","currentRatingText","maxRatingText","readonlyLabel","ratingImage","ratingColor","ratingBackgroundColor","style","showRating","custom","displayCurrentRating","starsWrapper","panHandlers","starsInsideWrapper","getPrimaryViewStyle","getSecondaryViewStyle","renderRatings","defaultProps","StyleSheet","flexDirection","justifyContent","alignItems","top","left","right","bottom","paddingBottom","fontSize","textAlign","fontFamily","Platform","OS","fractionsType","propName","componentName","Error","propTypes","string","node","number","func","bool","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport times from 'lodash/times';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  View, Text, Animated, PanResponder, Image,\r\n  StyleSheet, Platform\r\n} from 'react-native';\r\n\r\n// RATING IMAGES WITH STATIC BACKGROUND COLOR (white)\r\nconst STAR_IMAGE = require('./images/star.png');\r\nconst HEART_IMAGE = require('./images/heart.png');\r\nconst ROCKET_IMAGE = require('./images/rocket.png');\r\nconst BELL_IMAGE = require('./images/bell.png');\r\n\r\nconst TYPES = {\r\n  star: {\r\n    source: STAR_IMAGE,\r\n    color: '#f1c40f',\r\n    backgroundColor: 'white'\r\n  },\r\n  heart: {\r\n    source: HEART_IMAGE,\r\n    color: '#e74c3c',\r\n    backgroundColor: 'white'\r\n  },\r\n  rocket: {\r\n    source: ROCKET_IMAGE,\r\n    color: '#2ecc71',\r\n    backgroundColor: 'white'\r\n  },\r\n  bell: {\r\n    source: BELL_IMAGE,\r\n    color: '#f39c12',\r\n    backgroundColor: 'white'\r\n  }\r\n};\r\n\r\nexport default class SwipeRating extends Component {\r\n  static defaultProps = {\r\n    type: 'star',\r\n    ratingImage: require('./images/star.png'),\r\n    ratingColor: '#f1c40f',\r\n    ratingBackgroundColor: 'white',\r\n    ratingCount: 5,\r\n    showReadOnlyText: true,\r\n    imageSize: 40,\r\n    minValue: 0\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const { onStartRating, onFinishRating, fractions } = this.props;\r\n    const position = new Animated.ValueXY();\r\n\r\n    const panResponder = PanResponder.create({\r\n      onStartShouldSetPanResponder: () => true,\r\n      onPanResponderGrant: () => {\r\n        if (typeof onStartRating === 'function') {\r\n          onStartRating();\r\n        }\r\n      },\r\n      onPanResponderMove: (event, gesture) => {\r\n        const newPosition = new Animated.ValueXY();\r\n        newPosition.setValue({ x: gesture.dx, y: 0 });\r\n        if (this.state.isComponentMounted) {\r\n          this.setState({position: newPosition, value: gesture.dx});\r\n        }\r\n      },\r\n      onPanResponderRelease: event => {\r\n        const rating = this.getCurrentRating(this.state.value);\r\n        if (rating >= this.props.minValue) {\r\n          if (!fractions) {\r\n            // 'round up' to the nearest rating image\r\n            this.setCurrentRating(rating);\r\n          }\r\n          if (typeof onFinishRating === 'function') onFinishRating(rating);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.state = { panResponder, position, display: false, isComponentMounted: false };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const STAR_IMAGE = await require('./images/star.png');\r\n      const HEART_IMAGE = await require('./images/heart.png');\r\n      const ROCKET_IMAGE = await require('./images/rocket.png');\r\n      const BELL_IMAGE = await require('./images/bell.png');\r\n\r\n      this.setState({ display: true, isComponentMounted: true });\r\n    } catch(err) {\r\n      console.log(err)\r\n    }\r\n\r\n    this.setCurrentRating(this.props.startingValue);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.startingValue !== prevProps.startingValue) {\r\n      this.setCurrentRating(this.props.startingValue);\r\n    }\r\n  }\r\n\r\n  getPrimaryViewStyle() {\r\n    const { position } = this.state;\r\n    const { imageSize, ratingCount, type } = this.props;\r\n\r\n    const color = TYPES[type].color;\r\n\r\n    const width = position.x.interpolate(\r\n      {\r\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\r\n        outputRange: [0, (ratingCount * imageSize) / 2, ratingCount * imageSize],\r\n        extrapolate: 'clamp'\r\n      },\r\n      {\r\n        useNativeDriver: true\r\n      }\r\n    );\r\n\r\n    return {\r\n      backgroundColor: color,\r\n      width,\r\n      height: width ? imageSize : 0\r\n    };\r\n  }\r\n\r\n  getSecondaryViewStyle() {\r\n    const { position } = this.state;\r\n    const { imageSize, ratingCount, type } = this.props;\r\n\r\n    const backgroundColor = TYPES[type].backgroundColor;\r\n\r\n    const width = position.x.interpolate(\r\n      {\r\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\r\n        outputRange: [ratingCount * imageSize, (ratingCount * imageSize) / 2, 0],\r\n        extrapolate: 'clamp'\r\n      },\r\n      {\r\n        useNativeDriver: true\r\n      }\r\n    );\r\n\r\n    return {\r\n      backgroundColor,\r\n      width,\r\n      height: width ? imageSize : 0\r\n    };\r\n  }\r\n\r\n  renderRatings() {\r\n    const { imageSize, ratingCount, type, tintColor } = this.props;\r\n    const source = TYPES[type].source;\r\n\r\n    return times(ratingCount, index => (\r\n      <View key={index} style={styles.starContainer}>\r\n        <Image source={source} style={{ width: imageSize, height: imageSize, tintColor }} />\r\n      </View>\r\n    ));\r\n  }\r\n\r\n  getCurrentRating(value) {\r\n    // const { value } = this.state;\r\n    const { fractions, imageSize, ratingCount } = this.props;\r\n\r\n    const startingValue = ratingCount / 2;\r\n    let currentRating = (this.props.minValue) ? this.props.minValue : 0;\r\n\r\n    if (value > (ratingCount * imageSize) / 2) {\r\n      currentRating = ratingCount;\r\n    } else if (value < (-ratingCount * imageSize) / 2) {\r\n      currentRating = (this.props.minValue) ? this.props.minValue : 0;\r\n    } else if (value <= imageSize || value > imageSize) {\r\n      currentRating = startingValue + value / imageSize;\r\n      currentRating = !fractions ? Math.ceil(currentRating) : +currentRating.toFixed(fractions);\r\n    } else {\r\n      currentRating = !fractions ? Math.ceil(startingValue) : +startingValue.toFixed(fractions);\r\n    }\r\n\r\n    return currentRating;\r\n  }\r\n\r\n  setCurrentRating(rating) {\r\n    const { imageSize, ratingCount } = this.props;\r\n\r\n    // `initialRating` corresponds to `startingValue` in the getter. Naming it\r\n    // differently here avoids confusion with `value` below.\r\n    const initialRating = ratingCount / 2;\r\n    let value = null;\r\n\r\n    if (rating > ratingCount) {\r\n      value = (ratingCount * imageSize) / 2;\r\n    } else if (rating < 0) {\r\n      value = (-ratingCount * imageSize) / 2;\r\n    } else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\r\n      value = (rating - initialRating) * imageSize;\r\n    } else {\r\n      value = 0;\r\n    }\r\n\r\n    const newPosition = new Animated.ValueXY();\r\n    newPosition.setValue({ x: value, y: 0 });\r\n    if (this.state.isComponentMounted) {\r\n      this.setState({position: newPosition, value});\r\n    }\r\n  }\r\n\r\n  displayCurrentRating() {\r\n    const { ratingCount, type, readonly, showReadOnlyText, ratingTextColor } = this.props;\r\n    const color = ratingTextColor || TYPES[type].color;\r\n\r\n    return (\r\n      <View style={styles.showRatingView}>\r\n        <View style={styles.ratingView}>\r\n          <Text style={[styles.ratingText, { color }]}>Rating:{' '}</Text>\r\n          <Text style={[styles.currentRatingText, { color }]}>{this.getCurrentRating(this.state.value)}</Text>\r\n          <Text style={[styles.maxRatingText, { color }]}>/{ratingCount}</Text>\r\n        </View>\r\n        <View>{readonly && showReadOnlyText && <Text style={[styles.readonlyLabel, { color }]}>(readonly)</Text>}</View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { readonly, type, ratingImage, ratingColor, ratingBackgroundColor, style, showRating } = this.props;\r\n\r\n    if (type === 'custom') {\r\n      let custom = {\r\n        source: ratingImage,\r\n        color: ratingColor,\r\n        backgroundColor: ratingBackgroundColor\r\n      };\r\n      TYPES.custom = custom;\r\n    }\r\n\r\n    return (\r\n      this.state.display ?\r\n      <View pointerEvents={readonly ? 'none' : 'auto'} style={style}>\r\n        {showRating && this.displayCurrentRating()}\r\n        <View style={styles.starsWrapper} {...this.state.panResponder.panHandlers}>\r\n          <View style={styles.starsInsideWrapper}>\r\n            <Animated.View style={this.getPrimaryViewStyle()} />\r\n            <Animated.View style={this.getSecondaryViewStyle()} />\r\n          </View>\r\n          {this.renderRatings()}\r\n        </View>\r\n      </View> :\r\n      null\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({ isComponentMounted: false });\r\n  }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  starsWrapper: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  starsInsideWrapper: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  showRatingView: {\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingBottom: 5\r\n  },\r\n  ratingView: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingBottom: 5\r\n  },\r\n  ratingText: {\r\n    fontSize: 15,\r\n    textAlign: 'center',\r\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\r\n    color: '#34495e'\r\n  },\r\n  readonlyLabel: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    fontSize: 12,\r\n    textAlign: 'center',\r\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\r\n    color: '#34495a'\r\n  },\r\n  currentRatingText: {\r\n    fontSize: 30,\r\n    textAlign: 'center',\r\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null\r\n  },\r\n  maxRatingText: {\r\n    fontSize: 18,\r\n    textAlign: 'center',\r\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\r\n    color: '#34495e'\r\n  }\r\n});\r\n\r\nconst fractionsType = (props, propName, componentName) => {\r\n  if (props[propName]) {\r\n    const value = props[propName];\r\n    if (typeof value === 'number') {\r\n      return value >= 0 && value <= 20\r\n        ? null\r\n        : new Error(`\\`${propName}\\` in \\`${componentName}\\` must be between 0 and 20`);\r\n    }\r\n\r\n    return new Error(`\\`${propName}\\` in \\`${componentName}\\` must be a number`);\r\n  }\r\n};\r\n\r\nSwipeRating.propTypes = {\r\n  type: PropTypes.string,\r\n  ratingImage: PropTypes.node,\r\n  ratingColor: PropTypes.string,\r\n  ratingBackgroundColor: PropTypes.string,\r\n  ratingCount: PropTypes.number,\r\n  ratingTextColor: PropTypes.string,\r\n  imageSize: PropTypes.number,\r\n  onStartRating: PropTypes.func,\r\n  onFinishRating: PropTypes.func,\r\n  showRating: PropTypes.bool,\r\n  style: PropTypes.object,\r\n  readonly: PropTypes.bool,\r\n  showReadOnlyText: PropTypes.bool,\r\n  startingValue: PropTypes.number,\r\n  fractions: fractionsType,\r\n  minValue: PropTypes.number\r\n};\r\n"]},"metadata":{},"sourceType":"module"}