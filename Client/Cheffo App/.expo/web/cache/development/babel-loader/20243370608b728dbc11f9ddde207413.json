{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\reactHomeals\\\\screens\\\\Dashboard.js\";\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport Background from \"../components/Background\";\nimport Button from \"../components/Button\";\nimport { useUserContext } from \"../src/UserContext\";\nimport { SimpleLineIcons, AntDesign, Ionicons, Feather, MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\nimport { Divider, Slider } from 'react-native-elements';\nimport TextInput from \"../components/TextInput\";\nimport RestaurantCard from \"../components/RestaurantCard\";\nimport OrderCard from \"../components/OrderCard\";\nimport SearchSlider from \"../components/SearchSlider\";\nimport { getDistanceFromLatLonInKm } from \"../helpers/calcDis\";\nimport ImagePicker from \"../helpers/ImagePicker\";\nimport { degreesToStringHDMS } from 'ol/coordinate';\nimport CircleButton from 'react-native-circle-floatmenu';\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\n\nvar Dashboard = function Dashboard(_ref) {\n  var navigation = _ref.navigation;\n  var userContext = useUserContext();\n  var Tab = createMaterialBottomTabNavigator();\n\n  var _useUserContext = useUserContext(),\n      currentUser = _useUserContext.currentUser,\n      Logout = _useUserContext.Logout,\n      chefsArr = _useUserContext.chefsArr,\n      selectedChef = _useUserContext.selectedChef,\n      currentChefDishes = _useUserContext.currentChefDishes,\n      setCurrentChefDishes = _useUserContext.setCurrentChefDishes,\n      selectedImage = _useUserContext.selectedImage,\n      sliderValue = _useUserContext.sliderValue,\n      orders = _useUserContext.orders,\n      getOrders = _useUserContext.getOrders,\n      setCart = _useUserContext.setCart,\n      getFireStoreImg = _useUserContext.getFireStoreImg,\n      connectionsArr = _useUserContext.connectionsArr,\n      getConnections = _useUserContext.getConnections,\n      setFriendsArr = _useUserContext.setFriendsArr;\n\n  useEffect(function () {\n    if (currentChefDishes) {\n      navigation.navigate('DishesScreen');\n    }\n  }, [currentChefDishes]);\n  useEffect(function _callee() {\n    var connections, fetchConnections;\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            fetchConnections = function _fetchConnections() {\n              return _regeneratorRuntime.async(function fetchConnections$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      console.log('123');\n                      getConnections(currentUser.uid);\n                      console.log('456');\n\n                    case 3:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            };\n\n            connections = [];\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(fetchConnections());\n\n          case 4:\n            console.log(connections);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  function Search() {\n    var _this2 = this;\n\n    return React.createElement(ScrollView, {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: {\n        backgroundColor: 'rgb(240, 240, 240)',\n        alignItems: 'center',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: {\n        marginTop: '5%',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, React.createElement(SearchSlider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }))), React.createElement(View, {\n      style: {\n        marginTop: \"5%\",\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, chefsArr.map(function (item, key) {\n      return sliderValue > item.DisFromUser ? React.createElement(RestaurantCard, {\n        name: item.DisplayName,\n        img: item.Img,\n        city: item.Address,\n        rating: item.Rating,\n        foodType: item.FoodType,\n        key: key,\n        onPress: function _callee2() {\n          return _regeneratorRuntime.async(function _callee2$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  selectedChef(item.Email);\n                  setCart([]);\n\n                case 2:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }) : null;\n    })));\n  }\n\n  function MyOrders() {\n    var _this3 = this;\n\n    return React.createElement(View, {\n      style: {\n        marginTop: \"10%\",\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'sans-serif-light',\n        color: \"#3ec92d\",\n        fontSize: 22\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, \"My Orders\"), React.createElement(ScrollView, {\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: {\n        marginTop: \"5%\",\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, orders.map(function (item, key) {\n      return React.createElement(OrderCard, {\n        key: key,\n        name: item.Chef,\n        desc: item.OrderDescription,\n        date: item.OrderTime,\n        price: item.TotalPrice,\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }\n      });\n    }))));\n  }\n\n  function Feed() {\n    return React.createElement(View, {\n      style: {\n        marginTop: \"10%\",\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'sans-serif-light',\n        color: \"#3ec92d\",\n        fontSize: 22\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, \"My Network\"));\n  }\n\n  function Friends() {\n    return React.createElement(View, {\n      style: {\n        marginTop: \"10%\",\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'sans-serif-light',\n        color: \"#3ec92d\",\n        fontSize: 22\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, \"Friends\"), React.createElement(ScrollView, {\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function Profile() {\n    return React.createElement(Background, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, React.createElement(Button, {\n      style: {\n        marginLeft: 280\n      },\n      onPress: function onPress() {\n        return navigation.reset({\n          index: 0,\n          routes: [{\n            name: 'StartScreen'\n          }]\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }), React.createElement(Image, {\n      source: {\n        uri: currentUser.img\n      },\n      style: {\n        width: 200,\n        height: 200,\n        borderRadius: 200 / 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }), React.createElement(ImagePicker, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      style: {\n        width: '100%',\n        paddingTop: 60,\n        paddingBottom: 60\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.profileText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, React.createElement(AntDesign, {\n      name: \"user\",\n      size: 24,\n      color: \"black\",\n      style: {\n        paddingRight: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, \" \"), currentUser.firstName + \" \" + currentUser.lastName), React.createElement(Divider, {\n      style: StyleSheet.flatten(styles.profileDivider),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }), React.createElement(Text, {\n      style: styles.profileText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, React.createElement(AntDesign, {\n      name: \"mail\",\n      size: 24,\n      color: \"black\",\n      style: {\n        paddingRight: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, \" \"), currentUser.email), React.createElement(Divider, {\n      style: StyleSheet.flatten(styles.profileDivider),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }), React.createElement(Text, {\n      style: styles.profileText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, React.createElement(AntDesign, {\n      name: \"home\",\n      size: 24,\n      color: \"black\",\n      style: {\n        paddingRight: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, \" \"), currentUser.city), React.createElement(Divider, {\n      style: StyleSheet.flatten(styles.profileDivider),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }), React.createElement(Text, {\n      style: styles.profileText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, React.createElement(AntDesign, {\n      name: \"phone\",\n      size: 24,\n      color: \"black\",\n      style: {\n        paddingRight: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, \" \"), currentUser.pNumber)), React.createElement(Button, {\n      mode: \"outlined\",\n      onPress: function onPress() {\n        Logout();\n        navigation.reset({\n          index: 0,\n          routes: [{\n            name: 'StartScreen'\n          }]\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, \"Logout\"));\n  }\n\n  function ShowFriends() {\n    console.log(\"Friends\");\n    getConnections();\n    console.log(connectionsArr);\n  }\n\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"Search\",\n    activeColor: \"#fff\",\n    barStyle: {\n      backgroundColor: 'rgb(243,119,0)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Search\",\n    component: Search,\n    options: {\n      tabBarLabel: 'Search',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color;\n        return React.createElement(AntDesign, {\n          name: \"search1\",\n          size: 20,\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"My Orders\",\n    component: MyOrders,\n    options: {\n      tabBarLabel: 'My Orders',\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color;\n        return React.createElement(SimpleLineIcons, {\n          style: styles.tabIcon,\n          name: \"book-open\",\n          size: 20,\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    listeners: function listeners() {\n      return {\n        tabPress: function tabPress(e) {\n          getOrders();\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Feed\",\n    component: Feed,\n    options: {\n      tabBarLabel: 'Feed',\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var color = _ref4.color;\n        return React.createElement(SimpleLineIcons, {\n          style: styles.tabIcon,\n          name: \"feed\",\n          size: 20,\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Friends\",\n    component: Friends,\n    options: {\n      tabBarLabel: 'Friends',\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var color = _ref5.color;\n        return React.createElement(SimpleLineIcons, {\n          name: \"people\",\n          size: 20,\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Profile\",\n    component: Profile,\n    options: {\n      tabBarLabel: 'Profile',\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var color = _ref6.color;\n        return React.createElement(SimpleLineIcons, {\n          name: \"user\",\n          size: 20,\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  tabIcon: {\n    flex: 0,\n    paddingBottom: 10\n  },\n  camera: {\n    position: 'absolute',\n    left: 66,\n    top: 200\n  },\n  gallery: {\n    position: 'absolute',\n    right: 66,\n    top: 200\n  },\n  profileText: {\n    fontSize: 20\n  },\n  profileDivider: {\n    backgroundColor: 'rgb(189 ,189 ,189)',\n    alignSelf: \"center\",\n    width: 350,\n    marginTop: 30,\n    marginBottom: 30\n  },\n  btn_container: {\n    flex: 1,\n    backgroundColor: \"#59a6eb\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    elevation: 8,\n    borderRadius: 5,\n    margin: 1\n  },\n  circleButtonIcon: {\n    fontSize: 20,\n    height: 22,\n    color: \"white\"\n  }\n});\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/reactHomeals/screens/Dashboard.js"],"names":["React","useContext","useState","useEffect","createMaterialBottomTabNavigator","Background","Button","useUserContext","SimpleLineIcons","AntDesign","Ionicons","Feather","MaterialCommunityIcons","MaterialIcons","Divider","Slider","TextInput","RestaurantCard","OrderCard","SearchSlider","getDistanceFromLatLonInKm","ImagePicker","degreesToStringHDMS","CircleButton","Icon","Dashboard","navigation","userContext","Tab","currentUser","Logout","chefsArr","selectedChef","currentChefDishes","setCurrentChefDishes","selectedImage","sliderValue","orders","getOrders","setCart","getFireStoreImg","connectionsArr","getConnections","setFriendsArr","navigate","fetchConnections","console","log","uid","connections","Search","width","backgroundColor","alignItems","marginTop","flex","justifyContent","map","item","key","DisFromUser","DisplayName","Img","Address","Rating","FoodType","Email","MyOrders","fontFamily","color","fontSize","Chef","OrderDescription","OrderTime","TotalPrice","Feed","Friends","Profile","marginLeft","reset","index","routes","name","uri","img","height","borderRadius","paddingTop","paddingBottom","styles","profileText","paddingRight","firstName","lastName","StyleSheet","flatten","profileDivider","email","city","pNumber","ShowFriends","tabBarLabel","tabBarIcon","tabIcon","tabPress","e","create","camera","position","left","top","gallery","right","alignSelf","marginBottom","btn_container","elevation","margin","circleButtonIcon"],"mappings":"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","sourcesContent":["\r\nimport React, { useContext, useState, useEffect } from 'react'\r\nimport { Text, View, StyleSheet, Image, ScrollView, SafeAreaView, Animated } from 'react-native';\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nimport Background from '../components/Background'\r\nimport Button from '../components/Button'\r\nimport { useUserContext } from \"../src/UserContext\"\r\nimport { SimpleLineIcons, AntDesign, Ionicons, Feather, MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\r\nimport { Divider, Slider } from 'react-native-elements';\r\nimport TextInput from '../components/TextInput'\r\nimport RestaurantCard from '../components/RestaurantCard'\r\nimport OrderCard from '../components/OrderCard'\r\nimport SearchSlider from '../components/SearchSlider'\r\nimport { getDistanceFromLatLonInKm } from '../helpers/calcDis'\r\nimport ImagePicker from '../helpers/ImagePicker'\r\nimport { degreesToStringHDMS } from 'ol/coordinate';\r\nimport CircleButton from 'react-native-circle-floatmenu';\r\nimport Icon from \"react-native-vector-icons/MaterialCommunityIcons\";\r\n\r\nconst Dashboard = ({ navigation }) => {\r\n  const userContext = useUserContext()\r\n  const Tab = createMaterialBottomTabNavigator();\r\n  const { currentUser, Logout, chefsArr, selectedChef, currentChefDishes, setCurrentChefDishes, selectedImage, sliderValue, orders, getOrders, setCart, getFireStoreImg, connectionsArr, getConnections, setFriendsArr } = useUserContext();\r\n\r\n  useEffect(() => {\r\n    if (currentChefDishes) {\r\n      navigation.navigate('DishesScreen');\r\n    }\r\n  }, [currentChefDishes])\r\n\r\n  useEffect(async () => {\r\n    let connections = [];\r\n    async function fetchConnections() {\r\n      console.log('123')\r\n\r\n      getConnections(currentUser.uid)\r\n      console.log('456')\r\n    }\r\n    await fetchConnections()\r\n    console.log(connections)\r\n    /* setFriendsArr(getConnections(currentUser.uid)); */\r\n  }, [])\r\n\r\n  function Search() {\r\n    return (\r\n      <ScrollView style={{ width: '100%' }}>\r\n        <View style={{ backgroundColor: 'rgb(240, 240, 240)', alignItems: 'center', width: '100%' }}>\r\n          {/*  <View style={{ width: '95%', marginTop: 30 }}>\r\n            <TextInput\r\n              label=\"Search\"\r\n            />\r\n          </View> */}\r\n          <View style={{ marginTop: '5%', width: '100%' }}>\r\n            <SearchSlider></SearchSlider>\r\n          </View>\r\n        </View>\r\n        <View style={{ marginTop: \"5%\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n          {chefsArr.map((item, key) =>\r\n            (sliderValue > item.DisFromUser) ?\r\n              <RestaurantCard name={item.DisplayName} img={item.Img} city={item.Address} rating={item.Rating} foodType={item.FoodType} key={key}\r\n                onPress={async () => {\r\n                  /* handleCardClick(item.Email); */\r\n                  selectedChef(item.Email)\r\n                  setCart([])\r\n                }}>\r\n              </RestaurantCard> : null\r\n          )}\r\n        </View>\r\n      </ScrollView>\r\n    )\r\n  }\r\n\r\n  function MyOrders() {\r\n    return (\r\n      <View style={{ marginTop: \"10%\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Text style={{ fontFamily: 'sans-serif-light', color: \"#3ec92d\", fontSize: 22 }}>My Orders</Text>\r\n        <ScrollView style={{ width: \"100%\" }}>\r\n          <View style={{ marginTop: \"5%\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            {orders.map((item, key) =>\r\n              <OrderCard key={key} name={item.Chef} desc={item.OrderDescription} date={item.OrderTime} price={item.TotalPrice}></OrderCard>\r\n\r\n            )}\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n  function Feed() {\r\n    return (\r\n      <View style={{ marginTop: \"10%\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Text style={{ fontFamily: 'sans-serif-light', color: \"#3ec92d\", fontSize: 22 }}>My Network</Text>\r\n        {/* <ScrollView style={{ width: \"100%\" }}>\r\n          \r\n    </ScrollView> */}\r\n        {/*  <CircleButton buttonColor=\"rgb(243,119,0)\" position=\"right\" btnOutRange=\"rgb(225,46,46)\" \r\n        >\r\n            <CircleButton.Item\r\n              position=\"absolute\"\r\n              buttonColor=\"rgb(46,64,217)\"\r\n              title=\"Feed\"\r\n              onPress={() => console.log(\"Feed\")}\r\n            >\r\n              <MaterialIcons name=\"dynamic-feed\" size={24} color=\"white\" />\r\n            </CircleButton.Item>\r\n            <CircleButton.Item\r\n              position=\"absolute\"\r\n              buttonColor=\"rgb(56,174,26)\"\r\n              title=\"My Friends\"\r\n              onPress={() => ShowFriends()}\r\n            >\r\n              <Icon name=\"account-group-outline\" style={styles.circleButtonIcon} />\r\n            </CircleButton.Item>\r\n            <CircleButton.Item\r\n              position=\"absolute\"\r\n              buttonColor=\"rgb(243,119,0)\"\r\n              title=\"Perfil\"\r\n              onPress={() => console.log(\"BtnPress\")}\r\n            >\r\n              <Icon\r\n                name=\"card-account-details\"\r\n                style={styles.circleButtonIcon}\r\n              />\r\n            </CircleButton.Item>\r\n            \r\n          </CircleButton> */}\r\n      </View>\r\n    );\r\n  }\r\n\r\n\r\n  function Friends() {\r\n    return (\r\n      <View style={{ marginTop: \"10%\", flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Text style={{ fontFamily: 'sans-serif-light', color: \"#3ec92d\", fontSize: 22 }}>Friends</Text>\r\n        <ScrollView style={{ width: \"100%\" }}>\r\n\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  function Profile() {\r\n    return (\r\n      <Background>\r\n        <Button style={{ marginLeft: 280 }}\r\n          onPress={() =>\r\n            navigation.reset({\r\n              index: 0,\r\n              routes: [{ name: 'StartScreen' }],\r\n            })\r\n          }\r\n        >\r\n        </Button>\r\n        <Image\r\n          source={{ uri: currentUser.img }}\r\n          style={{ width: 200, height: 200, borderRadius: 200 / 2 }}\r\n        />\r\n        <ImagePicker ></ImagePicker>\r\n        <View style={{ width: '100%', paddingTop: 60, paddingBottom: 60 }}>\r\n          <Text style={styles.profileText} >\r\n            <AntDesign name=\"user\" size={24} color=\"black\" style={{ paddingRight: 20 }} />\r\n            <Text> </Text>{currentUser.firstName + \" \" + currentUser.lastName}</Text>\r\n          <Divider style={StyleSheet.flatten(styles.profileDivider)} />\r\n          <Text style={styles.profileText}>\r\n            <AntDesign name=\"mail\" size={24} color=\"black\" style={{ paddingRight: 20 }} />\r\n            <Text> </Text>{currentUser.email}</Text>\r\n          <Divider style={StyleSheet.flatten(styles.profileDivider)} />\r\n          <Text style={styles.profileText}>\r\n            <AntDesign name=\"home\" size={24} color=\"black\" style={{ paddingRight: 20 }} />\r\n            <Text> </Text>{currentUser.city}</Text>\r\n          <Divider style={StyleSheet.flatten(styles.profileDivider)} />\r\n          <Text style={styles.profileText}>\r\n            <AntDesign name=\"phone\" size={24} color=\"black\" style={{ paddingRight: 20 }} />\r\n            <Text> </Text>{currentUser.pNumber}</Text>\r\n        </View>\r\n\r\n        <Button\r\n          mode=\"outlined\"\r\n          onPress={() => {\r\n            Logout();\r\n            navigation.reset({\r\n              index: 0,\r\n              routes: [{ name: 'StartScreen' }],\r\n            })\r\n          }\r\n          }\r\n        >\r\n          Logout\r\n          </Button>\r\n      </Background>\r\n    );\r\n\r\n  }\r\n\r\n  function ShowFriends() {\r\n    console.log(\"Friends\")\r\n    getConnections();\r\n    console.log(connectionsArr)\r\n  }\r\n\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Search\"\r\n      activeColor=\"#fff\"\r\n      barStyle={{ backgroundColor: 'rgb(243,119,0)' }}\r\n    >\r\n\r\n      <Tab.Screen name=\"Search\" component={Search}\r\n        options={{\r\n          tabBarLabel: 'Search',\r\n          tabBarIcon: ({ color }) => (\r\n            <AntDesign name=\"search1\" size={20} color={color} />\r\n\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen name=\"My Orders\" component={MyOrders}\r\n        options={{\r\n          tabBarLabel: 'My Orders',\r\n          tabBarIcon: ({ color }) => (\r\n            <SimpleLineIcons style={styles.tabIcon} name=\"book-open\" size={20} color={color} />\r\n          ),\r\n        }}\r\n        listeners={() => ({ tabPress: e => { getOrders() } })}\r\n      />\r\n      <Tab.Screen name=\"Feed\" component={Feed}\r\n        options={{\r\n          tabBarLabel: 'Feed',\r\n          tabBarIcon: ({ color }) => (\r\n            <SimpleLineIcons style={styles.tabIcon} name=\"feed\" size={20} color={color} />\r\n          ),\r\n\r\n        }}\r\n      /* listeners={() => ({ tabPress: e => { getConnections() } })} */\r\n\r\n      />\r\n      <Tab.Screen name=\"Friends\" component={Friends}\r\n        options={{\r\n          tabBarLabel: 'Friends',\r\n          tabBarIcon: ({ color }) => (\r\n            <SimpleLineIcons name=\"people\" size={20} color={color} />\r\n          ),\r\n\r\n        }}\r\n\r\n      />\r\n\r\n      <Tab.Screen name=\"Profile\" component={Profile}\r\n        options={{\r\n          tabBarLabel: 'Profile',\r\n          tabBarIcon: ({ color }) => (\r\n            <SimpleLineIcons name=\"user\" size={20} color={color} />\r\n          ),\r\n        }}\r\n      /* listeners={() => ({ tabPress: e => { console.log(currentUser); getFireStoreImg() } })} */\r\n      />\r\n    </Tab.Navigator>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  tabIcon: {\r\n    flex: 0,\r\n    paddingBottom: 10,\r\n  },\r\n  camera: {\r\n    position: 'absolute',\r\n    left: 66,\r\n    top: 200\r\n  },\r\n  gallery: {\r\n    position: 'absolute',\r\n    right: 66,\r\n    top: 200\r\n  },\r\n  profileText: {\r\n    fontSize: 20,\r\n  },\r\n\r\n  profileDivider: {\r\n    backgroundColor: 'rgb(189 ,189 ,189)',\r\n    alignSelf: \"center\",\r\n    width: 350,\r\n    marginTop: 30,\r\n    marginBottom: 30\r\n  },\r\n\r\n  btn_container: {\r\n    flex: 1,\r\n    backgroundColor: \"#59a6eb\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    elevation: 8,\r\n    borderRadius: 5,\r\n    margin: 1,\r\n  },\r\n  circleButtonIcon: {\r\n    fontSize: 20,\r\n    height: 22,\r\n    color: \"white\",\r\n  },\r\n})\r\n\r\nexport default Dashboard\r\n\r\n\r\n\r\n\r\n/* const orders = [\r\n  {\r\n    name: \"Abu hasan\",\r\n    date: \"24/01/2021\",\r\n    price: \"50 ILS\",\r\n  },\r\n  {\r\n    name: \"Japanika\",\r\n    date: \"28/12/2020\",\r\n    price: \"185 ILS\",\r\n  },\r\n  {\r\n    name: \"Rafaelo\",\r\n    date: \"05/10/2020\",\r\n    price: \"381 ILS\",\r\n  },\r\n  {\r\n    name: \"Pizza Kimaat Hinam\",\r\n    date: \"13/08/2020\",\r\n    price: \"35 ILS\",\r\n\r\n  },\r\n  {\r\n    name: \"Pizza Kimaat Hinam\",\r\n    date: \"13/08/2020\",\r\n    price: \"35 ILS\",\r\n\r\n  },\r\n  {\r\n    name: \"Pizza Kimaat Hinam\",\r\n    date: \"13/08/2020\",\r\n    price: \"35 ILS\",\r\n\r\n  },\r\n  {\r\n    name: \"Pizza Kimaat Hinam\",\r\n    date: \"13/08/2020\",\r\n    price: \"35 ILS\",\r\n\r\n  },\r\n  {\r\n    name: \"Pizza Kimaat Hinam\",\r\n    date: \"13/08/2020\",\r\n    price: \"35 ILS\",\r\n\r\n  },\r\n  {\r\n    name: \"Pizza Kimaat Hinam\",\r\n    date: \"13/08/2020\",\r\n    price: \"35 ILS\",\r\n  },\r\n  {\r\n    name: \"Pizza Kimaat Hinam\",\r\n    date: \"13/08/2020\",\r\n    price: \"35 ILS\",\r\n  },\r\n  {\r\n    name: \"Pizza Kimaat Hinam\",\r\n    date: \"13/08/2020\",\r\n    price: \"35 ILS\",\r\n  },\r\n  {\r\n    name: \"Pizza Kimaat Hinam\",\r\n    date: \"13/08/2020\",\r\n    price: \"35 ILS\",\r\n  },\r\n] */"]},"metadata":{},"sourceType":"module"}