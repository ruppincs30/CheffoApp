{"ast":null,"code":"import results from \"../src/dummy.json\";\nvar apiURLpostUser = \"http://192.168.31.156:50247/api/User/postUser/\";\nexport function script() {\n  var listArr = [];\n  var city, gLon, gLat;\n\n  for (var i = 0; i < results.results.length; i++) {\n    curr1 = getRndInteger() / 1000000;\n    curr2 = getRndInteger() / 1000000;\n    console.log(curr1 + ' and two: ' + curr2);\n    city = \"Netanya\";\n    gLon = 34.85 + curr1;\n    gLat = 32.31 + curr2;\n\n    if (i > 30) {\n      city = \"Mishmarot\";\n      gLon = 34.98 + curr1;\n      gLat = 32.48 + curr2;\n\n      if (i > 50) {\n        city = \"Kohav Yair\";\n        gLon = 34.99 + curr1;\n        gLat = 32.22 + curr2;\n\n        if (i > 80) {\n          city = \"Tel Aviv\";\n          gLon = 34.80 + curr1;\n          gLat = 32.11 + curr2;\n\n          if (i > 120) {\n            city = \"Jerusalem\";\n            gLon = 35.21 + curr1;\n            gLat = 31.76 + curr2;\n\n            if (i > 150) {\n              city = \"Haifa\";\n              gLon = 34.99 + curr1;\n              gLat = 32.80 + curr2;\n\n              if (i > 180) {\n                city = \"Kfar Saba\";\n                gLon = 34.90 + curr1;\n                gLat = 32.17 + curr2;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    var filteredUser = generateFilteredUser(results.results[i], city, gLon, gLat);\n    listArr.push(filteredUser);\n    console.log(1);\n  }\n\n  var userList = {\n    users: listArr\n  };\n  console.log(JSON.stringify(userList));\n}\n\nfunction getRndInteger() {\n  return Math.floor(Math.random() * (9999 + 1));\n}\n\nfunction generateFilteredUser(data, city, gLon, gLat) {\n  var user = {\n    uid: data.login.uuid,\n    firstName: data.name.first,\n    lastName: data.name.last,\n    city: city,\n    email: data.email,\n    pNumber: data.phone,\n    lon: gLon,\n    lat: gLat,\n    img: data.picture.medium\n  };\n  return user;\n}","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/reactHomeals/src/script.js"],"names":["results","apiURLpostUser","script","listArr","city","gLon","gLat","i","length","curr1","getRndInteger","curr2","console","log","filteredUser","generateFilteredUser","push","userList","users","JSON","stringify","Math","floor","random","data","user","uid","login","uuid","firstName","name","first","lastName","last","email","pNumber","phone","lon","lat","img","picture","medium"],"mappings":"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","sourcesContent":["// const url = \"../src/dummy.json\";\r\nimport results from '../src/dummy.json'\r\n\r\nlet apiURLpostUser = \"http://192.168.31.156:50247/api/User/postUser/\";\r\n\r\n\r\n// document.addEventListener(\"DOMContentLoaded\", initialise);\r\n\r\nexport function script() {\r\n    let listArr = [];\r\n    var city, gLon, gLat;\r\n    for (let i = 0; i < results.results.length; i++) {\r\n        curr1 = getRndInteger() / 1000000;\r\n        curr2 = getRndInteger() / 1000000;\r\n        console.log(curr1 + ' and two: ' + curr2)\r\n        city = \"Netanya\";\r\n        gLon = 34.85 + curr1;\r\n        gLat = 32.31 + curr2;\r\n        if (i > 30) {\r\n            city = \"Mishmarot\";\r\n            gLon = 34.98 + curr1;\r\n            gLat = 32.48 + curr2;\r\n            if (i > 50) {\r\n                city = \"Kohav Yair\";\r\n                gLon = 34.99 + curr1;\r\n                gLat = 32.22 + curr2;\r\n                if (i > 80) {\r\n                    city = \"Tel Aviv\";\r\n                    gLon = 34.80 + curr1;\r\n                    gLat = 32.11 + curr2;\r\n                    if (i > 120) {\r\n                        city = \"Jerusalem\";\r\n                        gLon = 35.21 + curr1;\r\n                        gLat = 31.76 + curr2;\r\n                        if (i > 150) {\r\n                            city = \"Haifa\";\r\n                            gLon = 34.99 + curr1;\r\n                            gLat = 32.80 + curr2;\r\n                            if (i > 180) {\r\n                                city = \"Kfar Saba\";\r\n                                gLon = 34.90 + curr1;\r\n                                gLat = 32.17 + curr2;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let filteredUser = generateFilteredUser(results.results[i], city, gLon, gLat);\r\n        listArr.push(filteredUser);\r\n        console.log(1)\r\n    }\r\n    let userList = { users: listArr };\r\n    console.log(JSON.stringify(userList));\r\n}\r\n\r\n/* function fetchGeneratedUsers() {\r\n    fetch(url)\r\n        .then(function (response) {\r\n            return response.json();\r\n        })\r\n        .then(function (json) {\r\n            var listArr = [];\r\n            for (let i = 0; i < json.results.length; i++) {\r\n                var filteredUser = generateFilteredUser(json.results[i]);\r\n                listArr.push(filteredUser);\r\n            }\r\n\r\n            var userList = { users: listArr };\r\n            console.log(JSON.stringify(userList));\r\n        });\r\n} */\r\n\r\nfunction getRndInteger() {\r\n    return Math.floor(Math.random() * (9999 + 1));\r\n}\r\n\r\nfunction generateFilteredUser(data, city, gLon, gLat) {\r\n    var user = {\r\n        uid: data.login.uuid,\r\n        firstName: data.name.first,\r\n        lastName: data.name.last,\r\n        city: city,\r\n        email: data.email,\r\n        pNumber: data.phone,\r\n        lon: gLon,\r\n        lat: gLat,\r\n        img: data.picture.medium,\r\n    };\r\n    /* fetch(apiURLpostUser, {\r\n        method: 'POST',\r\n        body: JSON.stringify(newUser),\r\n        headers: new Headers({\r\n            'Content-Type': 'application/json; charset=UTF-8',\r\n            'Accept': 'application/json; charset=UTF-8'\r\n        })\r\n    })\r\n        .then(response => {\r\n            console.log('response=', response);\r\n            console.log('response.status', response.status);\r\n            console.log('response.ok', response.ok);\r\n            return response.json();\r\n        })\r\n        */\r\n    return user;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}