{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shachar\\\\Desktop\\\\P\\\\reactHomeals\\\\src\\\\UserContext.js\";\nimport fire from \"../fire\";\nimport { auth } from 'firebase';\nimport React, { useContext, useState, useEffect } from 'react';\nimport dbFirestore from \"../fire\";\nimport { getDistanceFromLatLonInKm } from \"../helpers/calcDis\";\nimport { minMaxNormalize } from \"../helpers/normalize\";\nimport { set } from 'ol/transform';\nimport { ScrollView } from 'react-native-gesture-handler';\nvar apiURLgetUser = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/User/getUser/\";\nvar apiURLgetUsers = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/User/getUsers/\";\nvar apiURLpostUser = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/User/postUser/\";\nvar apiURLgetChefs = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/Chef/getChefs/\";\nvar apiURLgetDishes = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/Dish/getDishes/\";\nvar apiURLpostOrder = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/Order/postOrder/\";\nvar apiURLgetOrder = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/Order/getOrder/\";\nvar apiURLgetConnections = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/Connection/getConnections/\";\nvar apiURLpostConnection = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/Connection/Post/\";\nvar apiURLdeleteConnection = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/Connection/Delete/\";\nvar apiURLgetUserReviews = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/Review/getUserReviews/\";\nvar UserContext = React.createContext();\nvar UserUpdateContext = React.createContext();\nexport function useUserContext() {\n  return useContext(UserContext);\n}\nexport function useUserUpdateContext() {\n  return useContext(UserUpdateContext);\n}\nexport function UserProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUser = _useState2[0],\n      setCurrentUser = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentChef = _useState4[0],\n      setCurrentChef = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentChefDishes = _useState6[0],\n      setCurrentChefDishes = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      chefsArr = _useState8[0],\n      setChefsArr = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      friendsArr = _useState10[0],\n      setFriendsArr = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      friendsArrDetails = _useState12[0],\n      setFriendsArrDetails = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      reviewsArr = _useState14[0],\n      setReviewsArr = _useState14[1];\n\n  var _useState15 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      name = _useState16[0],\n      setName = _useState16[1];\n\n  var _useState17 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState18 = _slicedToArray(_useState17, 2),\n      email = _useState18[0],\n      setEmail = _useState18[1];\n\n  var _useState19 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState20 = _slicedToArray(_useState19, 2),\n      password = _useState20[0],\n      setPassword = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      userID = _useState22[0],\n      setUserID = _useState22[1];\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      selectedImage = _useState24[0],\n      setSelectedImage = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      cart = _useState26[0],\n      setCart = _useState26[1];\n\n  var _useState27 = useState(26),\n      _useState28 = _slicedToArray(_useState27, 2),\n      sliderValue = _useState28[0],\n      setSliderValue = _useState28[1];\n\n  var _useState29 = useState([]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      orders = _useState30[0],\n      setOrders = _useState30[1];\n\n  var _useState31 = useState(''),\n      _useState32 = _slicedToArray(_useState31, 2),\n      friendsInDepth = _useState32[0],\n      setFriendsInDepth = _useState32[1];\n\n  var _useState33 = useState(''),\n      _useState34 = _slicedToArray(_useState33, 2),\n      friendsReviews = _useState34[0],\n      setFriendsReviews = _useState34[1];\n\n  var _useState35 = useState(''),\n      _useState36 = _slicedToArray(_useState35, 2),\n      friendsSuggestion = _useState36[0],\n      setFriendsSuggestion = _useState36[1];\n\n  var _useState37 = useState([]),\n      _useState38 = _slicedToArray(_useState37, 2),\n      allUsers = _useState38[0],\n      setAllUsers = _useState38[1];\n\n  var _useState39 = useState(false),\n      _useState40 = _slicedToArray(_useState39, 2),\n      loading = _useState40[0],\n      setLoading = _useState40[1];\n\n  var _useState41 = useState(false),\n      _useState42 = _slicedToArray(_useState41, 2),\n      orderLoading = _useState42[0],\n      setOrderLoading = _useState42[1];\n\n  var _useState43 = useState(''),\n      _useState44 = _slicedToArray(_useState43, 2),\n      currentOrder = _useState44[0],\n      setCurrentOrder = _useState44[1];\n\n  var peopleYouMayKnow = [];\n  var depth = 3;\n  var tempReviews = [];\n  useEffect(function () {\n    getChefs();\n    getUsers();\n  }, [currentUser]);\n  useEffect(function () {\n    if (friendsArr) {\n      var tempArr = [];\n      friendsArr.forEach(function _callee(currFriend) {\n        var tempFriend;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                getUserReviews(currFriend);\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(getDetails(currFriend.userUid));\n\n              case 3:\n                tempFriend = _context.sent;\n                tempArr.push(tempFriend);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n      setFriendsArrDetails(tempArr);\n      console.log(\"Friends list:\");\n      console.log(friendsArr);\n    }\n  }, [friendsArr]);\n\n  function fireStoreImg() {\n    dbFirestore.firestore().collection('userData').doc(currentUser.uid).set({\n      imgUrl: currentUser.img\n    }).then(function () {\n      console.log('User added!');\n    });\n  }\n\n  function getFireStoreImg() {\n    var temp, userImg;\n    return _regeneratorRuntime.async(function getFireStoreImg$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            temp = currentUser;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(dbFirestore.firestore().collection('userData').get());\n\n          case 3:\n            userImg = _context2.sent;\n            console.log(userImg);\n            userImg.wP.docChanges.forEach(function (element) {\n              if (currentUser.uid == element.doc.key.path.segments[6]) temp.img = element.doc.proto.fields.imgUrl.stringValue;\n            });\n            console.log(temp);\n            setCurrentUser(temp);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getOrders() {\n    fetch(apiURLgetOrder + currentUser.uid, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json; charset=UTF-8'\n      })\n    }).then(function (response) {\n      console.log('response.status', response.status);\n      return response.json();\n    }).then(function (data) {\n      setOrders(data);\n      console.log(data);\n      setOrderLoading(true);\n    }, function (error) {\n      console.log(\"err get=\", error);\n    });\n  }\n\n  function setOrder() {\n    var sum = 0;\n    var orderStr = '';\n    cart.forEach(function (element) {\n      if (element.Quantity != 0 && element.Quantity) {\n        sum += element.Quantity * element.Price;\n        orderStr += element.Quantity + 'x ' + element.Name + ' - ' + element.Quantity * element.Price + '; ';\n      }\n    });\n    var currentdate = new Date();\n    var datetime = currentdate.getDate() + \"/\" + (currentdate.getMonth() + 1) + \"/\" + currentdate.getFullYear() + \" - \" + currentdate.getHours() + \":\" + currentdate.getMinutes();\n    var newOrder = {\n      uid: currentUser.uid,\n      chefEmail: currentChef.Email,\n      orderTime: datetime,\n      orderDescription: orderStr,\n      totalPrice: sum,\n      chef: currentChef.DisplayName,\n      status: 'open'\n    };\n    fetch(apiURLpostOrder, {\n      method: 'POST',\n      body: JSON.stringify(newOrder),\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json; charset=UTF-8'\n      })\n    }).then(function (response) {\n      console.log('response=', response);\n      console.log('response.status', response.status);\n      console.log('response.ok', response.ok);\n      return response.json();\n    }).then(function (data) {\n      console.log(data);\n      setCurrentOrder(data);\n    });\n  }\n\n  function onLogin(email, userID) {\n    setEmail(email);\n    setUserID(userID);\n  }\n\n  function Logout() {\n    fire.auth().signOut();\n    clearUserContext();\n  }\n\n  function signin(email, password, callbackfunc) {\n    var flag;\n    return _regeneratorRuntime.async(function signin$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _regeneratorRuntime.awrap(fire.auth().signInWithEmailAndPassword(email, password).then(function _callee4() {\n              return _regeneratorRuntime.async(function _callee4$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _context5.next = 2;\n                      return _regeneratorRuntime.awrap(fire.auth().onAuthStateChanged(function _callee3(authUser) {\n                        return _regeneratorRuntime.async(function _callee3$(_context4) {\n                          while (1) {\n                            switch (_context4.prev = _context4.next) {\n                              case 0:\n                                if (!(authUser !== null)) {\n                                  _context4.next = 5;\n                                  break;\n                                }\n\n                                _context4.next = 3;\n                                return _regeneratorRuntime.awrap(fetch(apiURLgetUser + authUser.uid, {\n                                  method: 'GET',\n                                  headers: new Headers({\n                                    'Content-Type': 'application/json; charset=UTF-8',\n                                    'Accept': 'application/json; charset=UTF-8'\n                                  })\n                                }).then(function (response) {\n                                  console.log('response.status', response.status);\n                                  return response.json();\n                                }).then(function _callee2(data) {\n                                  var user;\n                                  return _regeneratorRuntime.async(function _callee2$(_context3) {\n                                    while (1) {\n                                      switch (_context3.prev = _context3.next) {\n                                        case 0:\n                                          user = {\n                                            uid: data.Uid,\n                                            email: data.Email,\n                                            firstName: data.FirstName,\n                                            lastName: data.LastName,\n                                            city: data.City,\n                                            pNumber: data.PNumber,\n                                            lon: data.Lon,\n                                            lat: data.Lat,\n                                            img: data.Img\n                                          };\n                                          setCurrentUser(user);\n                                          console.log(\"Current User Details:\");\n                                          console.log(user);\n                                          flag = true;\n                                          callbackfunc(flag);\n\n                                        case 6:\n                                        case \"end\":\n                                          return _context3.stop();\n                                      }\n                                    }\n                                  }, null, null, null, Promise);\n                                }, function (error) {\n                                  console.log(\"err get=\", error);\n                                }));\n\n                              case 3:\n                                _context4.next = 6;\n                                break;\n\n                              case 5:\n                                setCurrentUser('');\n\n                              case 6:\n                              case \"end\":\n                                return _context4.stop();\n                            }\n                          }\n                        }, null, null, null, Promise);\n                      }));\n\n                    case 2:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (err) {\n              switch (err.code) {\n                case \"auth/invalid-email\":\n                case \"auth/user-disabled\":\n                case \"auth/user-not-found\":\n                  alert(\"wrong Email\");\n                  console.log(err.message);\n                  break;\n\n                case \"auth/wrong-password\":\n                  alert(\"wrong Password\");\n                  console.log(err.message);\n                  break;\n              }\n\n              flag = false;\n              callbackfunc(flag);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function signup(firstName, lastName, city, phone, email, password, lon, lat) {\n    var flag;\n    return _regeneratorRuntime.async(function signup$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            flag = true;\n            _context7.next = 3;\n            return _regeneratorRuntime.awrap(fire.auth().createUserWithEmailAndPassword(email, password).then(function (user) {\n              console.log(user.user.uid + \" / \" + email + \" / \" + firstName + \" / \" + lastName + \" / \" + city + \" / \" + phone);\n              var newUser = {\n                uid: user.user.uid,\n                email: email,\n                firstName: firstName,\n                lastName: lastName,\n                city: city,\n                pNumber: phone,\n                lon: lon,\n                lat: lat\n              };\n              console.log(newUser);\n              fetch(apiURLpostUser, {\n                method: 'POST',\n                body: JSON.stringify(newUser),\n                headers: new Headers({\n                  'Content-Type': 'application/json; charset=UTF-8',\n                  'Accept': 'application/json; charset=UTF-8'\n                })\n              }).then(function (response) {\n                console.log('response=', response);\n                console.log('response.status', response.status);\n                console.log('response.ok', response.ok);\n                return response.json();\n              });\n            }).catch(function (err) {\n              switch (err.code) {\n                case \"auth/email-already-in-use\":\n                case \"auth/invalid-email\":\n                case \"auth/weak-password\":\n                  alert(err.message);\n                  flag = false;\n                  break;\n              }\n            }));\n\n          case 3:\n            return _context7.abrupt(\"return\", flag);\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function updateImage(img) {\n    currentUser.img = img;\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  function getUsers() {\n    var users = [];\n    fetch(apiURLgetUsers, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json; charset=UTF-8'\n      })\n    }).then(function (response) {\n      console.log('response.status', response.status);\n      return response.json();\n    }).then(function (data) {\n      data.forEach(function (element) {\n        var currUser = {\n          userUid: element.Uid,\n          firstName: element.FirstName,\n          lastName: element.LastName,\n          email: element.Email,\n          city: element.City,\n          img: element.Img,\n          lat: element.Lat,\n          lon: element.Lon,\n          pNumber: element.PNumber,\n          distance: Math.floor(getDistanceFromLatLonInKm(currentUser.lat, currentUser.lon, element.Lat, element.Lon))\n        };\n        users.push(currUser);\n      });\n      setAllUsers(users);\n    }, function (error) {\n      console.log(\"err get=\", error);\n    });\n  }\n\n  function followUser(targetUid) {\n    var connection = {\n      sourceUid: currentUser.uid,\n      targetUid: targetUid\n    };\n    fetch(apiURLpostConnection, {\n      method: 'POST',\n      body: JSON.stringify(connection),\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json; charset=UTF-8'\n      })\n    }).then(function (response) {\n      console.log('response=', response);\n      console.log('response.status', response.status);\n      console.log('response.ok', response.ok);\n      return response.json();\n    }).then(function () {\n      getFriends();\n    });\n  }\n\n  function unfollowUser(targetUid) {\n    var connection = {\n      sourceUid: currentUser.uid,\n      targetUid: targetUid\n    };\n    fetch(apiURLdeleteConnection, {\n      method: 'DELETE',\n      body: JSON.stringify(connection),\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json; charset=UTF-8'\n      })\n    }).then(function (response) {\n      console.log('response=', response);\n      console.log('response.status', response.status);\n      console.log('response.ok', response.ok);\n      return response.json();\n    }).then(function () {\n      getFriends();\n    });\n  }\n\n  function getFriends() {\n    var tempConnections;\n    return _regeneratorRuntime.async(function getFriends$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            tempConnections = [];\n            _context8.next = 3;\n            return _regeneratorRuntime.awrap(fetch(apiURLgetConnections + currentUser.uid, {\n              method: 'GET',\n              headers: new Headers({\n                'Content-Type': 'application/json; charset=UTF-8',\n                'Accept': 'application/json; charset=UTF-8'\n              })\n            }).then(function (response) {\n              console.log('response.status', response.status);\n              return response.json();\n            }).then(function (data) {\n              data.forEach(function (element) {\n                var Connection = {\n                  userUid: element.TargetUid,\n                  depth: 0\n                };\n                tempConnections.push(Connection);\n              });\n              setFriendsArr(tempConnections);\n              console.log(tempConnections);\n            }, function (error) {\n              console.log(\"err get=\", error);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getConnections() {\n    var tempConnections, tempFF, _loop, i;\n\n    return _regeneratorRuntime.async(function getConnections$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            tempConnections = [];\n            tempFF = [];\n\n            _loop = function _loop(i) {\n              return _regeneratorRuntime.async(function _loop$(_context13) {\n                while (1) {\n                  switch (_context13.prev = _context13.next) {\n                    case 0:\n                      if (!(i == 0)) {\n                        _context13.next = 6;\n                        break;\n                      }\n\n                      _context13.next = 3;\n                      return _regeneratorRuntime.awrap(fetch(apiURLgetConnections + currentUser.uid, {\n                        method: 'GET',\n                        headers: new Headers({\n                          'Content-Type': 'application/json; charset=UTF-8',\n                          'Accept': 'application/json; charset=UTF-8'\n                        })\n                      }).then(function (response) {\n                        console.log('response.status', response.status);\n                        return response.json();\n                      }).then(function (data) {\n                        data.forEach(function (element) {\n                          var Connection = {\n                            userUid: element.TargetUid,\n                            depth: i\n                          };\n                          tempConnections.push(Connection);\n                        });\n                      }, function (error) {\n                        console.log(\"err get=\", error);\n                      }));\n\n                    case 3:\n                      setFriendsArr(tempConnections);\n                      _context13.next = 8;\n                      break;\n\n                    case 6:\n                      _context13.next = 8;\n                      return _regeneratorRuntime.awrap(function _callee7() {\n                        var tempConnections2, _loop2, j;\n\n                        return _regeneratorRuntime.async(function _callee7$(_context12) {\n                          while (1) {\n                            switch (_context12.prev = _context12.next) {\n                              case 0:\n                                tempConnections2 = [];\n\n                                _loop2 = function _loop2(j) {\n                                  return _regeneratorRuntime.async(function _loop2$(_context11) {\n                                    while (1) {\n                                      switch (_context11.prev = _context11.next) {\n                                        case 0:\n                                          _context11.next = 2;\n                                          return _regeneratorRuntime.awrap(fetch(apiURLgetConnections + tempConnections[j].userUid, {\n                                            method: 'GET',\n                                            headers: new Headers({\n                                              'Content-Type': 'application/json; charset=UTF-8',\n                                              'Accept': 'application/json; charset=UTF-8'\n                                            })\n                                          }).then(function (response) {\n                                            console.log('response.status', response.status);\n                                            return response.json();\n                                          }).then(function (data) {\n                                            data.forEach(function (element) {\n                                              var Connection = {\n                                                userUid: element.TargetUid,\n                                                fatherUid: tempConnections[j].userUid,\n                                                depth: i\n                                              };\n                                              tempConnections2.push(Connection);\n                                            });\n                                          }, function (error) {\n                                            console.log(\"err get=\", error);\n                                          }).then(function () {\n                                            tempConnections2.forEach(function _callee6(element) {\n                                              var currUser;\n                                              return _regeneratorRuntime.async(function _callee6$(_context10) {\n                                                while (1) {\n                                                  switch (_context10.prev = _context10.next) {\n                                                    case 0:\n                                                      currUser = {\n                                                        userUid: element.userUid,\n                                                        fatherUid: tempConnections[j].userUid,\n                                                        depth: i,\n                                                        email: '',\n                                                        firstName: '',\n                                                        lastName: '',\n                                                        city: '',\n                                                        distance: '',\n                                                        img: '',\n                                                        score: '',\n                                                        numOfApp: ''\n                                                      };\n                                                      peopleYouMayKnow.push(currUser);\n                                                      tempFF.push(currUser);\n\n                                                    case 3:\n                                                    case \"end\":\n                                                      return _context10.stop();\n                                                  }\n                                                }\n                                              }, null, null, null, Promise);\n                                            });\n                                            tempConnections2 = [];\n                                          }));\n\n                                        case 2:\n                                        case \"end\":\n                                          return _context11.stop();\n                                      }\n                                    }\n                                  }, null, null, null, Promise);\n                                };\n\n                                j = 0;\n\n                              case 3:\n                                if (!(j < tempConnections.length)) {\n                                  _context12.next = 9;\n                                  break;\n                                }\n\n                                _context12.next = 6;\n                                return _regeneratorRuntime.awrap(_loop2(j));\n\n                              case 6:\n                                j++;\n                                _context12.next = 3;\n                                break;\n\n                              case 9:\n                                tempConnections = tempFF;\n                                tempFF = [];\n\n                              case 11:\n                              case \"end\":\n                                return _context12.stop();\n                            }\n                          }\n                        }, null, null, null, Promise);\n                      }());\n\n                    case 8:\n                    case \"end\":\n                      return _context13.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            };\n\n            i = 0;\n\n          case 4:\n            if (!(i < depth)) {\n              _context14.next = 10;\n              break;\n            }\n\n            _context14.next = 7;\n            return _regeneratorRuntime.awrap(_loop(i));\n\n          case 7:\n            i++;\n            _context14.next = 4;\n            break;\n\n          case 10:\n            peopleYouMayKnow.forEach(function _callee5(element, index, array) {\n              var user;\n              return _regeneratorRuntime.async(function _callee5$(_context9) {\n                while (1) {\n                  switch (_context9.prev = _context9.next) {\n                    case 0:\n                      _context9.next = 2;\n                      return _regeneratorRuntime.awrap(getDetails(element.userUid));\n\n                    case 2:\n                      user = _context9.sent;\n                      element.email = user.email;\n                      element.firstName = user.firstName;\n                      element.lastName = user.lastName;\n                      element.city = user.city;\n                      element.distance = user.distance;\n                      element.img = user.img;\n\n                      if (index === array.length - 1) {\n                        calcScore(peopleYouMayKnow);\n                      }\n\n                    case 10:\n                    case \"end\":\n                      return _context9.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            });\n            setFriendsSuggestion(peopleYouMayKnow);\n            console.log(\"people you may know end\");\n            console.log(peopleYouMayKnow);\n            console.log(friendsArrDetails);\n            setLoading(true);\n\n          case 16:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function calcScore(peopleYouMayKnow) {\n    var maxDistance = Math.max.apply(Math, peopleYouMayKnow.map(function (o) {\n      return o.distance;\n    }));\n    var avgDistance = Math.floor(peopleYouMayKnow.reduce(function (r, c) {\n      return c.distance ? r + c.distance : r;\n    }, 0) / peopleYouMayKnow.length);\n    peopleYouMayKnow.forEach(function (element, index) {\n      var score = 0;\n      element.depth == 1 ? score += 1 : element.depth == 2 ? score += 0.45 : element.depth == 3 ? score += 0.15 : console.log(\"fail depth\");\n\n      if (!element.distance) {\n        element.distance = avgDistance;\n      }\n\n      if (element.distance <= 25) {\n        score += 1 - minMaxNormalize(element.distance, 25, 0) + 0.2;\n      } else score += 0.2 - minMaxNormalize(element.distance, maxDistance, 25) / 5;\n\n      var appearanceCounter = -1;\n      peopleYouMayKnow.forEach(function (item) {\n        if (element.userUid == item.userUid) {\n          appearanceCounter++;\n        }\n      });\n      element.numOfApp = appearanceCounter;\n      score += appearanceCounter * 0.15;\n      element.score = score;\n    });\n  }\n\n  function getDetails(TargetUid) {\n    var user;\n    return _regeneratorRuntime.async(function getDetails$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            user = '';\n            _context16.next = 3;\n            return _regeneratorRuntime.awrap(fetch(apiURLgetUser + TargetUid, {\n              method: 'GET',\n              headers: new Headers({\n                'Content-Type': 'application/json; charset=UTF-8',\n                'Accept': 'application/json; charset=UTF-8'\n              })\n            }).then(function (response) {\n              console.log('response.status', response.status);\n              return response.json();\n            }).then(function _callee8(data) {\n              return _regeneratorRuntime.async(function _callee8$(_context15) {\n                while (1) {\n                  switch (_context15.prev = _context15.next) {\n                    case 0:\n                      user = {\n                        uid: data.Uid,\n                        email: data.Email,\n                        firstName: data.FirstName,\n                        lastName: data.LastName,\n                        city: data.City,\n                        distance: Math.floor(getDistanceFromLatLonInKm(currentUser.lat, currentUser.lon, data.Lat, data.Lon)),\n                        img: data.Img\n                      };\n\n                    case 1:\n                    case \"end\":\n                      return _context15.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }, function (error) {\n              console.log(\"err get=\", error);\n            }));\n\n          case 3:\n            return _context16.abrupt(\"return\", user);\n\n          case 4:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getUserReviews(friendsUid) {\n    return _regeneratorRuntime.async(function getUserReviews$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            _context17.next = 2;\n            return _regeneratorRuntime.awrap(fetch(apiURLgetUserReviews + friendsUid.userUid, {\n              method: 'GET',\n              headers: new Headers({\n                'Content-Type': 'application/json; charset=UTF-8',\n                'Accept': 'application/json; charset=UTF-8'\n              })\n            }).then(function (response) {\n              console.log('response.status', response.status);\n              return response.json();\n            }).then(function (data) {\n              data.forEach(function (element) {\n                tempReviews.push(element);\n              });\n            }, function (error) {\n              console.log(\"err get=\", error);\n            }));\n\n          case 2:\n            setFriendsReviews(tempReviews);\n\n          case 3:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function selectedChef(email) {\n    return _regeneratorRuntime.async(function selectedChef$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            _context18.next = 2;\n            return _regeneratorRuntime.awrap(getDishes(email));\n\n          case 2:\n            _context18.next = 4;\n            return _regeneratorRuntime.awrap(chefsArr.forEach(function (element) {\n              if (element.Email == email) {\n                setCurrentChef(element);\n              }\n            }));\n\n          case 4:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getDishes(email) {\n    fetch(apiURLgetDishes + email + '/', {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json; charset=UTF-8'\n      })\n    }).then(function (response) {\n      console.log('response.status', response.status);\n      return response.json();\n    }).then(function (data) {\n      setCurrentChefDishes(data);\n    }, function (error) {\n      console.log(\"err get=\", error);\n    });\n  }\n\n  function getChefs() {\n    fetch(apiURLgetChefs, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json; charset=UTF-8'\n      })\n    }).then(function (response) {\n      console.log('response.status', response.status);\n      return response.json();\n    }).then(function (data) {\n      var tempChefs = [];\n      data.forEach(function (element) {\n        var chef = {\n          Address: element.Address,\n          DisplayName: element.DisplayName,\n          Email: element.Email,\n          FirstName: element.FirstName,\n          LastName: element.LastName,\n          PNumber: element.PNumber,\n          Lon: element.Lon,\n          Lat: element.Lat,\n          Rating: element.Rating,\n          FoodType: element.FoodType,\n          Img: element.Img,\n          DisFromUser: getDistanceFromLatLonInKm(currentUser.lat, currentUser.lon, element.Lat, element.Lon),\n          NumOfReviews: element.NumOfReviews\n        };\n        tempChefs.push(chef);\n      });\n      setChefsArr(tempChefs);\n    }, function (error) {\n      console.log(\"err get=\", error);\n    });\n    getFireStoreImg();\n  }\n\n  function clearUserContext() {\n    tempReviews = [];\n    setCurrentUser('');\n    setCurrentChef('');\n    setCurrentChefDishes(null);\n    setChefsArr('');\n    setFriendsArr(null);\n    setReviewsArr('');\n    setName('');\n    setEmail('');\n    setPassword('');\n    setUserID('');\n    setSelectedImage('');\n    setCart([]);\n    setOrders([]);\n    setFriendsInDepth('');\n    setFriendsArrDetails(null);\n    setFriendsReviews(null);\n    setFriendsSuggestion('');\n    setAllUsers([]);\n    console.log(peopleYouMayKnow);\n    peopleYouMayKnow = [];\n    console.log(peopleYouMayKnow);\n  }\n\n  var value = {\n    currentUser: currentUser,\n    setCurrentUser: setCurrentUser,\n    name: name,\n    email: email,\n    password: password,\n    userID: userID,\n    signup: signup,\n    signin: signin,\n    updateEmail: updateEmail,\n    updatePassword: updatePassword,\n    onLogin: onLogin,\n    Logout: Logout,\n    chefsArr: chefsArr,\n    selectedChef: selectedChef,\n    currentChefDishes: currentChefDishes,\n    setCurrentChefDishes: setCurrentChefDishes,\n    setCurrentChef: setCurrentChef,\n    currentChef: currentChef,\n    updateImage: updateImage,\n    cart: cart,\n    setCart: setCart,\n    sliderValue: sliderValue,\n    setSliderValue: setSliderValue,\n    setOrder: setOrder,\n    getOrders: getOrders,\n    orders: orders,\n    fireStoreImg: fireStoreImg,\n    getFireStoreImg: getFireStoreImg,\n    getConnections: getConnections,\n    friendsArr: friendsArr,\n    setFriendsArr: setFriendsArr,\n    friendsInDepth: friendsInDepth,\n    setFriendsInDepth: setFriendsInDepth,\n    friendsSuggestion: friendsSuggestion,\n    setFriendsSuggestion: setFriendsSuggestion,\n    friendsReviews: friendsReviews,\n    getDetails: getDetails,\n    friendsArrDetails: friendsArrDetails,\n    followUser: followUser,\n    unfollowUser: unfollowUser,\n    allUsers: allUsers,\n    orderLoading: orderLoading,\n    loading: loading,\n    currentOrder: currentOrder\n  };\n  return React.createElement(UserContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 9\n    }\n  }, children);\n}","map":{"version":3,"sources":["C:/Users/Shachar/Desktop/P/reactHomeals/src/UserContext.js"],"names":["fire","auth","React","useContext","useState","useEffect","dbFirestore","getDistanceFromLatLonInKm","minMaxNormalize","set","ScrollView","apiURLgetUser","apiURLgetUsers","apiURLpostUser","apiURLgetChefs","apiURLgetDishes","apiURLpostOrder","apiURLgetOrder","apiURLgetConnections","apiURLpostConnection","apiURLdeleteConnection","apiURLgetUserReviews","UserContext","createContext","UserUpdateContext","useUserContext","useUserUpdateContext","UserProvider","children","currentUser","setCurrentUser","currentChef","setCurrentChef","currentChefDishes","setCurrentChefDishes","chefsArr","setChefsArr","friendsArr","setFriendsArr","friendsArrDetails","setFriendsArrDetails","reviewsArr","setReviewsArr","value","error","name","setName","email","setEmail","password","setPassword","userID","setUserID","selectedImage","setSelectedImage","cart","setCart","sliderValue","setSliderValue","orders","setOrders","friendsInDepth","setFriendsInDepth","friendsReviews","setFriendsReviews","friendsSuggestion","setFriendsSuggestion","allUsers","setAllUsers","loading","setLoading","orderLoading","setOrderLoading","currentOrder","setCurrentOrder","peopleYouMayKnow","depth","tempReviews","getChefs","getUsers","tempArr","forEach","currFriend","getUserReviews","getDetails","userUid","tempFriend","push","console","log","fireStoreImg","firestore","collection","doc","uid","imgUrl","img","then","getFireStoreImg","temp","get","userImg","wP","docChanges","element","key","path","segments","proto","fields","stringValue","getOrders","fetch","method","headers","Headers","response","status","json","data","setOrder","sum","orderStr","Quantity","Price","Name","currentdate","Date","datetime","getDate","getMonth","getFullYear","getHours","getMinutes","newOrder","chefEmail","Email","orderTime","orderDescription","totalPrice","chef","DisplayName","body","JSON","stringify","ok","onLogin","Logout","signOut","clearUserContext","signin","callbackfunc","signInWithEmailAndPassword","onAuthStateChanged","authUser","user","Uid","firstName","FirstName","lastName","LastName","city","City","pNumber","PNumber","lon","Lon","lat","Lat","Img","flag","catch","err","code","alert","message","signup","phone","createUserWithEmailAndPassword","newUser","updateImage","updateEmail","updatePassword","users","currUser","distance","Math","floor","followUser","targetUid","connection","sourceUid","getFriends","unfollowUser","tempConnections","Connection","TargetUid","getConnections","tempFF","i","tempConnections2","j","fatherUid","score","numOfApp","length","index","array","calcScore","maxDistance","max","apply","map","o","avgDistance","reduce","r","c","appearanceCounter","item","friendsUid","selectedChef","getDishes","tempChefs","Address","Rating","FoodType","DisFromUser","NumOfReviews"],"mappings":"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","sourcesContent":["import fire from '../fire'\r\nimport { auth } from 'firebase'\r\nimport React, { useContext, useState, useEffect } from 'react'\r\nimport dbFirestore from '../fire'\r\nimport { getDistanceFromLatLonInKm } from '../helpers/calcDis'\r\nimport { minMaxNormalize } from '../helpers/normalize'\r\nimport { set } from 'ol/transform'\r\nimport { ScrollView } from 'react-native-gesture-handler'\r\n\r\n// Asaf\r\n/* let apiURLgetUser = \"http://192.168.1.33:50247/api/User/getUser/\"; \r\nlet apiURLgetUsers = \"http://192.168.1.33:50247/api/User/getUsers/\"; \r\nlet apiURLpostUser = \"http://192.168.1.33:50247/api/User/postUser/\";\r\nlet apiURLgetChefs = \"http://192.168.1.33:50247/api/Chef/getChefs/\";\r\nlet apiURLgetDishes = \"http://192.168.1.33:50247/api/Dish/getDishes/\";\r\nlet apiURLpostOrder = \"http://192.168.1.33:50247/api/Order/postOrder/\";\r\nlet apiURLgetOrder = \"http://192.168.1.33:50247/api/Order/getOrder/\";\r\nlet apiURLgetConnections = \"http://192.168.1.33:50247/api/Connection/getConnections/\";\r\nlet apiURLpostConnection = \"http://192.168.1.33:50247/api/Connection/Post/\";\r\nlet apiURLdeleteConnection = \"http://192.168.1.33:50247/api/Connection/Delete/\";\r\nlet apiURLgetUserReviews = \"http://192.168.1.33:50247/api/Review/getUserReviews/\"; */\r\n\r\n// Shachar\r\n/* let apiURLgetUser = \"http://192.168.31.156:50247/api/User/getUser/\"; \r\nlet apiURLgetUsers = \"http://192.168.31.156:50247/api/User/getUsers/\"; \r\nlet apiURLpostUser = \"http://192.168.31.156:50247/api/User/postUser/\";\r\nlet apiURLgetChefs = \"http://192.168.31.156:50247/api/Chef/getChefs/\";\r\nlet apiURLgetDishes = \"http://192.168.31.156:50247/api/Dish/getDishes/\";\r\nlet apiURLpostOrder = \"http://192.168.31.156:50247/api/Order/postOrder/\";\r\nlet apiURLgetOrder = \"http://192.168.31.156:50247/api/Order/getOrder/\";\r\nlet apiURLgetConnections = \"http://192.168.31.156:50247/api/Connection/getConnections/\";\r\nlet apiURLpostConnection = \"http://192.168.31.156:50247/api/Connection/Post/\";\r\nlet apiURLdeleteConnection = \"http://192.168.31.156:50247/api/Connection/Delete/\";\r\nlet apiURLgetUserReviews = \"http://192.168.31.156:50247/api/Review/getUserReviews/\";  */\r\n\r\n\r\n// proj ruppin - \r\nlet apiURLgetUser = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/User/getUser/\";\r\nlet apiURLgetUsers = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/User/getUsers/\";\r\nlet apiURLpostUser = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/User/postUser/\";\r\nlet apiURLgetChefs = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/Chef/getChefs/\";\r\nlet apiURLgetDishes = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/Dish/getDishes/\";\r\nlet apiURLpostOrder = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/Order/postOrder/\";\r\nlet apiURLgetOrder = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/Order/getOrder/\";\r\nlet apiURLgetConnections = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/Connection/getConnections/\";\r\nlet apiURLpostConnection = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/Connection/Post/\";\r\nlet apiURLdeleteConnection = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/Connection/Delete/\";\r\nlet apiURLgetUserReviews = \"http://proj.ruppin.ac.il/igroup30/Test2/tar6/api/Review/getUserReviews/\";\r\n\r\n// Sasson\r\n/*  let apiURLgetUser = \"http://192.168.31.124:50247/api/User/getUser/\"; \r\nlet apiURLgetUsers = \"http://192.168.31.124:50247/api/User/getUsers/\"; \r\nlet apiURLpostUser = \"http://192.168.31.124:50247/api/User/postUser/\";\r\nlet apiURLgetChefs = \"http://192.168.31.124:50247/api/Chef/getChefs/\";\r\nlet apiURLgetDishes = \"http://192.168.31.124:50247/api/Dish/getDishes/\";\r\nlet apiURLpostOrder = \"http://192.168.31.124:50247/api/Order/postOrder/\";\r\nlet apiURLgetOrder = \"http://192.168.31.124:50247/api/Order/getOrder/\";\r\nlet apiURLgetConnections = \"http://192.168.31.124:50247/api/Connection/getConnections/\";\r\nlet apiURLpostConnection = \"http://192.168.31.124:50247/api/Connection/Post/\";\r\nlet apiURLdeleteConnection = \"http://192.168.31.124:50247/api/Connection/Delete/\";\r\nlet apiURLgetUserReviews = \"http://192.168.31.124:50247/api/Review/getUserReviews/\";  */\r\n\r\n\r\nconst UserContext = React.createContext()\r\nconst UserUpdateContext = React.createContext()\r\n\r\n\r\n\r\nexport function useUserContext() {\r\n    return useContext(UserContext)\r\n}\r\n\r\nexport function useUserUpdateContext() {\r\n    return useContext(UserUpdateContext)\r\n}\r\n\r\nexport function UserProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState('')\r\n    const [currentChef, setCurrentChef] = useState('')\r\n    const [currentChefDishes, setCurrentChefDishes] = useState('')\r\n    const [chefsArr, setChefsArr] = useState('')\r\n    const [friendsArr, setFriendsArr] = useState('')\r\n    const [friendsArrDetails, setFriendsArrDetails] = useState('')\r\n    const [reviewsArr, setReviewsArr] = useState('')\r\n    const [name, setName] = useState({ value: '', error: '' })\r\n    const [email, setEmail] = useState({ value: '', error: '' })\r\n    const [password, setPassword] = useState({ value: '', error: '' })\r\n    const [userID, setUserID] = useState('')\r\n    const [selectedImage, setSelectedImage] = useState('');\r\n    const [cart, setCart] = useState([]);\r\n    const [sliderValue, setSliderValue] = useState(26);\r\n    const [orders, setOrders] = useState([]);\r\n    const [friendsInDepth, setFriendsInDepth] = useState('')\r\n    const [friendsReviews, setFriendsReviews] = useState('')\r\n    const [friendsSuggestion, setFriendsSuggestion] = useState('')\r\n    const [allUsers, setAllUsers] = useState([])\r\n    const [loading, setLoading] = useState(false);\r\n    const [orderLoading, setOrderLoading] = useState(false);\r\n    const [currentOrder, setCurrentOrder] = useState('')\r\n\r\n\r\n    var peopleYouMayKnow = []\r\n    var depth = 3;\r\n    let tempReviews = [];\r\n\r\n    // Hooks Section //\r\n\r\n    useEffect(() => {\r\n        getChefs();\r\n        getUsers();\r\n    }, [currentUser])\r\n\r\n    useEffect(() => {\r\n        if (friendsArr) {\r\n            let tempArr = [];\r\n            friendsArr.forEach(async currFriend => {\r\n                getUserReviews(currFriend)\r\n                let tempFriend = await getDetails(currFriend.userUid);\r\n                tempArr.push(tempFriend)\r\n            })\r\n            setFriendsArrDetails(tempArr);\r\n            console.log(\"Friends list:\")\r\n            console.log(friendsArr)\r\n        }\r\n    }, [friendsArr])\r\n\r\n\r\n    // Firebase communications section //\r\n\r\n    function fireStoreImg() {\r\n        dbFirestore.firestore()\r\n            .collection('userData')\r\n            .doc(currentUser.uid)\r\n            .set({\r\n                imgUrl: currentUser.img\r\n            })\r\n            .then(() => {\r\n                console.log('User added!');\r\n            });\r\n\r\n    }\r\n\r\n    async function getFireStoreImg() {\r\n        let temp = currentUser;\r\n\r\n        const userImg = await dbFirestore.firestore()\r\n            .collection('userData')\r\n            .get();\r\n        console.log(userImg)\r\n        userImg.wP.docChanges.forEach(element => {\r\n            if (currentUser.uid == element.doc.key.path.segments[6])\r\n                temp.img = element.doc.proto.fields.imgUrl.stringValue;\r\n        });\r\n        console.log(temp)\r\n        setCurrentUser(temp)\r\n    }\r\n\r\n    // Orders Section //\r\n\r\n\r\n\r\n    function getOrders() {\r\n        /* Get Orders from SQL */\r\n        fetch(apiURLgetOrder + currentUser.uid, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response.status', response.status);\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                setOrders(data);\r\n                console.log(data)\r\n                setOrderLoading(true);\r\n            },\r\n                (error) => {\r\n                    console.log(\"err get=\", error);\r\n                });\r\n    }\r\n\r\n    function setOrder() {\r\n        let sum = 0;\r\n        let orderStr = '';\r\n        cart.forEach(element => {\r\n            if (element.Quantity != 0 && element.Quantity) {\r\n                sum += (element.Quantity * element.Price)\r\n                orderStr += element.Quantity + 'x ' + element.Name + ' - ' + (element.Quantity * element.Price) + '; ';\r\n            }\r\n        });\r\n        var currentdate = new Date();\r\n        var datetime = currentdate.getDate() + \"/\"\r\n            + (currentdate.getMonth() + 1) + \"/\"\r\n            + currentdate.getFullYear() + \" - \"\r\n            + currentdate.getHours() + \":\"\r\n            + currentdate.getMinutes();\r\n\r\n        let newOrder = {\r\n            uid: currentUser.uid,\r\n            chefEmail: currentChef.Email,\r\n            orderTime: datetime,\r\n            orderDescription: orderStr,\r\n            totalPrice: sum,\r\n            chef: currentChef.DisplayName,\r\n            status:'open'\r\n\r\n        }\r\n        fetch(apiURLpostOrder, {\r\n            method: 'POST',\r\n            body: JSON.stringify(newOrder),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response=', response);\r\n                console.log('response.status', response.status);\r\n                console.log('response.ok', response.ok);\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                console.log(data)\r\n                setCurrentOrder(data)\r\n            })\r\n        /*  setCart([]);  */\r\n    }\r\n\r\n    // User Section //\r\n\r\n    function onLogin(email, userID) {\r\n        setEmail(email);\r\n        setUserID(userID);\r\n    }\r\n\r\n    function Logout() {\r\n        fire.auth().signOut();\r\n        clearUserContext();\r\n    }\r\n\r\n    async function signin(email, password, callbackfunc) {\r\n        let flag;\r\n        await fire.auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(async () => {\r\n                await fire.auth().onAuthStateChanged(async authUser => {\r\n                    if (authUser !== null) {\r\n                        /* Get User Details from SQL */\r\n                        await fetch(apiURLgetUser + authUser.uid, {\r\n                            method: 'GET',\r\n                            headers: new Headers({\r\n                                'Content-Type': 'application/json; charset=UTF-8',\r\n                                'Accept': 'application/json; charset=UTF-8'\r\n                            })\r\n                        })\r\n                            .then(response => {\r\n                                console.log('response.status', response.status);\r\n                                return response.json();\r\n                            })\r\n                            .then(async (data) => {\r\n                                const user = {\r\n                                    uid: data.Uid,\r\n                                    email: data.Email,\r\n                                    firstName: data.FirstName,\r\n                                    lastName: data.LastName,\r\n                                    city: data.City,\r\n                                    pNumber: data.PNumber,\r\n                                    lon: data.Lon,\r\n                                    lat: data.Lat,\r\n                                    img: data.Img\r\n                                }\r\n                                setCurrentUser(user);\r\n                                console.log(\"Current User Details:\")\r\n                                console.log(user)\r\n                                flag = true;\r\n                                callbackfunc(flag);\r\n                            },\r\n                                (error) => {\r\n                                    console.log(\"err get=\", error);\r\n\r\n                                })\r\n\r\n                    }\r\n                    else {\r\n                        setCurrentUser('');\r\n                    }\r\n                })\r\n            }\r\n            )\r\n            .catch(err => {\r\n                switch (err.code) {\r\n                    case \"auth/invalid-email\":\r\n                    case \"auth/user-disabled\":\r\n                    case \"auth/user-not-found\":\r\n                        alert(\"wrong Email\");\r\n                        console.log(err.message)\r\n                        break;\r\n                    case \"auth/wrong-password\":\r\n                        alert(\"wrong Password\");\r\n                        console.log(err.message)\r\n                        break;\r\n                }\r\n                flag = false;\r\n                callbackfunc(flag);\r\n            });\r\n    }\r\n\r\n    async function signup(firstName, lastName, city, phone, email, password, lon, lat) {\r\n        var flag = true;\r\n        await fire\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then(function (user) {\r\n                console.log(user.user.uid + \" / \" + email + \" / \" + firstName + \" / \" + lastName + \" / \" + city + \" / \" + phone)\r\n                const newUser = {\r\n                    uid: user.user.uid,\r\n                    email: email,\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    city: city,\r\n                    pNumber: phone,\r\n                    lon: lon,\r\n                    lat: lat\r\n                }\r\n                console.log(newUser);\r\n                fetch(apiURLpostUser, {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(newUser),\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json; charset=UTF-8',\r\n                        'Accept': 'application/json; charset=UTF-8'\r\n                    })\r\n                })\r\n                    .then(response => {\r\n                        console.log('response=', response);\r\n                        console.log('response.status', response.status);\r\n                        console.log('response.ok', response.ok);\r\n                        return response.json();\r\n                    })\r\n            })\r\n            .catch(err => {\r\n                switch (err.code) {\r\n                    case \"auth/email-already-in-use\":\r\n                    case \"auth/invalid-email\":\r\n                    case \"auth/weak-password\":\r\n                        alert(err.message);\r\n                        flag = false;\r\n                        break;\r\n                }\r\n            });\r\n\r\n\r\n        return flag;\r\n    }\r\n\r\n    function updateImage(img) {\r\n        currentUser.img = img;\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    function getUsers() {\r\n        let users = [];\r\n        fetch(apiURLgetUsers, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response.status', response.status);\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                data.forEach(element => {\r\n                    let currUser = {\r\n                        userUid: element.Uid,\r\n                        firstName: element.FirstName,\r\n                        lastName: element.LastName,\r\n                        email: element.Email,\r\n                        city: element.City,\r\n                        img: element.Img,\r\n                        lat: element.Lat,\r\n                        lon: element.Lon,\r\n                        pNumber: element.PNumber,\r\n                        distance: Math.floor(getDistanceFromLatLonInKm(currentUser.lat, currentUser.lon, element.Lat, element.Lon))\r\n                    }\r\n                    users.push(currUser)\r\n                });\r\n                setAllUsers(users);\r\n            },\r\n                (error) => {\r\n                    console.log(\"err get=\", error);\r\n                });\r\n    }\r\n\r\n    function followUser(targetUid) {\r\n        let connection = {\r\n            sourceUid: currentUser.uid,\r\n            targetUid: targetUid\r\n        }\r\n        fetch(apiURLpostConnection, {\r\n            method: 'POST',\r\n            body: JSON.stringify(connection),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response=', response);\r\n                console.log('response.status', response.status);\r\n                console.log('response.ok', response.ok);\r\n                return response.json();\r\n            })\r\n            .then(() => {\r\n                getFriends()\r\n            })\r\n    }\r\n\r\n    function unfollowUser(targetUid) {\r\n\r\n        let connection = {\r\n            sourceUid: currentUser.uid,\r\n            targetUid: targetUid\r\n        }\r\n        fetch(apiURLdeleteConnection, {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(connection),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response=', response);\r\n                console.log('response.status', response.status);\r\n                console.log('response.ok', response.ok);\r\n                return response.json();\r\n            })\r\n            .then(() => {\r\n                getFriends()\r\n\r\n            })\r\n\r\n\r\n    }\r\n    async function getFriends() {\r\n        let tempConnections = [];\r\n        await fetch(apiURLgetConnections + currentUser.uid, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response.status', response.status);\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                data.forEach(element => {\r\n                    const Connection = {\r\n                        userUid: element.TargetUid,\r\n                        depth: 0,\r\n\r\n                    }\r\n                    tempConnections.push(Connection);\r\n                });\r\n                setFriendsArr(tempConnections);\r\n                console.log(tempConnections)\r\n\r\n\r\n            },\r\n                (error) => {\r\n                    console.log(\"err get=\", error);\r\n                })\r\n\r\n    }\r\n\r\n    async function getConnections() {\r\n        let tempConnections = [];\r\n        let tempFF = [];\r\n        for (let i = 0; i < depth; i++) {\r\n            if (i == 0) {\r\n                await fetch(apiURLgetConnections + currentUser.uid, {\r\n                    method: 'GET',\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json; charset=UTF-8',\r\n                        'Accept': 'application/json; charset=UTF-8'\r\n                    })\r\n                })\r\n                    .then(response => {\r\n                        console.log('response.status', response.status);\r\n                        return response.json();\r\n                    })\r\n                    .then((data) => {\r\n                        data.forEach(element => {\r\n                            const Connection = {\r\n                                userUid: element.TargetUid,\r\n                                depth: i,\r\n\r\n                            }\r\n                            tempConnections.push(Connection);\r\n                        });\r\n                    },\r\n                        (error) => {\r\n                            console.log(\"err get=\", error);\r\n                        })\r\n                setFriendsArr(tempConnections);\r\n                /* getReviews(currentUser.uid); קריאה מיותרת וגם שולח משהו לא נכון ? */\r\n\r\n            }\r\n            else {\r\n                let tempConnections2 = [];\r\n                for (let j = 0; j < tempConnections.length; j++) {\r\n                    await fetch(apiURLgetConnections + tempConnections[j].userUid, {\r\n                        method: 'GET',\r\n                        headers: new Headers({\r\n                            'Content-Type': 'application/json; charset=UTF-8',\r\n                            'Accept': 'application/json; charset=UTF-8'\r\n                        })\r\n                    })\r\n                        .then(response => {\r\n                            console.log('response.status', response.status);\r\n                            return response.json();\r\n                        })\r\n                        .then((data) => {\r\n                            data.forEach(element => {\r\n                                const Connection = {\r\n                                    userUid: element.TargetUid,\r\n                                    fatherUid: tempConnections[j].userUid,\r\n                                    depth: i\r\n                                }\r\n                                tempConnections2.push(Connection);\r\n                            });\r\n                        },\r\n                            (error) => {\r\n                                console.log(\"err get=\", error);\r\n                            }).then(() => {\r\n                                tempConnections2.forEach(async (element) => {\r\n                                    /*  debugger */\r\n                                    let currUser = {\r\n                                        userUid: element.userUid,\r\n                                        fatherUid: tempConnections[j].userUid,\r\n                                        depth: i,\r\n                                        email: '',\r\n                                        firstName: '',\r\n                                        lastName: '',\r\n                                        city: '',\r\n                                        distance: '',\r\n                                        img: '',\r\n                                        score: '',\r\n                                        numOfApp: ''\r\n                                    }\r\n                                    peopleYouMayKnow.push(currUser);\r\n                                    tempFF.push(currUser);\r\n                                })\r\n                                tempConnections2 = [];\r\n                            })\r\n                }\r\n                tempConnections = tempFF;\r\n                tempFF = [];\r\n            }\r\n        }\r\n        peopleYouMayKnow.forEach(async (element, index, array) => {\r\n            let user = await getDetails(element.userUid);\r\n            element.email = user.email;\r\n            element.firstName = user.firstName;\r\n            element.lastName = user.lastName;\r\n            element.city = user.city;\r\n            element.distance = user.distance;\r\n            element.img = user.img;\r\n            if (index === (array.length - 1)) {\r\n                calcScore(peopleYouMayKnow);\r\n            }\r\n        })\r\n        setFriendsSuggestion(peopleYouMayKnow)\r\n        console.log(\"people you may know end\")\r\n        console.log(peopleYouMayKnow);\r\n        console.log(friendsArrDetails);\r\n        setLoading(true);\r\n    }\r\n\r\n\r\n\r\n    function calcScore(peopleYouMayKnow) {\r\n        let maxDistance = Math.max.apply(Math, peopleYouMayKnow.map(function (o) { return o.distance; }));\r\n        let avgDistance = Math.floor(peopleYouMayKnow.reduce((r, c) => c.distance ? r + c.distance : r, 0) / peopleYouMayKnow.length);\r\n        /* console.log(avgDistance) */\r\n        peopleYouMayKnow.forEach((element, index) => {\r\n            let score = 0;\r\n            /* console.log(element.distance) */\r\n            element.depth == 1 ? score += 1 : element.depth == 2 ? score += 0.45 : element.depth == 3 ? score += 0.15 : console.log(\"fail depth\");\r\n            /*  locationScore= ()/() */\r\n            if (!element.distance) {\r\n                element.distance = avgDistance;\r\n                /*  console.log(\"hi\")\r\n                 console.log(element.city)\r\n                 console.log(element.email) */\r\n            }\r\n            if (element.distance <= 25) {\r\n                score += (1 - minMaxNormalize(element.distance, 25, 0)) + 0.2;\r\n            }\r\n            else score += 0.2 - (minMaxNormalize(element.distance, maxDistance, 25) / 5)\r\n            let appearanceCounter = -1;\r\n            peopleYouMayKnow.forEach(item => {//Counting number of appearences\r\n                if (element.userUid == item.userUid) {\r\n                    appearanceCounter++;\r\n                }\r\n            });\r\n            element.numOfApp = appearanceCounter;\r\n            score += appearanceCounter * 0.15;\r\n            element.score = score;\r\n            /* let currUser = {\r\n                userUid: element.userUid,\r\n                fatherUid: element.fatherUid,\r\n                depth: element.depth,\r\n                email: element.email,\r\n                firstName: element.firstName,\r\n                lastName: element.lastName,\r\n                city: element.city,\r\n                distance: element.distance,\r\n                img: element.img,\r\n                score: score\r\n \r\n       } */\r\n\r\n        })\r\n    }\r\n\r\n    async function getDetails(TargetUid) {\r\n        let user = ''\r\n        await fetch(apiURLgetUser + TargetUid, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response.status', response.status);\r\n                return response.json();\r\n            })\r\n            .then(async (data) => {\r\n                user = {\r\n                    uid: data.Uid,\r\n                    email: data.Email,\r\n                    firstName: data.FirstName,\r\n                    lastName: data.LastName,\r\n                    city: data.City,\r\n                    distance: Math.floor(getDistanceFromLatLonInKm(currentUser.lat, currentUser.lon, data.Lat, data.Lon)),\r\n                    img: data.Img\r\n                }\r\n\r\n                /* console.log(user) */\r\n            },\r\n                (error) => {\r\n                    console.log(\"err get=\", error);\r\n                })\r\n\r\n        return user;\r\n    }\r\n\r\n    async function getUserReviews(friendsUid) {\r\n        await fetch(apiURLgetUserReviews + friendsUid.userUid, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response.status', response.status);\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                /*  console.log(data) */\r\n                data.forEach(element => {\r\n                    tempReviews.push(element)\r\n                });\r\n            },\r\n                (error) => {\r\n                    console.log(\"err get=\", error);\r\n                });\r\n        setFriendsReviews(tempReviews);\r\n    }\r\n\r\n\r\n\r\n    async function selectedChef(email) {\r\n        await getDishes(email);\r\n        await chefsArr.forEach(element => {\r\n            if (element.Email == email) {\r\n                setCurrentChef(element);\r\n            }\r\n        });\r\n    }\r\n\r\n    function getDishes(email) {\r\n        /* Get Dishes from SQL */\r\n        fetch(apiURLgetDishes + email + '/', {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response.status', response.status);\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                setCurrentChefDishes(data);\r\n            },\r\n                (error) => {\r\n                    console.log(\"err get=\", error);\r\n                });\r\n    }\r\n\r\n    function getChefs() {\r\n\r\n        /* Get Chefs from SQL */\r\n        fetch(apiURLgetChefs, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Accept': 'application/json; charset=UTF-8'\r\n            })\r\n        })\r\n            .then(response => {\r\n                console.log('response.status', response.status);\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                let tempChefs = [];\r\n                data.forEach(element => {\r\n                    const chef = {\r\n                        Address: element.Address,\r\n                        DisplayName: element.DisplayName,\r\n                        Email: element.Email,\r\n                        FirstName: element.FirstName,\r\n                        LastName: element.LastName,\r\n                        PNumber: element.PNumber,\r\n                        Lon: element.Lon,\r\n                        Lat: element.Lat,\r\n                        Rating: element.Rating,\r\n                        FoodType: element.FoodType,\r\n                        Img: element.Img,\r\n                        DisFromUser: getDistanceFromLatLonInKm(currentUser.lat, currentUser.lon, element.Lat, element.Lon),\r\n                        NumOfReviews: element.NumOfReviews\r\n                    }\r\n                    tempChefs.push(chef);\r\n                });\r\n                setChefsArr(tempChefs);\r\n\r\n            },\r\n                (error) => {\r\n                    console.log(\"err get=\", error);\r\n                });\r\n        getFireStoreImg()\r\n    }\r\n\r\n\r\n\r\n\r\n    /*  async function getConnections(sourceUid, depth) {\r\n        \r\n         let tempConnections = [];\r\n         await fetch(apiURLgetConnections + sourceUid, {\r\n             method: 'GET',\r\n             headers: new Headers({\r\n                 'Content-Type': 'application/json; charset=UTF-8',\r\n                 'Accept': 'application/json; charset=UTF-8'\r\n             })\r\n         })\r\n             .then(response => {\r\n                 console.log('response.status', response.status);\r\n                 return response.json();\r\n             })\r\n             .then((data) => {\r\n                 data.forEach(element => {\r\n                     const Connection = {\r\n                         userUid: element.TargetUid,\r\n                         depth: depth,\r\n                         distance: ''\r\n                     }\r\n                     tempConnections.push(Connection);\r\n                 });\r\n             },\r\n                 (error) => {\r\n                     console.log(\"err get=\", error);\r\n                 }).then(() => {\r\n                     if (sourceUid == currentUser.uid) {\r\n                         setFriendsArr(tempConnections)\r\n                         getReviews(sourceUid)\r\n                         console.log(tempConnections)\r\n                     }\r\n                     else {\r\n                         tempConnections.forEach((element) => {\r\n                             let currUser = {\r\n                                 userUid: element.userUid,\r\n                                 depth: depth,\r\n                                 distance: ''\r\n                             }\r\n                             peopleYouMayKnow.push(currUser)\r\n                         })\r\n                         console.log(peopleYouMayKnow)\r\n                         setTempUsers(peopleYouMayKnow)\r\n                     }\r\n                 })\r\n     } */\r\n\r\n\r\n\r\n    /*  function getFriendsInDepth(depth) {\r\n         let currentDepth = [];\r\n         friendsArr.forEach(currUser => {\r\n             currentDepth.push(currUser);\r\n         })\r\n         while (depth > 0) {\r\n     \r\n     \r\n             depth--;\r\n         }\r\n     } */\r\n\r\n\r\n\r\n\r\n    function clearUserContext() {\r\n        tempReviews = [];\r\n        setCurrentUser('');\r\n        setCurrentChef('');\r\n        setCurrentChefDishes(null);\r\n        setChefsArr('');\r\n        setFriendsArr(null);\r\n        setReviewsArr('');\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setUserID('');\r\n        setSelectedImage('');\r\n        setCart([]);\r\n        setOrders([]);\r\n        setFriendsInDepth('');\r\n        setFriendsArrDetails(null);\r\n        setFriendsReviews(null);\r\n        setFriendsSuggestion('');\r\n        setAllUsers([]);\r\n        console.log(peopleYouMayKnow);\r\n        peopleYouMayKnow = [];\r\n        console.log(peopleYouMayKnow);\r\n    }\r\n\r\n    const value = {\r\n        currentUser,\r\n        setCurrentUser,\r\n        name,\r\n        email,\r\n        password,\r\n        userID,\r\n        signup,\r\n        signin,\r\n        updateEmail,\r\n        updatePassword,\r\n        onLogin,\r\n        Logout,\r\n        chefsArr,\r\n        selectedChef,\r\n        currentChefDishes,\r\n        setCurrentChefDishes,\r\n        setCurrentChef,\r\n        currentChef,\r\n        updateImage,\r\n        cart,\r\n        setCart,\r\n        sliderValue,\r\n        setSliderValue,\r\n        setOrder,\r\n        getOrders,\r\n        orders,\r\n        fireStoreImg,\r\n        getFireStoreImg,\r\n        getConnections,\r\n        friendsArr,\r\n        setFriendsArr,\r\n        friendsInDepth,\r\n        setFriendsInDepth,\r\n        friendsSuggestion,\r\n        setFriendsSuggestion,\r\n        friendsReviews,\r\n        getDetails,\r\n        friendsArrDetails,\r\n        followUser,\r\n        unfollowUser,\r\n        allUsers,\r\n        orderLoading,\r\n        loading,\r\n        currentOrder\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={value}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}